/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/autoprefixer";
exports.ids = ["vendor-chunks/autoprefixer"];
exports.modules = {

/***/ "(ssr)/./node_modules/autoprefixer/data/prefixes.js":
/*!****************************************************!*\
  !*** ./node_modules/autoprefixer/data/prefixes.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet unpack = __webpack_require__(/*! caniuse-lite/dist/unpacker/feature */ \"(ssr)/./node_modules/caniuse-lite/dist/unpacker/feature.js\");\nfunction browsersSort(a, b) {\n    a = a.split(\" \");\n    b = b.split(\" \");\n    if (a[0] > b[0]) {\n        return 1;\n    } else if (a[0] < b[0]) {\n        return -1;\n    } else {\n        return Math.sign(parseFloat(a[1]) - parseFloat(b[1]));\n    }\n}\n// Convert Can I Use data\nfunction f(data, opts, callback) {\n    data = unpack(data);\n    if (!callback) {\n        ;\n        [callback, opts] = [\n            opts,\n            {}\n        ];\n    }\n    let match = opts.match || /\\sx($|\\s)/;\n    let need = [];\n    for(let browser in data.stats){\n        let versions = data.stats[browser];\n        for(let version in versions){\n            let support = versions[version];\n            if (support.match(match)) {\n                need.push(browser + \" \" + version);\n            }\n        }\n    }\n    callback(need.sort(browsersSort));\n}\n// Add data for all properties\nlet result = {};\nfunction prefix(names, data) {\n    for (let name of names){\n        result[name] = Object.assign({}, data);\n    }\n}\nfunction add(names, data) {\n    for (let name of names){\n        result[name].browsers = result[name].browsers.concat(data.browsers).sort(browsersSort);\n    }\n}\nmodule.exports = result;\n// Border Radius\nlet prefixBorderRadius = __webpack_require__(/*! caniuse-lite/data/features/border-radius */ \"(ssr)/./node_modules/caniuse-lite/data/features/border-radius.js\");\nf(prefixBorderRadius, (browsers)=>prefix([\n        \"border-radius\",\n        \"border-top-left-radius\",\n        \"border-top-right-radius\",\n        \"border-bottom-right-radius\",\n        \"border-bottom-left-radius\"\n    ], {\n        browsers,\n        feature: \"border-radius\",\n        mistakes: [\n            \"-khtml-\",\n            \"-ms-\",\n            \"-o-\"\n        ]\n    }));\n// Box Shadow\nlet prefixBoxshadow = __webpack_require__(/*! caniuse-lite/data/features/css-boxshadow */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-boxshadow.js\");\nf(prefixBoxshadow, (browsers)=>prefix([\n        \"box-shadow\"\n    ], {\n        browsers,\n        feature: \"css-boxshadow\",\n        mistakes: [\n            \"-khtml-\"\n        ]\n    }));\n// Animation\nlet prefixAnimation = __webpack_require__(/*! caniuse-lite/data/features/css-animation */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-animation.js\");\nf(prefixAnimation, (browsers)=>prefix([\n        \"animation\",\n        \"animation-name\",\n        \"animation-duration\",\n        \"animation-delay\",\n        \"animation-direction\",\n        \"animation-fill-mode\",\n        \"animation-iteration-count\",\n        \"animation-play-state\",\n        \"animation-timing-function\",\n        \"@keyframes\"\n    ], {\n        browsers,\n        feature: \"css-animation\",\n        mistakes: [\n            \"-khtml-\",\n            \"-ms-\"\n        ]\n    }));\n// Transition\nlet prefixTransition = __webpack_require__(/*! caniuse-lite/data/features/css-transitions */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-transitions.js\");\nf(prefixTransition, (browsers)=>prefix([\n        \"transition\",\n        \"transition-property\",\n        \"transition-duration\",\n        \"transition-delay\",\n        \"transition-timing-function\"\n    ], {\n        browsers,\n        feature: \"css-transitions\",\n        mistakes: [\n            \"-khtml-\",\n            \"-ms-\"\n        ]\n    }));\n// Transform 2D\nlet prefixTransform2d = __webpack_require__(/*! caniuse-lite/data/features/transforms2d */ \"(ssr)/./node_modules/caniuse-lite/data/features/transforms2d.js\");\nf(prefixTransform2d, (browsers)=>prefix([\n        \"transform\",\n        \"transform-origin\"\n    ], {\n        browsers,\n        feature: \"transforms2d\"\n    }));\n// Transform 3D\nlet prefixTransforms3d = __webpack_require__(/*! caniuse-lite/data/features/transforms3d */ \"(ssr)/./node_modules/caniuse-lite/data/features/transforms3d.js\");\nf(prefixTransforms3d, (browsers)=>{\n    prefix([\n        \"perspective\",\n        \"perspective-origin\"\n    ], {\n        browsers,\n        feature: \"transforms3d\"\n    });\n    return prefix([\n        \"transform-style\"\n    ], {\n        browsers,\n        feature: \"transforms3d\",\n        mistakes: [\n            \"-ms-\",\n            \"-o-\"\n        ]\n    });\n});\nf(prefixTransforms3d, {\n    match: /y\\sx|y\\s#2/\n}, (browsers)=>prefix([\n        \"backface-visibility\"\n    ], {\n        browsers,\n        feature: \"transforms3d\",\n        mistakes: [\n            \"-ms-\",\n            \"-o-\"\n        ]\n    }));\n// Gradients\nlet prefixGradients = __webpack_require__(/*! caniuse-lite/data/features/css-gradients */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-gradients.js\");\nf(prefixGradients, {\n    match: /y\\sx/\n}, (browsers)=>prefix([\n        \"linear-gradient\",\n        \"repeating-linear-gradient\",\n        \"radial-gradient\",\n        \"repeating-radial-gradient\"\n    ], {\n        browsers,\n        feature: \"css-gradients\",\n        mistakes: [\n            \"-ms-\"\n        ],\n        props: [\n            \"background\",\n            \"background-image\",\n            \"border-image\",\n            \"mask\",\n            \"list-style\",\n            \"list-style-image\",\n            \"content\",\n            \"mask-image\"\n        ]\n    }));\nf(prefixGradients, {\n    match: /a\\sx/\n}, (browsers)=>{\n    browsers = browsers.map((i)=>{\n        if (/firefox|op/.test(i)) {\n            return i;\n        } else {\n            return `${i} old`;\n        }\n    });\n    return add([\n        \"linear-gradient\",\n        \"repeating-linear-gradient\",\n        \"radial-gradient\",\n        \"repeating-radial-gradient\"\n    ], {\n        browsers,\n        feature: \"css-gradients\"\n    });\n});\n// Box sizing\nlet prefixBoxsizing = __webpack_require__(/*! caniuse-lite/data/features/css3-boxsizing */ \"(ssr)/./node_modules/caniuse-lite/data/features/css3-boxsizing.js\");\nf(prefixBoxsizing, (browsers)=>prefix([\n        \"box-sizing\"\n    ], {\n        browsers,\n        feature: \"css3-boxsizing\"\n    }));\n// Filter Effects\nlet prefixFilters = __webpack_require__(/*! caniuse-lite/data/features/css-filters */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-filters.js\");\nf(prefixFilters, (browsers)=>prefix([\n        \"filter\"\n    ], {\n        browsers,\n        feature: \"css-filters\"\n    }));\n// filter() function\nlet prefixFilterFunction = __webpack_require__(/*! caniuse-lite/data/features/css-filter-function */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-filter-function.js\");\nf(prefixFilterFunction, (browsers)=>prefix([\n        \"filter-function\"\n    ], {\n        browsers,\n        feature: \"css-filter-function\",\n        props: [\n            \"background\",\n            \"background-image\",\n            \"border-image\",\n            \"mask\",\n            \"list-style\",\n            \"list-style-image\",\n            \"content\",\n            \"mask-image\"\n        ]\n    }));\n// Backdrop-filter\nlet prefixBackdropFilter = __webpack_require__(/*! caniuse-lite/data/features/css-backdrop-filter */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-backdrop-filter.js\");\nf(prefixBackdropFilter, {\n    match: /y\\sx|y\\s#2/\n}, (browsers)=>prefix([\n        \"backdrop-filter\"\n    ], {\n        browsers,\n        feature: \"css-backdrop-filter\"\n    }));\n// element() function\nlet prefixElementFunction = __webpack_require__(/*! caniuse-lite/data/features/css-element-function */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-element-function.js\");\nf(prefixElementFunction, (browsers)=>prefix([\n        \"element\"\n    ], {\n        browsers,\n        feature: \"css-element-function\",\n        props: [\n            \"background\",\n            \"background-image\",\n            \"border-image\",\n            \"mask\",\n            \"list-style\",\n            \"list-style-image\",\n            \"content\",\n            \"mask-image\"\n        ]\n    }));\n// Multicolumns\nlet prefixMulticolumns = __webpack_require__(/*! caniuse-lite/data/features/multicolumn */ \"(ssr)/./node_modules/caniuse-lite/data/features/multicolumn.js\");\nf(prefixMulticolumns, (browsers)=>{\n    prefix([\n        \"columns\",\n        \"column-width\",\n        \"column-gap\",\n        \"column-rule\",\n        \"column-rule-color\",\n        \"column-rule-width\",\n        \"column-count\",\n        \"column-rule-style\",\n        \"column-span\",\n        \"column-fill\"\n    ], {\n        browsers,\n        feature: \"multicolumn\"\n    });\n    let noff = browsers.filter((i)=>!/firefox/.test(i));\n    prefix([\n        \"break-before\",\n        \"break-after\",\n        \"break-inside\"\n    ], {\n        browsers: noff,\n        feature: \"multicolumn\"\n    });\n});\n// User select\nlet prefixUserSelect = __webpack_require__(/*! caniuse-lite/data/features/user-select-none */ \"(ssr)/./node_modules/caniuse-lite/data/features/user-select-none.js\");\nf(prefixUserSelect, (browsers)=>prefix([\n        \"user-select\"\n    ], {\n        browsers,\n        feature: \"user-select-none\",\n        mistakes: [\n            \"-khtml-\"\n        ]\n    }));\n// Flexible Box Layout\nlet prefixFlexbox = __webpack_require__(/*! caniuse-lite/data/features/flexbox */ \"(ssr)/./node_modules/caniuse-lite/data/features/flexbox.js\");\nf(prefixFlexbox, {\n    match: /a\\sx/\n}, (browsers)=>{\n    browsers = browsers.map((i)=>{\n        if (/ie|firefox/.test(i)) {\n            return i;\n        } else {\n            return `${i} 2009`;\n        }\n    });\n    prefix([\n        \"display-flex\",\n        \"inline-flex\"\n    ], {\n        browsers,\n        feature: \"flexbox\",\n        props: [\n            \"display\"\n        ]\n    });\n    prefix([\n        \"flex\",\n        \"flex-grow\",\n        \"flex-shrink\",\n        \"flex-basis\"\n    ], {\n        browsers,\n        feature: \"flexbox\"\n    });\n    prefix([\n        \"flex-direction\",\n        \"flex-wrap\",\n        \"flex-flow\",\n        \"justify-content\",\n        \"order\",\n        \"align-items\",\n        \"align-self\",\n        \"align-content\"\n    ], {\n        browsers,\n        feature: \"flexbox\"\n    });\n});\nf(prefixFlexbox, {\n    match: /y\\sx/\n}, (browsers)=>{\n    add([\n        \"display-flex\",\n        \"inline-flex\"\n    ], {\n        browsers,\n        feature: \"flexbox\"\n    });\n    add([\n        \"flex\",\n        \"flex-grow\",\n        \"flex-shrink\",\n        \"flex-basis\"\n    ], {\n        browsers,\n        feature: \"flexbox\"\n    });\n    add([\n        \"flex-direction\",\n        \"flex-wrap\",\n        \"flex-flow\",\n        \"justify-content\",\n        \"order\",\n        \"align-items\",\n        \"align-self\",\n        \"align-content\"\n    ], {\n        browsers,\n        feature: \"flexbox\"\n    });\n});\n// calc() unit\nlet prefixCalc = __webpack_require__(/*! caniuse-lite/data/features/calc */ \"(ssr)/./node_modules/caniuse-lite/data/features/calc.js\");\nf(prefixCalc, (browsers)=>prefix([\n        \"calc\"\n    ], {\n        browsers,\n        feature: \"calc\",\n        props: [\n            \"*\"\n        ]\n    }));\n// Background options\nlet prefixBackgroundOptions = __webpack_require__(/*! caniuse-lite/data/features/background-img-opts */ \"(ssr)/./node_modules/caniuse-lite/data/features/background-img-opts.js\");\nf(prefixBackgroundOptions, (browsers)=>prefix([\n        \"background-origin\",\n        \"background-size\"\n    ], {\n        browsers,\n        feature: \"background-img-opts\"\n    }));\n// background-clip: text\nlet prefixBackgroundClipText = __webpack_require__(/*! caniuse-lite/data/features/background-clip-text */ \"(ssr)/./node_modules/caniuse-lite/data/features/background-clip-text.js\");\nf(prefixBackgroundClipText, (browsers)=>prefix([\n        \"background-clip\"\n    ], {\n        browsers,\n        feature: \"background-clip-text\"\n    }));\n// Font feature settings\nlet prefixFontFeature = __webpack_require__(/*! caniuse-lite/data/features/font-feature */ \"(ssr)/./node_modules/caniuse-lite/data/features/font-feature.js\");\nf(prefixFontFeature, (browsers)=>prefix([\n        \"font-feature-settings\",\n        \"font-variant-ligatures\",\n        \"font-language-override\"\n    ], {\n        browsers,\n        feature: \"font-feature\"\n    }));\n// CSS font-kerning property\nlet prefixFontKerning = __webpack_require__(/*! caniuse-lite/data/features/font-kerning */ \"(ssr)/./node_modules/caniuse-lite/data/features/font-kerning.js\");\nf(prefixFontKerning, (browsers)=>prefix([\n        \"font-kerning\"\n    ], {\n        browsers,\n        feature: \"font-kerning\"\n    }));\n// Border image\nlet prefixBorderImage = __webpack_require__(/*! caniuse-lite/data/features/border-image */ \"(ssr)/./node_modules/caniuse-lite/data/features/border-image.js\");\nf(prefixBorderImage, (browsers)=>prefix([\n        \"border-image\"\n    ], {\n        browsers,\n        feature: \"border-image\"\n    }));\n// Selection selector\nlet prefixSelection = __webpack_require__(/*! caniuse-lite/data/features/css-selection */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-selection.js\");\nf(prefixSelection, (browsers)=>prefix([\n        \"::selection\"\n    ], {\n        browsers,\n        feature: \"css-selection\",\n        selector: true\n    }));\n// Placeholder selector\nlet prefixPlaceholder = __webpack_require__(/*! caniuse-lite/data/features/css-placeholder */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-placeholder.js\");\nf(prefixPlaceholder, (browsers)=>{\n    prefix([\n        \"::placeholder\"\n    ], {\n        browsers: browsers.concat([\n            \"ie 10 old\",\n            \"ie 11 old\",\n            \"firefox 18 old\"\n        ]),\n        feature: \"css-placeholder\",\n        selector: true\n    });\n});\n// Placeholder-shown selector\nlet prefixPlaceholderShown = __webpack_require__(/*! caniuse-lite/data/features/css-placeholder-shown */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-placeholder-shown.js\");\nf(prefixPlaceholderShown, (browsers)=>{\n    prefix([\n        \":placeholder-shown\"\n    ], {\n        browsers,\n        feature: \"css-placeholder-shown\",\n        selector: true\n    });\n});\n// Hyphenation\nlet prefixHyphens = __webpack_require__(/*! caniuse-lite/data/features/css-hyphens */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-hyphens.js\");\nf(prefixHyphens, (browsers)=>prefix([\n        \"hyphens\"\n    ], {\n        browsers,\n        feature: \"css-hyphens\"\n    }));\n// Fullscreen selector\nlet prefixFullscreen = __webpack_require__(/*! caniuse-lite/data/features/fullscreen */ \"(ssr)/./node_modules/caniuse-lite/data/features/fullscreen.js\");\nf(prefixFullscreen, (browsers)=>prefix([\n        \":fullscreen\"\n    ], {\n        browsers,\n        feature: \"fullscreen\",\n        selector: true\n    }));\n// ::backdrop pseudo-element\n// https://caniuse.com/mdn-css_selectors_backdrop\nlet prefixBackdrop = __webpack_require__(/*! caniuse-lite/data/features/mdn-css-backdrop-pseudo-element */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-css-backdrop-pseudo-element.js\");\nf(prefixBackdrop, (browsers)=>prefix([\n        \"::backdrop\"\n    ], {\n        browsers,\n        feature: \"backdrop\",\n        selector: true\n    }));\n// File selector button\nlet prefixFileSelectorButton = __webpack_require__(/*! caniuse-lite/data/features/css-file-selector-button */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-file-selector-button.js\");\nf(prefixFileSelectorButton, (browsers)=>prefix([\n        \"::file-selector-button\"\n    ], {\n        browsers,\n        feature: \"file-selector-button\",\n        selector: true\n    }));\n// :autofill\nlet prefixAutofill = __webpack_require__(/*! caniuse-lite/data/features/css-autofill */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-autofill.js\");\nf(prefixAutofill, (browsers)=>prefix([\n        \":autofill\"\n    ], {\n        browsers,\n        feature: \"css-autofill\",\n        selector: true\n    }));\n// Tab size\nlet prefixTabsize = __webpack_require__(/*! caniuse-lite/data/features/css3-tabsize */ \"(ssr)/./node_modules/caniuse-lite/data/features/css3-tabsize.js\");\nf(prefixTabsize, (browsers)=>prefix([\n        \"tab-size\"\n    ], {\n        browsers,\n        feature: \"css3-tabsize\"\n    }));\n// Intrinsic & extrinsic sizing\nlet prefixIntrinsic = __webpack_require__(/*! caniuse-lite/data/features/intrinsic-width */ \"(ssr)/./node_modules/caniuse-lite/data/features/intrinsic-width.js\");\nlet sizeProps = [\n    \"width\",\n    \"min-width\",\n    \"max-width\",\n    \"height\",\n    \"min-height\",\n    \"max-height\",\n    \"inline-size\",\n    \"min-inline-size\",\n    \"max-inline-size\",\n    \"block-size\",\n    \"min-block-size\",\n    \"max-block-size\",\n    \"grid\",\n    \"grid-template\",\n    \"grid-template-rows\",\n    \"grid-template-columns\",\n    \"grid-auto-columns\",\n    \"grid-auto-rows\"\n];\nf(prefixIntrinsic, (browsers)=>prefix([\n        \"max-content\",\n        \"min-content\"\n    ], {\n        browsers,\n        feature: \"intrinsic-width\",\n        props: sizeProps\n    }));\nf(prefixIntrinsic, {\n    match: /x|\\s#4/\n}, (browsers)=>prefix([\n        \"fill\",\n        \"fill-available\"\n    ], {\n        browsers,\n        feature: \"intrinsic-width\",\n        props: sizeProps\n    }));\nf(prefixIntrinsic, {\n    match: /x|\\s#5/\n}, (browsers)=>{\n    let ffFix = browsers.filter((i)=>{\n        let [name, version] = i.split(\" \");\n        if (name === \"firefox\" || name === \"and_ff\") {\n            return parseInt(version) < 94;\n        } else {\n            return true;\n        }\n    });\n    return prefix([\n        \"fit-content\"\n    ], {\n        browsers: ffFix,\n        feature: \"intrinsic-width\",\n        props: sizeProps\n    });\n});\n// Stretch value\nlet prefixStretch = __webpack_require__(/*! caniuse-lite/data/features/css-width-stretch */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-width-stretch.js\");\nf(prefixStretch, (browsers)=>prefix([\n        \"stretch\"\n    ], {\n        browsers,\n        feature: \"css-width-stretch\",\n        props: sizeProps\n    }));\n// Zoom cursors\nlet prefixCursorsNewer = __webpack_require__(/*! caniuse-lite/data/features/css3-cursors-newer */ \"(ssr)/./node_modules/caniuse-lite/data/features/css3-cursors-newer.js\");\nf(prefixCursorsNewer, (browsers)=>prefix([\n        \"zoom-in\",\n        \"zoom-out\"\n    ], {\n        browsers,\n        feature: \"css3-cursors-newer\",\n        props: [\n            \"cursor\"\n        ]\n    }));\n// Grab cursors\nlet prefixCursorsGrab = __webpack_require__(/*! caniuse-lite/data/features/css3-cursors-grab */ \"(ssr)/./node_modules/caniuse-lite/data/features/css3-cursors-grab.js\");\nf(prefixCursorsGrab, (browsers)=>prefix([\n        \"grab\",\n        \"grabbing\"\n    ], {\n        browsers,\n        feature: \"css3-cursors-grab\",\n        props: [\n            \"cursor\"\n        ]\n    }));\n// Sticky position\nlet prefixSticky = __webpack_require__(/*! caniuse-lite/data/features/css-sticky */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-sticky.js\");\nf(prefixSticky, (browsers)=>prefix([\n        \"sticky\"\n    ], {\n        browsers,\n        feature: \"css-sticky\",\n        props: [\n            \"position\"\n        ]\n    }));\n// Pointer Events\nlet prefixPointer = __webpack_require__(/*! caniuse-lite/data/features/pointer */ \"(ssr)/./node_modules/caniuse-lite/data/features/pointer.js\");\nf(prefixPointer, (browsers)=>prefix([\n        \"touch-action\"\n    ], {\n        browsers,\n        feature: \"pointer\"\n    }));\n// Text decoration\nlet prefixDecoration = __webpack_require__(/*! caniuse-lite/data/features/text-decoration */ \"(ssr)/./node_modules/caniuse-lite/data/features/text-decoration.js\");\nf(prefixDecoration, {\n    match: /x.*#[235]/\n}, (browsers)=>prefix([\n        \"text-decoration-skip\",\n        \"text-decoration-skip-ink\"\n    ], {\n        browsers,\n        feature: \"text-decoration\"\n    }));\nlet prefixDecorationShorthand = __webpack_require__(/*! caniuse-lite/data/features/mdn-text-decoration-shorthand */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-text-decoration-shorthand.js\");\nf(prefixDecorationShorthand, (browsers)=>prefix([\n        \"text-decoration\"\n    ], {\n        browsers,\n        feature: \"text-decoration\"\n    }));\nlet prefixDecorationColor = __webpack_require__(/*! caniuse-lite/data/features/mdn-text-decoration-color */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-text-decoration-color.js\");\nf(prefixDecorationColor, (browsers)=>prefix([\n        \"text-decoration-color\"\n    ], {\n        browsers,\n        feature: \"text-decoration\"\n    }));\nlet prefixDecorationLine = __webpack_require__(/*! caniuse-lite/data/features/mdn-text-decoration-line */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-text-decoration-line.js\");\nf(prefixDecorationLine, (browsers)=>prefix([\n        \"text-decoration-line\"\n    ], {\n        browsers,\n        feature: \"text-decoration\"\n    }));\nlet prefixDecorationStyle = __webpack_require__(/*! caniuse-lite/data/features/mdn-text-decoration-style */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-text-decoration-style.js\");\nf(prefixDecorationStyle, (browsers)=>prefix([\n        \"text-decoration-style\"\n    ], {\n        browsers,\n        feature: \"text-decoration\"\n    }));\n// Text Size Adjust\nlet prefixTextSizeAdjust = __webpack_require__(/*! caniuse-lite/data/features/text-size-adjust */ \"(ssr)/./node_modules/caniuse-lite/data/features/text-size-adjust.js\");\nf(prefixTextSizeAdjust, (browsers)=>prefix([\n        \"text-size-adjust\"\n    ], {\n        browsers,\n        feature: \"text-size-adjust\"\n    }));\n// CSS Masks\nlet prefixCssMasks = __webpack_require__(/*! caniuse-lite/data/features/css-masks */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-masks.js\");\nf(prefixCssMasks, (browsers)=>{\n    prefix([\n        \"mask-clip\",\n        \"mask-composite\",\n        \"mask-image\",\n        \"mask-origin\",\n        \"mask-repeat\",\n        \"mask-border-repeat\",\n        \"mask-border-source\"\n    ], {\n        browsers,\n        feature: \"css-masks\"\n    });\n    prefix([\n        \"mask\",\n        \"mask-position\",\n        \"mask-size\",\n        \"mask-border\",\n        \"mask-border-outset\",\n        \"mask-border-width\",\n        \"mask-border-slice\"\n    ], {\n        browsers,\n        feature: \"css-masks\"\n    });\n});\n// CSS clip-path property\nlet prefixClipPath = __webpack_require__(/*! caniuse-lite/data/features/css-clip-path */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-clip-path.js\");\nf(prefixClipPath, (browsers)=>prefix([\n        \"clip-path\"\n    ], {\n        browsers,\n        feature: \"css-clip-path\"\n    }));\n// Fragmented Borders and Backgrounds\nlet prefixBoxdecoration = __webpack_require__(/*! caniuse-lite/data/features/css-boxdecorationbreak */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-boxdecorationbreak.js\");\nf(prefixBoxdecoration, (browsers)=>prefix([\n        \"box-decoration-break\"\n    ], {\n        browsers,\n        feature: \"css-boxdecorationbreak\"\n    }));\n// CSS3 object-fit/object-position\nlet prefixObjectFit = __webpack_require__(/*! caniuse-lite/data/features/object-fit */ \"(ssr)/./node_modules/caniuse-lite/data/features/object-fit.js\");\nf(prefixObjectFit, (browsers)=>prefix([\n        \"object-fit\",\n        \"object-position\"\n    ], {\n        browsers,\n        feature: \"object-fit\"\n    }));\n// CSS Shapes\nlet prefixShapes = __webpack_require__(/*! caniuse-lite/data/features/css-shapes */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-shapes.js\");\nf(prefixShapes, (browsers)=>prefix([\n        \"shape-margin\",\n        \"shape-outside\",\n        \"shape-image-threshold\"\n    ], {\n        browsers,\n        feature: \"css-shapes\"\n    }));\n// CSS3 text-overflow\nlet prefixTextOverflow = __webpack_require__(/*! caniuse-lite/data/features/text-overflow */ \"(ssr)/./node_modules/caniuse-lite/data/features/text-overflow.js\");\nf(prefixTextOverflow, (browsers)=>prefix([\n        \"text-overflow\"\n    ], {\n        browsers,\n        feature: \"text-overflow\"\n    }));\n// Viewport at-rule\nlet prefixDeviceadaptation = __webpack_require__(/*! caniuse-lite/data/features/css-deviceadaptation */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-deviceadaptation.js\");\nf(prefixDeviceadaptation, (browsers)=>prefix([\n        \"@viewport\"\n    ], {\n        browsers,\n        feature: \"css-deviceadaptation\"\n    }));\n// Resolution Media Queries\nlet prefixResolut = __webpack_require__(/*! caniuse-lite/data/features/css-media-resolution */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-media-resolution.js\");\nf(prefixResolut, {\n    match: /( x($| )|a #2)/\n}, (browsers)=>prefix([\n        \"@resolution\"\n    ], {\n        browsers,\n        feature: \"css-media-resolution\"\n    }));\n// CSS text-align-last\nlet prefixTextAlignLast = __webpack_require__(/*! caniuse-lite/data/features/css-text-align-last */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-text-align-last.js\");\nf(prefixTextAlignLast, (browsers)=>prefix([\n        \"text-align-last\"\n    ], {\n        browsers,\n        feature: \"css-text-align-last\"\n    }));\n// Crisp Edges Image Rendering Algorithm\nlet prefixCrispedges = __webpack_require__(/*! caniuse-lite/data/features/css-crisp-edges */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-crisp-edges.js\");\nf(prefixCrispedges, {\n    match: /y x|a x #1/\n}, (browsers)=>prefix([\n        \"pixelated\"\n    ], {\n        browsers,\n        feature: \"css-crisp-edges\",\n        props: [\n            \"image-rendering\"\n        ]\n    }));\nf(prefixCrispedges, {\n    match: /a x #2/\n}, (browsers)=>prefix([\n        \"image-rendering\"\n    ], {\n        browsers,\n        feature: \"css-crisp-edges\"\n    }));\n// Logical Properties\nlet prefixLogicalProps = __webpack_require__(/*! caniuse-lite/data/features/css-logical-props */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-logical-props.js\");\nf(prefixLogicalProps, (browsers)=>prefix([\n        \"border-inline-start\",\n        \"border-inline-end\",\n        \"margin-inline-start\",\n        \"margin-inline-end\",\n        \"padding-inline-start\",\n        \"padding-inline-end\"\n    ], {\n        browsers,\n        feature: \"css-logical-props\"\n    }));\nf(prefixLogicalProps, {\n    match: /x\\s#2/\n}, (browsers)=>prefix([\n        \"border-block-start\",\n        \"border-block-end\",\n        \"margin-block-start\",\n        \"margin-block-end\",\n        \"padding-block-start\",\n        \"padding-block-end\"\n    ], {\n        browsers,\n        feature: \"css-logical-props\"\n    }));\n// CSS appearance\nlet prefixAppearance = __webpack_require__(/*! caniuse-lite/data/features/css-appearance */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-appearance.js\");\nf(prefixAppearance, {\n    match: /#2|x/\n}, (browsers)=>prefix([\n        \"appearance\"\n    ], {\n        browsers,\n        feature: \"css-appearance\"\n    }));\n// CSS Scroll snap points\nlet prefixSnappoints = __webpack_require__(/*! caniuse-lite/data/features/css-snappoints */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-snappoints.js\");\nf(prefixSnappoints, (browsers)=>prefix([\n        \"scroll-snap-type\",\n        \"scroll-snap-coordinate\",\n        \"scroll-snap-destination\",\n        \"scroll-snap-points-x\",\n        \"scroll-snap-points-y\"\n    ], {\n        browsers,\n        feature: \"css-snappoints\"\n    }));\n// CSS Regions\nlet prefixRegions = __webpack_require__(/*! caniuse-lite/data/features/css-regions */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-regions.js\");\nf(prefixRegions, (browsers)=>prefix([\n        \"flow-into\",\n        \"flow-from\",\n        \"region-fragment\"\n    ], {\n        browsers,\n        feature: \"css-regions\"\n    }));\n// CSS image-set\nlet prefixImageSet = __webpack_require__(/*! caniuse-lite/data/features/css-image-set */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-image-set.js\");\nf(prefixImageSet, (browsers)=>prefix([\n        \"image-set\"\n    ], {\n        browsers,\n        feature: \"css-image-set\",\n        props: [\n            \"background\",\n            \"background-image\",\n            \"border-image\",\n            \"cursor\",\n            \"mask\",\n            \"mask-image\",\n            \"list-style\",\n            \"list-style-image\",\n            \"content\"\n        ]\n    }));\n// Writing Mode\nlet prefixWritingMode = __webpack_require__(/*! caniuse-lite/data/features/css-writing-mode */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-writing-mode.js\");\nf(prefixWritingMode, {\n    match: /a|x/\n}, (browsers)=>prefix([\n        \"writing-mode\"\n    ], {\n        browsers,\n        feature: \"css-writing-mode\"\n    }));\n// Cross-Fade Function\nlet prefixCrossFade = __webpack_require__(/*! caniuse-lite/data/features/css-cross-fade */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-cross-fade.js\");\nf(prefixCrossFade, (browsers)=>prefix([\n        \"cross-fade\"\n    ], {\n        browsers,\n        feature: \"css-cross-fade\",\n        props: [\n            \"background\",\n            \"background-image\",\n            \"border-image\",\n            \"mask\",\n            \"list-style\",\n            \"list-style-image\",\n            \"content\",\n            \"mask-image\"\n        ]\n    }));\n// Read Only selector\nlet prefixReadOnly = __webpack_require__(/*! caniuse-lite/data/features/css-read-only-write */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-read-only-write.js\");\nf(prefixReadOnly, (browsers)=>prefix([\n        \":read-only\",\n        \":read-write\"\n    ], {\n        browsers,\n        feature: \"css-read-only-write\",\n        selector: true\n    }));\n// Text Emphasize\nlet prefixTextEmphasis = __webpack_require__(/*! caniuse-lite/data/features/text-emphasis */ \"(ssr)/./node_modules/caniuse-lite/data/features/text-emphasis.js\");\nf(prefixTextEmphasis, (browsers)=>prefix([\n        \"text-emphasis\",\n        \"text-emphasis-position\",\n        \"text-emphasis-style\",\n        \"text-emphasis-color\"\n    ], {\n        browsers,\n        feature: \"text-emphasis\"\n    }));\n// CSS Grid Layout\nlet prefixGrid = __webpack_require__(/*! caniuse-lite/data/features/css-grid */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-grid.js\");\nf(prefixGrid, (browsers)=>{\n    prefix([\n        \"display-grid\",\n        \"inline-grid\"\n    ], {\n        browsers,\n        feature: \"css-grid\",\n        props: [\n            \"display\"\n        ]\n    });\n    prefix([\n        \"grid-template-columns\",\n        \"grid-template-rows\",\n        \"grid-row-start\",\n        \"grid-column-start\",\n        \"grid-row-end\",\n        \"grid-column-end\",\n        \"grid-row\",\n        \"grid-column\",\n        \"grid-area\",\n        \"grid-template\",\n        \"grid-template-areas\",\n        \"place-self\"\n    ], {\n        browsers,\n        feature: \"css-grid\"\n    });\n});\nf(prefixGrid, {\n    match: /a x/\n}, (browsers)=>prefix([\n        \"grid-column-align\",\n        \"grid-row-align\"\n    ], {\n        browsers,\n        feature: \"css-grid\"\n    }));\n// CSS text-spacing\nlet prefixTextSpacing = __webpack_require__(/*! caniuse-lite/data/features/css-text-spacing */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-text-spacing.js\");\nf(prefixTextSpacing, (browsers)=>prefix([\n        \"text-spacing\"\n    ], {\n        browsers,\n        feature: \"css-text-spacing\"\n    }));\n// :any-link selector\nlet prefixAnyLink = __webpack_require__(/*! caniuse-lite/data/features/css-any-link */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-any-link.js\");\nf(prefixAnyLink, (browsers)=>prefix([\n        \":any-link\"\n    ], {\n        browsers,\n        feature: \"css-any-link\",\n        selector: true\n    }));\n// unicode-bidi\nlet bidiIsolate = __webpack_require__(/*! caniuse-lite/data/features/mdn-css-unicode-bidi-isolate */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate.js\");\nf(bidiIsolate, (browsers)=>prefix([\n        \"isolate\"\n    ], {\n        browsers,\n        feature: \"css-unicode-bidi\",\n        props: [\n            \"unicode-bidi\"\n        ]\n    }));\nlet bidiPlaintext = __webpack_require__(/*! caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext.js\");\nf(bidiPlaintext, (browsers)=>prefix([\n        \"plaintext\"\n    ], {\n        browsers,\n        feature: \"css-unicode-bidi\",\n        props: [\n            \"unicode-bidi\"\n        ]\n    }));\nlet bidiOverride = __webpack_require__(/*! caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override */ \"(ssr)/./node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override.js\");\nf(bidiOverride, {\n    match: /y x/\n}, (browsers)=>prefix([\n        \"isolate-override\"\n    ], {\n        browsers,\n        feature: \"css-unicode-bidi\",\n        props: [\n            \"unicode-bidi\"\n        ]\n    }));\n// overscroll-behavior selector\nlet prefixOverscroll = __webpack_require__(/*! caniuse-lite/data/features/css-overscroll-behavior */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-overscroll-behavior.js\");\nf(prefixOverscroll, {\n    match: /a #1/\n}, (browsers)=>prefix([\n        \"overscroll-behavior\"\n    ], {\n        browsers,\n        feature: \"css-overscroll-behavior\"\n    }));\n// text-orientation\nlet prefixTextOrientation = __webpack_require__(/*! caniuse-lite/data/features/css-text-orientation */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-text-orientation.js\");\nf(prefixTextOrientation, (browsers)=>prefix([\n        \"text-orientation\"\n    ], {\n        browsers,\n        feature: \"css-text-orientation\"\n    }));\n// print-color-adjust\nlet prefixPrintAdjust = __webpack_require__(/*! caniuse-lite/data/features/css-print-color-adjust */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-print-color-adjust.js\");\nf(prefixPrintAdjust, (browsers)=>prefix([\n        \"print-color-adjust\",\n        \"color-adjust\"\n    ], {\n        browsers,\n        feature: \"css-print-color-adjust\"\n    }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/data/prefixes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/at-rule.js":
/*!**************************************************!*\
  !*** ./node_modules/autoprefixer/lib/at-rule.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Prefixer = __webpack_require__(/*! ./prefixer */ \"(ssr)/./node_modules/autoprefixer/lib/prefixer.js\");\nclass AtRule extends Prefixer {\n    /**\n   * Clone and add prefixes for at-rule\n   */ add(rule, prefix) {\n        let prefixed = prefix + rule.name;\n        let already = rule.parent.some((i)=>i.name === prefixed && i.params === rule.params);\n        if (already) {\n            return undefined;\n        }\n        let cloned = this.clone(rule, {\n            name: prefixed\n        });\n        return rule.parent.insertBefore(rule, cloned);\n    }\n    /**\n   * Clone node with prefixes\n   */ process(node) {\n        let parent = this.parentPrefix(node);\n        for (let prefix of this.prefixes){\n            if (!parent || parent === prefix) {\n                this.add(node, prefix);\n            }\n        }\n    }\n}\nmodule.exports = AtRule;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9hdC1ydWxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQztBQUV2QixNQUFNQyxlQUFlRjtJQUNuQjs7R0FFQyxHQUNERyxJQUFJQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNoQixJQUFJQyxXQUFXRCxTQUFTRCxLQUFLRyxJQUFJO1FBRWpDLElBQUlDLFVBQVVKLEtBQUtLLE1BQU0sQ0FBQ0MsSUFBSSxDQUM1QkMsQ0FBQUEsSUFBS0EsRUFBRUosSUFBSSxLQUFLRCxZQUFZSyxFQUFFQyxNQUFNLEtBQUtSLEtBQUtRLE1BQU07UUFFdEQsSUFBSUosU0FBUztZQUNYLE9BQU9LO1FBQ1Q7UUFFQSxJQUFJQyxTQUFTLElBQUksQ0FBQ0MsS0FBSyxDQUFDWCxNQUFNO1lBQUVHLE1BQU1EO1FBQVM7UUFDL0MsT0FBT0YsS0FBS0ssTUFBTSxDQUFDTyxZQUFZLENBQUNaLE1BQU1VO0lBQ3hDO0lBRUE7O0dBRUMsR0FDREcsUUFBUUMsSUFBSSxFQUFFO1FBQ1osSUFBSVQsU0FBUyxJQUFJLENBQUNVLFlBQVksQ0FBQ0Q7UUFFL0IsS0FBSyxJQUFJYixVQUFVLElBQUksQ0FBQ2UsUUFBUSxDQUFFO1lBQ2hDLElBQUksQ0FBQ1gsVUFBVUEsV0FBV0osUUFBUTtnQkFDaEMsSUFBSSxDQUFDRixHQUFHLENBQUNlLE1BQU1iO1lBQ2pCO1FBQ0Y7SUFDRjtBQUNGO0FBRUFnQixPQUFPQyxPQUFPLEdBQUdwQiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2F0LXJ1bGUuanM/ZjM4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgUHJlZml4ZXIgPSByZXF1aXJlKCcuL3ByZWZpeGVyJylcblxuY2xhc3MgQXRSdWxlIGV4dGVuZHMgUHJlZml4ZXIge1xuICAvKipcbiAgICogQ2xvbmUgYW5kIGFkZCBwcmVmaXhlcyBmb3IgYXQtcnVsZVxuICAgKi9cbiAgYWRkKHJ1bGUsIHByZWZpeCkge1xuICAgIGxldCBwcmVmaXhlZCA9IHByZWZpeCArIHJ1bGUubmFtZVxuXG4gICAgbGV0IGFscmVhZHkgPSBydWxlLnBhcmVudC5zb21lKFxuICAgICAgaSA9PiBpLm5hbWUgPT09IHByZWZpeGVkICYmIGkucGFyYW1zID09PSBydWxlLnBhcmFtc1xuICAgIClcbiAgICBpZiAoYWxyZWFkeSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKHJ1bGUsIHsgbmFtZTogcHJlZml4ZWQgfSlcbiAgICByZXR1cm4gcnVsZS5wYXJlbnQuaW5zZXJ0QmVmb3JlKHJ1bGUsIGNsb25lZClcbiAgfVxuXG4gIC8qKlxuICAgKiBDbG9uZSBub2RlIHdpdGggcHJlZml4ZXNcbiAgICovXG4gIHByb2Nlc3Mobm9kZSkge1xuICAgIGxldCBwYXJlbnQgPSB0aGlzLnBhcmVudFByZWZpeChub2RlKVxuXG4gICAgZm9yIChsZXQgcHJlZml4IG9mIHRoaXMucHJlZml4ZXMpIHtcbiAgICAgIGlmICghcGFyZW50IHx8IHBhcmVudCA9PT0gcHJlZml4KSB7XG4gICAgICAgIHRoaXMuYWRkKG5vZGUsIHByZWZpeClcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBdFJ1bGVcbiJdLCJuYW1lcyI6WyJQcmVmaXhlciIsInJlcXVpcmUiLCJBdFJ1bGUiLCJhZGQiLCJydWxlIiwicHJlZml4IiwicHJlZml4ZWQiLCJuYW1lIiwiYWxyZWFkeSIsInBhcmVudCIsInNvbWUiLCJpIiwicGFyYW1zIiwidW5kZWZpbmVkIiwiY2xvbmVkIiwiY2xvbmUiLCJpbnNlcnRCZWZvcmUiLCJwcm9jZXNzIiwibm9kZSIsInBhcmVudFByZWZpeCIsInByZWZpeGVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/at-rule.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/autoprefixer.js":
/*!*******************************************************!*\
  !*** ./node_modules/autoprefixer/lib/autoprefixer.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet browserslist = __webpack_require__(/*! browserslist */ \"(ssr)/./node_modules/browserslist/index.js\");\nlet { agents } = __webpack_require__(/*! caniuse-lite/dist/unpacker/agents */ \"(ssr)/./node_modules/caniuse-lite/dist/unpacker/agents.js\");\nlet pico = __webpack_require__(/*! picocolors */ \"(ssr)/./node_modules/picocolors/picocolors.js\");\nlet Browsers = __webpack_require__(/*! ./browsers */ \"(ssr)/./node_modules/autoprefixer/lib/browsers.js\");\nlet Prefixes = __webpack_require__(/*! ./prefixes */ \"(ssr)/./node_modules/autoprefixer/lib/prefixes.js\");\nlet dataPrefixes = __webpack_require__(/*! ../data/prefixes */ \"(ssr)/./node_modules/autoprefixer/data/prefixes.js\");\nlet getInfo = __webpack_require__(/*! ./info */ \"(ssr)/./node_modules/autoprefixer/lib/info.js\");\nlet autoprefixerData = {\n    browsers: agents,\n    prefixes: dataPrefixes\n};\nconst WARNING = \"\\n\" + \"  Replace Autoprefixer `browsers` option to Browserslist config.\\n\" + \"  Use `browserslist` key in `package.json` or `.browserslistrc` file.\\n\" + \"\\n\" + \"  Using `browsers` option can cause errors. Browserslist config can\\n\" + \"  be used for Babel, Autoprefixer, postcss-normalize and other tools.\\n\" + \"\\n\" + \"  If you really need to use option, rename it to `overrideBrowserslist`.\\n\" + \"\\n\" + \"  Learn more at:\\n\" + \"  https://github.com/browserslist/browserslist#readme\\n\" + \"  https://twitter.com/browserslist\\n\" + \"\\n\";\nfunction isPlainObject(obj) {\n    return Object.prototype.toString.apply(obj) === \"[object Object]\";\n}\nlet cache = new Map();\nfunction timeCapsule(result, prefixes) {\n    if (prefixes.browsers.selected.length === 0) {\n        return;\n    }\n    if (prefixes.add.selectors.length > 0) {\n        return;\n    }\n    if (Object.keys(prefixes.add).length > 2) {\n        return;\n    }\n    /* c8 ignore next 11 */ result.warn(\"Autoprefixer target browsers do not need any prefixes.\" + \"You do not need Autoprefixer anymore.\\n\" + \"Check your Browserslist config to be sure that your targets \" + \"are set up correctly.\\n\" + \"\\n\" + \"  Learn more at:\\n\" + \"  https://github.com/postcss/autoprefixer#readme\\n\" + \"  https://github.com/browserslist/browserslist#readme\\n\" + \"\\n\");\n}\nmodule.exports = plugin;\nfunction plugin(...reqs) {\n    let options;\n    if (reqs.length === 1 && isPlainObject(reqs[0])) {\n        options = reqs[0];\n        reqs = undefined;\n    } else if (reqs.length === 0 || reqs.length === 1 && !reqs[0]) {\n        reqs = undefined;\n    } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {\n        options = reqs[1];\n        reqs = reqs[0];\n    } else if (typeof reqs[reqs.length - 1] === \"object\") {\n        options = reqs.pop();\n    }\n    if (!options) {\n        options = {};\n    }\n    if (options.browser) {\n        throw new Error(\"Change `browser` option to `overrideBrowserslist` in Autoprefixer\");\n    } else if (options.browserslist) {\n        throw new Error(\"Change `browserslist` option to `overrideBrowserslist` in Autoprefixer\");\n    }\n    if (options.overrideBrowserslist) {\n        reqs = options.overrideBrowserslist;\n    } else if (options.browsers) {\n        if (typeof console !== \"undefined\" && console.warn) {\n            console.warn(pico.red(WARNING.replace(/`[^`]+`/g, (i)=>pico.yellow(i.slice(1, -1)))));\n        }\n        reqs = options.browsers;\n    }\n    let brwlstOpts = {\n        env: options.env,\n        ignoreUnknownVersions: options.ignoreUnknownVersions,\n        stats: options.stats\n    };\n    function loadPrefixes(opts) {\n        let d = autoprefixerData;\n        let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts);\n        let key = browsers.selected.join(\", \") + JSON.stringify(options);\n        if (!cache.has(key)) {\n            cache.set(key, new Prefixes(d.prefixes, browsers, options));\n        }\n        return cache.get(key);\n    }\n    return {\n        browsers: reqs,\n        info (opts) {\n            opts = opts || {};\n            opts.from = opts.from || process.cwd();\n            return getInfo(loadPrefixes(opts));\n        },\n        options,\n        postcssPlugin: \"autoprefixer\",\n        prepare (result) {\n            let prefixes = loadPrefixes({\n                env: options.env,\n                from: result.opts.from\n            });\n            return {\n                OnceExit (root) {\n                    timeCapsule(result, prefixes);\n                    if (options.remove !== false) {\n                        prefixes.processor.remove(root, result);\n                    }\n                    if (options.add !== false) {\n                        prefixes.processor.add(root, result);\n                    }\n                }\n            };\n        }\n    };\n}\nplugin.postcss = true;\n/**\n * Autoprefixer data\n */ plugin.data = autoprefixerData;\n/**\n * Autoprefixer default browsers\n */ plugin.defaults = browserslist.defaults;\n/**\n * Inspect with default Autoprefixer\n */ plugin.info = ()=>plugin().info();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/autoprefixer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/brackets.js":
/*!***************************************************!*\
  !*** ./node_modules/autoprefixer/lib/brackets.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction last(array) {\n    return array[array.length - 1];\n}\nlet brackets = {\n    /**\n   * Parse string to nodes tree\n   */ parse (str) {\n        let current = [\n            \"\"\n        ];\n        let stack = [\n            current\n        ];\n        for (let sym of str){\n            if (sym === \"(\") {\n                current = [\n                    \"\"\n                ];\n                last(stack).push(current);\n                stack.push(current);\n                continue;\n            }\n            if (sym === \")\") {\n                stack.pop();\n                current = last(stack);\n                current.push(\"\");\n                continue;\n            }\n            current[current.length - 1] += sym;\n        }\n        return stack[0];\n    },\n    /**\n   * Generate output string by nodes tree\n   */ stringify (ast) {\n        let result = \"\";\n        for (let i of ast){\n            if (typeof i === \"object\") {\n                result += `(${brackets.stringify(i)})`;\n                continue;\n            }\n            result += i;\n        }\n        return result;\n    }\n};\nmodule.exports = brackets;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9icmFja2V0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsS0FBS0MsS0FBSztJQUNqQixPQUFPQSxLQUFLLENBQUNBLE1BQU1DLE1BQU0sR0FBRyxFQUFFO0FBQ2hDO0FBRUEsSUFBSUMsV0FBVztJQUNiOztHQUVDLEdBQ0RDLE9BQU1DLEdBQUc7UUFDUCxJQUFJQyxVQUFVO1lBQUM7U0FBRztRQUNsQixJQUFJQyxRQUFRO1lBQUNEO1NBQVE7UUFFckIsS0FBSyxJQUFJRSxPQUFPSCxJQUFLO1lBQ25CLElBQUlHLFFBQVEsS0FBSztnQkFDZkYsVUFBVTtvQkFBQztpQkFBRztnQkFDZE4sS0FBS08sT0FBT0UsSUFBSSxDQUFDSDtnQkFDakJDLE1BQU1FLElBQUksQ0FBQ0g7Z0JBQ1g7WUFDRjtZQUVBLElBQUlFLFFBQVEsS0FBSztnQkFDZkQsTUFBTUcsR0FBRztnQkFDVEosVUFBVU4sS0FBS087Z0JBQ2ZELFFBQVFHLElBQUksQ0FBQztnQkFDYjtZQUNGO1lBRUFILE9BQU8sQ0FBQ0EsUUFBUUosTUFBTSxHQUFHLEVBQUUsSUFBSU07UUFDakM7UUFFQSxPQUFPRCxLQUFLLENBQUMsRUFBRTtJQUNqQjtJQUVBOztHQUVDLEdBQ0RJLFdBQVVDLEdBQUc7UUFDWCxJQUFJQyxTQUFTO1FBQ2IsS0FBSyxJQUFJQyxLQUFLRixJQUFLO1lBQ2pCLElBQUksT0FBT0UsTUFBTSxVQUFVO2dCQUN6QkQsVUFBVSxDQUFDLENBQUMsRUFBRVYsU0FBU1EsU0FBUyxDQUFDRyxHQUFHLENBQUMsQ0FBQztnQkFDdEM7WUFDRjtZQUVBRCxVQUFVQztRQUNaO1FBQ0EsT0FBT0Q7SUFDVDtBQUNGO0FBRUFFLE9BQU9DLE9BQU8sR0FBR2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9icmFja2V0cy5qcz84OGIzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGxhc3QoYXJyYXkpIHtcbiAgcmV0dXJuIGFycmF5W2FycmF5Lmxlbmd0aCAtIDFdXG59XG5cbmxldCBicmFja2V0cyA9IHtcbiAgLyoqXG4gICAqIFBhcnNlIHN0cmluZyB0byBub2RlcyB0cmVlXG4gICAqL1xuICBwYXJzZShzdHIpIHtcbiAgICBsZXQgY3VycmVudCA9IFsnJ11cbiAgICBsZXQgc3RhY2sgPSBbY3VycmVudF1cblxuICAgIGZvciAobGV0IHN5bSBvZiBzdHIpIHtcbiAgICAgIGlmIChzeW0gPT09ICcoJykge1xuICAgICAgICBjdXJyZW50ID0gWycnXVxuICAgICAgICBsYXN0KHN0YWNrKS5wdXNoKGN1cnJlbnQpXG4gICAgICAgIHN0YWNrLnB1c2goY3VycmVudClcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgaWYgKHN5bSA9PT0gJyknKSB7XG4gICAgICAgIHN0YWNrLnBvcCgpXG4gICAgICAgIGN1cnJlbnQgPSBsYXN0KHN0YWNrKVxuICAgICAgICBjdXJyZW50LnB1c2goJycpXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGN1cnJlbnRbY3VycmVudC5sZW5ndGggLSAxXSArPSBzeW1cbiAgICB9XG5cbiAgICByZXR1cm4gc3RhY2tbMF1cbiAgfSxcblxuICAvKipcbiAgICogR2VuZXJhdGUgb3V0cHV0IHN0cmluZyBieSBub2RlcyB0cmVlXG4gICAqL1xuICBzdHJpbmdpZnkoYXN0KSB7XG4gICAgbGV0IHJlc3VsdCA9ICcnXG4gICAgZm9yIChsZXQgaSBvZiBhc3QpIHtcbiAgICAgIGlmICh0eXBlb2YgaSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmVzdWx0ICs9IGAoJHticmFja2V0cy5zdHJpbmdpZnkoaSl9KWBcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgcmVzdWx0ICs9IGlcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYnJhY2tldHNcbiJdLCJuYW1lcyI6WyJsYXN0IiwiYXJyYXkiLCJsZW5ndGgiLCJicmFja2V0cyIsInBhcnNlIiwic3RyIiwiY3VycmVudCIsInN0YWNrIiwic3ltIiwicHVzaCIsInBvcCIsInN0cmluZ2lmeSIsImFzdCIsInJlc3VsdCIsImkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/brackets.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/browsers.js":
/*!***************************************************!*\
  !*** ./node_modules/autoprefixer/lib/browsers.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet browserslist = __webpack_require__(/*! browserslist */ \"(ssr)/./node_modules/browserslist/index.js\");\nlet { agents } = __webpack_require__(/*! caniuse-lite/dist/unpacker/agents */ \"(ssr)/./node_modules/caniuse-lite/dist/unpacker/agents.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass Browsers {\n    constructor(data, requirements, options, browserslistOpts){\n        this.data = data;\n        this.options = options || {};\n        this.browserslistOpts = browserslistOpts || {};\n        this.selected = this.parse(requirements);\n    }\n    /**\n   * Return all prefixes for default browser data\n   */ static prefixes() {\n        if (this.prefixesCache) {\n            return this.prefixesCache;\n        }\n        this.prefixesCache = [];\n        for(let name in agents){\n            this.prefixesCache.push(`-${agents[name].prefix}-`);\n        }\n        this.prefixesCache = utils.uniq(this.prefixesCache).sort((a, b)=>b.length - a.length);\n        return this.prefixesCache;\n    }\n    /**\n   * Check is value contain any possible prefix\n   */ static withPrefix(value) {\n        if (!this.prefixesRegexp) {\n            this.prefixesRegexp = new RegExp(this.prefixes().join(\"|\"));\n        }\n        return this.prefixesRegexp.test(value);\n    }\n    /**\n   * Is browser is selected by requirements\n   */ isSelected(browser) {\n        return this.selected.includes(browser);\n    }\n    /**\n   * Return browsers selected by requirements\n   */ parse(requirements) {\n        let opts = {};\n        for(let i in this.browserslistOpts){\n            opts[i] = this.browserslistOpts[i];\n        }\n        opts.path = this.options.from;\n        return browserslist(requirements, opts);\n    }\n    /**\n   * Return prefix for selected browser\n   */ prefix(browser) {\n        let [name, version] = browser.split(\" \");\n        let data = this.data[name];\n        let prefix = data.prefix_exceptions && data.prefix_exceptions[version];\n        if (!prefix) {\n            prefix = data.prefix;\n        }\n        return `-${prefix}-`;\n    }\n}\nmodule.exports = Browsers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9icm93c2Vycy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFDM0IsSUFBSSxFQUFFQyxNQUFNLEVBQUUsR0FBR0QsbUJBQU9BLENBQUM7QUFFekIsSUFBSUUsUUFBUUYsbUJBQU9BLENBQUM7QUFFcEIsTUFBTUc7SUFDSkMsWUFBWUMsSUFBSSxFQUFFQyxZQUFZLEVBQUVDLE9BQU8sRUFBRUMsZ0JBQWdCLENBQUU7UUFDekQsSUFBSSxDQUFDSCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDRSxPQUFPLEdBQUdBLFdBQVcsQ0FBQztRQUMzQixJQUFJLENBQUNDLGdCQUFnQixHQUFHQSxvQkFBb0IsQ0FBQztRQUM3QyxJQUFJLENBQUNDLFFBQVEsR0FBRyxJQUFJLENBQUNDLEtBQUssQ0FBQ0o7SUFDN0I7SUFFQTs7R0FFQyxHQUNELE9BQU9LLFdBQVc7UUFDaEIsSUFBSSxJQUFJLENBQUNDLGFBQWEsRUFBRTtZQUN0QixPQUFPLElBQUksQ0FBQ0EsYUFBYTtRQUMzQjtRQUVBLElBQUksQ0FBQ0EsYUFBYSxHQUFHLEVBQUU7UUFDdkIsSUFBSyxJQUFJQyxRQUFRWixPQUFRO1lBQ3ZCLElBQUksQ0FBQ1csYUFBYSxDQUFDRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUViLE1BQU0sQ0FBQ1ksS0FBSyxDQUFDRSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3BEO1FBRUEsSUFBSSxDQUFDSCxhQUFhLEdBQUdWLE1BQ2xCYyxJQUFJLENBQUMsSUFBSSxDQUFDSixhQUFhLEVBQ3ZCSyxJQUFJLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTUEsRUFBRUMsTUFBTSxHQUFHRixFQUFFRSxNQUFNO1FBRXJDLE9BQU8sSUFBSSxDQUFDUixhQUFhO0lBQzNCO0lBRUE7O0dBRUMsR0FDRCxPQUFPUyxXQUFXQyxLQUFLLEVBQUU7UUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQ0MsY0FBYyxFQUFFO1lBQ3hCLElBQUksQ0FBQ0EsY0FBYyxHQUFHLElBQUlDLE9BQU8sSUFBSSxDQUFDYixRQUFRLEdBQUdjLElBQUksQ0FBQztRQUN4RDtRQUVBLE9BQU8sSUFBSSxDQUFDRixjQUFjLENBQUNHLElBQUksQ0FBQ0o7SUFDbEM7SUFFQTs7R0FFQyxHQUNESyxXQUFXQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNuQixRQUFRLENBQUNvQixRQUFRLENBQUNEO0lBQ2hDO0lBRUE7O0dBRUMsR0FDRGxCLE1BQU1KLFlBQVksRUFBRTtRQUNsQixJQUFJd0IsT0FBTyxDQUFDO1FBQ1osSUFBSyxJQUFJQyxLQUFLLElBQUksQ0FBQ3ZCLGdCQUFnQixDQUFFO1lBQ25Dc0IsSUFBSSxDQUFDQyxFQUFFLEdBQUcsSUFBSSxDQUFDdkIsZ0JBQWdCLENBQUN1QixFQUFFO1FBQ3BDO1FBQ0FELEtBQUtFLElBQUksR0FBRyxJQUFJLENBQUN6QixPQUFPLENBQUMwQixJQUFJO1FBQzdCLE9BQU9sQyxhQUFhTyxjQUFjd0I7SUFDcEM7SUFFQTs7R0FFQyxHQUNEZixPQUFPYSxPQUFPLEVBQUU7UUFDZCxJQUFJLENBQUNmLE1BQU1xQixRQUFRLEdBQUdOLFFBQVFPLEtBQUssQ0FBQztRQUNwQyxJQUFJOUIsT0FBTyxJQUFJLENBQUNBLElBQUksQ0FBQ1EsS0FBSztRQUUxQixJQUFJRSxTQUFTVixLQUFLK0IsaUJBQWlCLElBQUkvQixLQUFLK0IsaUJBQWlCLENBQUNGLFFBQVE7UUFDdEUsSUFBSSxDQUFDbkIsUUFBUTtZQUNYQSxTQUFTVixLQUFLVSxNQUFNO1FBQ3RCO1FBQ0EsT0FBTyxDQUFDLENBQUMsRUFBRUEsT0FBTyxDQUFDLENBQUM7SUFDdEI7QUFDRjtBQUVBc0IsT0FBT0MsT0FBTyxHQUFHbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9icm93c2Vycy5qcz9jY2VlIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBicm93c2Vyc2xpc3QgPSByZXF1aXJlKCdicm93c2Vyc2xpc3QnKVxubGV0IHsgYWdlbnRzIH0gPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGlzdC91bnBhY2tlci9hZ2VudHMnKVxuXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuY2xhc3MgQnJvd3NlcnMge1xuICBjb25zdHJ1Y3RvcihkYXRhLCByZXF1aXJlbWVudHMsIG9wdGlvbnMsIGJyb3dzZXJzbGlzdE9wdHMpIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhXG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuICAgIHRoaXMuYnJvd3NlcnNsaXN0T3B0cyA9IGJyb3dzZXJzbGlzdE9wdHMgfHwge31cbiAgICB0aGlzLnNlbGVjdGVkID0gdGhpcy5wYXJzZShyZXF1aXJlbWVudHMpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGFsbCBwcmVmaXhlcyBmb3IgZGVmYXVsdCBicm93c2VyIGRhdGFcbiAgICovXG4gIHN0YXRpYyBwcmVmaXhlcygpIHtcbiAgICBpZiAodGhpcy5wcmVmaXhlc0NhY2hlKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcmVmaXhlc0NhY2hlXG4gICAgfVxuXG4gICAgdGhpcy5wcmVmaXhlc0NhY2hlID0gW11cbiAgICBmb3IgKGxldCBuYW1lIGluIGFnZW50cykge1xuICAgICAgdGhpcy5wcmVmaXhlc0NhY2hlLnB1c2goYC0ke2FnZW50c1tuYW1lXS5wcmVmaXh9LWApXG4gICAgfVxuXG4gICAgdGhpcy5wcmVmaXhlc0NhY2hlID0gdXRpbHNcbiAgICAgIC51bmlxKHRoaXMucHJlZml4ZXNDYWNoZSlcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLmxlbmd0aCAtIGEubGVuZ3RoKVxuXG4gICAgcmV0dXJuIHRoaXMucHJlZml4ZXNDYWNoZVxuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlzIHZhbHVlIGNvbnRhaW4gYW55IHBvc3NpYmxlIHByZWZpeFxuICAgKi9cbiAgc3RhdGljIHdpdGhQcmVmaXgodmFsdWUpIHtcbiAgICBpZiAoIXRoaXMucHJlZml4ZXNSZWdleHApIHtcbiAgICAgIHRoaXMucHJlZml4ZXNSZWdleHAgPSBuZXcgUmVnRXhwKHRoaXMucHJlZml4ZXMoKS5qb2luKCd8JykpXG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucHJlZml4ZXNSZWdleHAudGVzdCh2YWx1ZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyBicm93c2VyIGlzIHNlbGVjdGVkIGJ5IHJlcXVpcmVtZW50c1xuICAgKi9cbiAgaXNTZWxlY3RlZChicm93c2VyKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWQuaW5jbHVkZXMoYnJvd3NlcilcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gYnJvd3NlcnMgc2VsZWN0ZWQgYnkgcmVxdWlyZW1lbnRzXG4gICAqL1xuICBwYXJzZShyZXF1aXJlbWVudHMpIHtcbiAgICBsZXQgb3B0cyA9IHt9XG4gICAgZm9yIChsZXQgaSBpbiB0aGlzLmJyb3dzZXJzbGlzdE9wdHMpIHtcbiAgICAgIG9wdHNbaV0gPSB0aGlzLmJyb3dzZXJzbGlzdE9wdHNbaV1cbiAgICB9XG4gICAgb3B0cy5wYXRoID0gdGhpcy5vcHRpb25zLmZyb21cbiAgICByZXR1cm4gYnJvd3NlcnNsaXN0KHJlcXVpcmVtZW50cywgb3B0cylcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJlZml4IGZvciBzZWxlY3RlZCBicm93c2VyXG4gICAqL1xuICBwcmVmaXgoYnJvd3Nlcikge1xuICAgIGxldCBbbmFtZSwgdmVyc2lvbl0gPSBicm93c2VyLnNwbGl0KCcgJylcbiAgICBsZXQgZGF0YSA9IHRoaXMuZGF0YVtuYW1lXVxuXG4gICAgbGV0IHByZWZpeCA9IGRhdGEucHJlZml4X2V4Y2VwdGlvbnMgJiYgZGF0YS5wcmVmaXhfZXhjZXB0aW9uc1t2ZXJzaW9uXVxuICAgIGlmICghcHJlZml4KSB7XG4gICAgICBwcmVmaXggPSBkYXRhLnByZWZpeFxuICAgIH1cbiAgICByZXR1cm4gYC0ke3ByZWZpeH0tYFxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQnJvd3NlcnNcbiJdLCJuYW1lcyI6WyJicm93c2Vyc2xpc3QiLCJyZXF1aXJlIiwiYWdlbnRzIiwidXRpbHMiLCJCcm93c2VycyIsImNvbnN0cnVjdG9yIiwiZGF0YSIsInJlcXVpcmVtZW50cyIsIm9wdGlvbnMiLCJicm93c2Vyc2xpc3RPcHRzIiwic2VsZWN0ZWQiLCJwYXJzZSIsInByZWZpeGVzIiwicHJlZml4ZXNDYWNoZSIsIm5hbWUiLCJwdXNoIiwicHJlZml4IiwidW5pcSIsInNvcnQiLCJhIiwiYiIsImxlbmd0aCIsIndpdGhQcmVmaXgiLCJ2YWx1ZSIsInByZWZpeGVzUmVnZXhwIiwiUmVnRXhwIiwiam9pbiIsInRlc3QiLCJpc1NlbGVjdGVkIiwiYnJvd3NlciIsImluY2x1ZGVzIiwib3B0cyIsImkiLCJwYXRoIiwiZnJvbSIsInZlcnNpb24iLCJzcGxpdCIsInByZWZpeF9leGNlcHRpb25zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/browsers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/declaration.js":
/*!******************************************************!*\
  !*** ./node_modules/autoprefixer/lib/declaration.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Prefixer = __webpack_require__(/*! ./prefixer */ \"(ssr)/./node_modules/autoprefixer/lib/prefixer.js\");\nlet Browsers = __webpack_require__(/*! ./browsers */ \"(ssr)/./node_modules/autoprefixer/lib/browsers.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass Declaration extends Prefixer {\n    /**\n   * Clone and add prefixes for declaration\n   */ add(decl, prefix, prefixes, result) {\n        let prefixed = this.prefixed(decl.prop, prefix);\n        if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {\n            return undefined;\n        }\n        return this.insert(decl, prefix, prefixes, result);\n    }\n    /**\n   * Calculate indentation to create visual cascade\n   */ calcBefore(prefixes, decl, prefix = \"\") {\n        let max = this.maxPrefixed(prefixes, decl);\n        let diff = max - utils.removeNote(prefix).length;\n        let before = decl.raw(\"before\");\n        if (diff > 0) {\n            before += Array(diff).fill(\" \").join(\"\");\n        }\n        return before;\n    }\n    /**\n   * Always true, because we already get prefixer by property name\n   */ check() {\n        return true;\n    }\n    /**\n   * Clone and insert new declaration\n   */ insert(decl, prefix, prefixes) {\n        let cloned = this.set(this.clone(decl), prefix);\n        if (!cloned) return undefined;\n        let already = decl.parent.some((i)=>i.prop === cloned.prop && i.value === cloned.value);\n        if (already) {\n            return undefined;\n        }\n        if (this.needCascade(decl)) {\n            cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, cloned);\n    }\n    /**\n   * Did this declaration has this prefix above\n   */ isAlready(decl, prefixed) {\n        let already = this.all.group(decl).up((i)=>i.prop === prefixed);\n        if (!already) {\n            already = this.all.group(decl).down((i)=>i.prop === prefixed);\n        }\n        return already;\n    }\n    /**\n   * Return maximum length of possible prefixed property\n   */ maxPrefixed(prefixes, decl) {\n        if (decl._autoprefixerMax) {\n            return decl._autoprefixerMax;\n        }\n        let max = 0;\n        for (let prefix of prefixes){\n            prefix = utils.removeNote(prefix);\n            if (prefix.length > max) {\n                max = prefix.length;\n            }\n        }\n        decl._autoprefixerMax = max;\n        return decl._autoprefixerMax;\n    }\n    /**\n   * Should we use visual cascade for prefixes\n   */ needCascade(decl) {\n        if (!decl._autoprefixerCascade) {\n            decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw(\"before\").includes(\"\\n\");\n        }\n        return decl._autoprefixerCascade;\n    }\n    /**\n   * Return unprefixed version of property\n   */ normalize(prop) {\n        return prop;\n    }\n    /**\n   * Return list of prefixed properties to clean old prefixes\n   */ old(prop, prefix) {\n        return [\n            this.prefixed(prop, prefix)\n        ];\n    }\n    /**\n   * Check `value`, that it contain other prefixes, rather than `prefix`\n   */ otherPrefixes(value, prefix) {\n        for (let other of Browsers.prefixes()){\n            if (other === prefix) {\n                continue;\n            }\n            if (value.includes(other)) {\n                return value.replace(/var\\([^)]+\\)/, \"\").includes(other);\n            }\n        }\n        return false;\n    }\n    /**\n   * Return prefixed version of property\n   */ prefixed(prop, prefix) {\n        return prefix + prop;\n    }\n    /**\n   * Add spaces for visual cascade\n   */ process(decl, result) {\n        if (!this.needCascade(decl)) {\n            super.process(decl, result);\n            return;\n        }\n        let prefixes = super.process(decl, result);\n        if (!prefixes || !prefixes.length) {\n            return;\n        }\n        this.restoreBefore(decl);\n        decl.raws.before = this.calcBefore(prefixes, decl);\n    }\n    /**\n   * Remove visual cascade\n   */ restoreBefore(decl) {\n        let lines = decl.raw(\"before\").split(\"\\n\");\n        let min = lines[lines.length - 1];\n        this.all.group(decl).up((prefixed)=>{\n            let array = prefixed.raw(\"before\").split(\"\\n\");\n            let last = array[array.length - 1];\n            if (last.length < min.length) {\n                min = last;\n            }\n        });\n        lines[lines.length - 1] = min;\n        decl.raws.before = lines.join(\"\\n\");\n    }\n    /**\n   * Set prefix to declaration\n   */ set(decl, prefix) {\n        decl.prop = this.prefixed(decl.prop, prefix);\n        return decl;\n    }\n}\nmodule.exports = Declaration;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/declaration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/align-content.js":
/*!**************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/align-content.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass AlignContent extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"align-content\";\n    }\n    /**\n   * Change property name for 2012 spec\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2012) {\n            return prefix + \"flex-line-pack\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */ set(decl, prefix) {\n        let spec = flexSpec(prefix)[0];\n        if (spec === 2012) {\n            decl.value = AlignContent.oldValues[decl.value] || decl.value;\n            return super.set(decl, prefix);\n        }\n        if (spec === \"final\") {\n            return super.set(decl, prefix);\n        }\n        return undefined;\n    }\n}\nAlignContent.names = [\n    \"align-content\",\n    \"flex-line-pack\"\n];\nAlignContent.oldValues = {\n    \"flex-end\": \"end\",\n    \"flex-start\": \"start\",\n    \"space-around\": \"distribute\",\n    \"space-between\": \"justify\"\n};\nmodule.exports = AlignContent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hbGlnbi1jb250ZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQztBQUN2QixJQUFJQyxjQUFjRCxtQkFBT0EsQ0FBQztBQUUxQixNQUFNRSxxQkFBcUJEO0lBQ3pCOztHQUVDLEdBQ0RFLFlBQVk7UUFDVixPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNyQixJQUFJQztRQUNILENBQUNBLE1BQU1ELE9BQU8sR0FBR1AsU0FBU087UUFDM0IsSUFBSUMsU0FBUyxNQUFNO1lBQ2pCLE9BQU9ELFNBQVM7UUFDbEI7UUFDQSxPQUFPLEtBQUssQ0FBQ0YsU0FBU0MsTUFBTUM7SUFDOUI7SUFFQTs7R0FFQyxHQUNERSxJQUFJQyxJQUFJLEVBQUVILE1BQU0sRUFBRTtRQUNoQixJQUFJQyxPQUFPUixTQUFTTyxPQUFPLENBQUMsRUFBRTtRQUM5QixJQUFJQyxTQUFTLE1BQU07WUFDakJFLEtBQUtDLEtBQUssR0FBR1IsYUFBYVMsU0FBUyxDQUFDRixLQUFLQyxLQUFLLENBQUMsSUFBSUQsS0FBS0MsS0FBSztZQUM3RCxPQUFPLEtBQUssQ0FBQ0YsSUFBSUMsTUFBTUg7UUFDekI7UUFDQSxJQUFJQyxTQUFTLFNBQVM7WUFDcEIsT0FBTyxLQUFLLENBQUNDLElBQUlDLE1BQU1IO1FBQ3pCO1FBQ0EsT0FBT007SUFDVDtBQUNGO0FBRUFWLGFBQWFXLEtBQUssR0FBRztJQUFDO0lBQWlCO0NBQWlCO0FBRXhEWCxhQUFhUyxTQUFTLEdBQUc7SUFDdkIsWUFBWTtJQUNaLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ25CO0FBRUFHLE9BQU9DLE9BQU8sR0FBR2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hbGlnbi1jb250ZW50LmpzP2E3N2MiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBBbGlnbkNvbnRlbnQgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdhbGlnbi1jb250ZW50J1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciAyMDEyIHNwZWNcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjID09PSAyMDEyKSB7XG4gICAgICByZXR1cm4gcHJlZml4ICsgJ2ZsZXgtbGluZS1wYWNrJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSB2YWx1ZSBmb3IgMjAxMiBzcGVjIGFuZCBpZ25vcmUgcHJlZml4IGZvciAyMDA5XG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWMgPSBmbGV4U3BlYyhwcmVmaXgpWzBdXG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIGRlY2wudmFsdWUgPSBBbGlnbkNvbnRlbnQub2xkVmFsdWVzW2RlY2wudmFsdWVdIHx8IGRlY2wudmFsdWVcbiAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICBpZiAoc3BlYyA9PT0gJ2ZpbmFsJykge1xuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5BbGlnbkNvbnRlbnQubmFtZXMgPSBbJ2FsaWduLWNvbnRlbnQnLCAnZmxleC1saW5lLXBhY2snXVxuXG5BbGlnbkNvbnRlbnQub2xkVmFsdWVzID0ge1xuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnc3BhY2UtYXJvdW5kJzogJ2Rpc3RyaWJ1dGUnLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5J1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFsaWduQ29udGVudFxuIl0sIm5hbWVzIjpbImZsZXhTcGVjIiwicmVxdWlyZSIsIkRlY2xhcmF0aW9uIiwiQWxpZ25Db250ZW50Iiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4Iiwic3BlYyIsInNldCIsImRlY2wiLCJ2YWx1ZSIsIm9sZFZhbHVlcyIsInVuZGVmaW5lZCIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/align-content.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/align-items.js":
/*!************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/align-items.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass AlignItems extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"align-items\";\n    }\n    /**\n   * Change property name for 2009 and 2012 specs\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2009) {\n            return prefix + \"box-align\";\n        }\n        if (spec === 2012) {\n            return prefix + \"flex-align\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Change value for 2009 and 2012 specs\n   */ set(decl, prefix) {\n        let spec = flexSpec(prefix)[0];\n        if (spec === 2009 || spec === 2012) {\n            decl.value = AlignItems.oldValues[decl.value] || decl.value;\n        }\n        return super.set(decl, prefix);\n    }\n}\nAlignItems.names = [\n    \"align-items\",\n    \"flex-align\",\n    \"box-align\"\n];\nAlignItems.oldValues = {\n    \"flex-end\": \"end\",\n    \"flex-start\": \"start\"\n};\nmodule.exports = AlignItems;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hbGlnbi1pdGVtcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUUsbUJBQW1CRDtJQUN2Qjs7R0FFQyxHQUNERSxZQUFZO1FBQ1YsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDREMsU0FBU0MsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDckIsSUFBSUM7UUFDSCxDQUFDQSxNQUFNRCxPQUFPLEdBQUdQLFNBQVNPO1FBQzNCLElBQUlDLFNBQVMsTUFBTTtZQUNqQixPQUFPRCxTQUFTO1FBQ2xCO1FBQ0EsSUFBSUMsU0FBUyxNQUFNO1lBQ2pCLE9BQU9ELFNBQVM7UUFDbEI7UUFDQSxPQUFPLEtBQUssQ0FBQ0YsU0FBU0MsTUFBTUM7SUFDOUI7SUFFQTs7R0FFQyxHQUNERSxJQUFJQyxJQUFJLEVBQUVILE1BQU0sRUFBRTtRQUNoQixJQUFJQyxPQUFPUixTQUFTTyxPQUFPLENBQUMsRUFBRTtRQUM5QixJQUFJQyxTQUFTLFFBQVFBLFNBQVMsTUFBTTtZQUNsQ0UsS0FBS0MsS0FBSyxHQUFHUixXQUFXUyxTQUFTLENBQUNGLEtBQUtDLEtBQUssQ0FBQyxJQUFJRCxLQUFLQyxLQUFLO1FBQzdEO1FBQ0EsT0FBTyxLQUFLLENBQUNGLElBQUlDLE1BQU1IO0lBQ3pCO0FBQ0Y7QUFFQUosV0FBV1UsS0FBSyxHQUFHO0lBQUM7SUFBZTtJQUFjO0NBQVk7QUFFN0RWLFdBQVdTLFNBQVMsR0FBRztJQUNyQixZQUFZO0lBQ1osY0FBYztBQUNoQjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYWxpZ24taXRlbXMuanM/Yzc0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEFsaWduSXRlbXMgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdhbGlnbi1pdGVtcydcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgMjAwOSBhbmQgMjAxMiBzcGVjc1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMDkpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnYm94LWFsaWduJ1xuICAgIH1cbiAgICBpZiAoc3BlYyA9PT0gMjAxMikge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdmbGV4LWFsaWduJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSB2YWx1ZSBmb3IgMjAwOSBhbmQgMjAxMiBzcGVjc1xuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGxldCBzcGVjID0gZmxleFNwZWMocHJlZml4KVswXVxuICAgIGlmIChzcGVjID09PSAyMDA5IHx8IHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIGRlY2wudmFsdWUgPSBBbGlnbkl0ZW1zLm9sZFZhbHVlc1tkZWNsLnZhbHVlXSB8fCBkZWNsLnZhbHVlXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICB9XG59XG5cbkFsaWduSXRlbXMubmFtZXMgPSBbJ2FsaWduLWl0ZW1zJywgJ2ZsZXgtYWxpZ24nLCAnYm94LWFsaWduJ11cblxuQWxpZ25JdGVtcy5vbGRWYWx1ZXMgPSB7XG4gICdmbGV4LWVuZCc6ICdlbmQnLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCdcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBbGlnbkl0ZW1zXG4iXSwibmFtZXMiOlsiZmxleFNwZWMiLCJyZXF1aXJlIiwiRGVjbGFyYXRpb24iLCJBbGlnbkl0ZW1zIiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4Iiwic3BlYyIsInNldCIsImRlY2wiLCJ2YWx1ZSIsIm9sZFZhbHVlcyIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/align-items.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/align-self.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/align-self.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass AlignSelf extends Declaration {\n    check(decl) {\n        return decl.parent && !decl.parent.some((i)=>{\n            return i.prop && i.prop.startsWith(\"grid-\");\n        });\n    }\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"align-self\";\n    }\n    /**\n   * Change property name for 2012 specs\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2012) {\n            return prefix + \"flex-item-align\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */ set(decl, prefix) {\n        let spec = flexSpec(prefix)[0];\n        if (spec === 2012) {\n            decl.value = AlignSelf.oldValues[decl.value] || decl.value;\n            return super.set(decl, prefix);\n        }\n        if (spec === \"final\") {\n            return super.set(decl, prefix);\n        }\n        return undefined;\n    }\n}\nAlignSelf.names = [\n    \"align-self\",\n    \"flex-item-align\"\n];\nAlignSelf.oldValues = {\n    \"flex-end\": \"end\",\n    \"flex-start\": \"start\"\n};\nmodule.exports = AlignSelf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hbGlnbi1zZWxmLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQztBQUN2QixJQUFJQyxjQUFjRCxtQkFBT0EsQ0FBQztBQUUxQixNQUFNRSxrQkFBa0JEO0lBQ3RCRSxNQUFNQyxJQUFJLEVBQUU7UUFDVixPQUNFQSxLQUFLQyxNQUFNLElBQ1gsQ0FBQ0QsS0FBS0MsTUFBTSxDQUFDQyxJQUFJLENBQUNDLENBQUFBO1lBQ2hCLE9BQU9BLEVBQUVDLElBQUksSUFBSUQsRUFBRUMsSUFBSSxDQUFDQyxVQUFVLENBQUM7UUFDckM7SUFFSjtJQUVBOztHQUVDLEdBQ0RDLFlBQVk7UUFDVixPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEQyxTQUFTSCxJQUFJLEVBQUVJLE1BQU0sRUFBRTtRQUNyQixJQUFJQztRQUNILENBQUNBLE1BQU1ELE9BQU8sR0FBR2IsU0FBU2E7UUFDM0IsSUFBSUMsU0FBUyxNQUFNO1lBQ2pCLE9BQU9ELFNBQVM7UUFDbEI7UUFDQSxPQUFPLEtBQUssQ0FBQ0QsU0FBU0gsTUFBTUk7SUFDOUI7SUFFQTs7R0FFQyxHQUNERSxJQUFJVixJQUFJLEVBQUVRLE1BQU0sRUFBRTtRQUNoQixJQUFJQyxPQUFPZCxTQUFTYSxPQUFPLENBQUMsRUFBRTtRQUM5QixJQUFJQyxTQUFTLE1BQU07WUFDakJULEtBQUtXLEtBQUssR0FBR2IsVUFBVWMsU0FBUyxDQUFDWixLQUFLVyxLQUFLLENBQUMsSUFBSVgsS0FBS1csS0FBSztZQUMxRCxPQUFPLEtBQUssQ0FBQ0QsSUFBSVYsTUFBTVE7UUFDekI7UUFDQSxJQUFJQyxTQUFTLFNBQVM7WUFDcEIsT0FBTyxLQUFLLENBQUNDLElBQUlWLE1BQU1RO1FBQ3pCO1FBQ0EsT0FBT0s7SUFDVDtBQUNGO0FBRUFmLFVBQVVnQixLQUFLLEdBQUc7SUFBQztJQUFjO0NBQWtCO0FBRW5EaEIsVUFBVWMsU0FBUyxHQUFHO0lBQ3BCLFlBQVk7SUFDWixjQUFjO0FBQ2hCO0FBRUFHLE9BQU9DLE9BQU8sR0FBR2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYWxpZ24tc2VsZi5qcz9mOGRiIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBmbGV4U3BlYyA9IHJlcXVpcmUoJy4vZmxleC1zcGVjJylcbmxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgQWxpZ25TZWxmIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICBjaGVjayhkZWNsKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIGRlY2wucGFyZW50ICYmXG4gICAgICAhZGVjbC5wYXJlbnQuc29tZShpID0+IHtcbiAgICAgICAgcmV0dXJuIGkucHJvcCAmJiBpLnByb3Auc3RhcnRzV2l0aCgnZ3JpZC0nKVxuICAgICAgfSlcbiAgICApXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnYWxpZ24tc2VsZidcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgMjAxMiBzcGVjc1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1pdGVtLWFsaWduJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSB2YWx1ZSBmb3IgMjAxMiBzcGVjIGFuZCBpZ25vcmUgcHJlZml4IGZvciAyMDA5XG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWMgPSBmbGV4U3BlYyhwcmVmaXgpWzBdXG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIGRlY2wudmFsdWUgPSBBbGlnblNlbGYub2xkVmFsdWVzW2RlY2wudmFsdWVdIHx8IGRlY2wudmFsdWVcbiAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICBpZiAoc3BlYyA9PT0gJ2ZpbmFsJykge1xuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5BbGlnblNlbGYubmFtZXMgPSBbJ2FsaWduLXNlbGYnLCAnZmxleC1pdGVtLWFsaWduJ11cblxuQWxpZ25TZWxmLm9sZFZhbHVlcyA9IHtcbiAgJ2ZsZXgtZW5kJzogJ2VuZCcsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0J1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFsaWduU2VsZlxuIl0sIm5hbWVzIjpbImZsZXhTcGVjIiwicmVxdWlyZSIsIkRlY2xhcmF0aW9uIiwiQWxpZ25TZWxmIiwiY2hlY2siLCJkZWNsIiwicGFyZW50Iiwic29tZSIsImkiLCJwcm9wIiwic3RhcnRzV2l0aCIsIm5vcm1hbGl6ZSIsInByZWZpeGVkIiwicHJlZml4Iiwic3BlYyIsInNldCIsInZhbHVlIiwib2xkVmFsdWVzIiwidW5kZWZpbmVkIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/align-self.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/animation.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/animation.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass Animation extends Declaration {\n    /**\n   * Don’t add prefixes for modern values.\n   */ check(decl) {\n        return !decl.value.split(/\\s+/).some((i)=>{\n            let lower = i.toLowerCase();\n            return lower === \"reverse\" || lower === \"alternate-reverse\";\n        });\n    }\n}\nAnimation.names = [\n    \"animation\",\n    \"animation-direction\"\n];\nmodule.exports = Animation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hbmltYXRpb24uanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLGtCQUFrQkY7SUFDdEI7O0dBRUMsR0FDREcsTUFBTUMsSUFBSSxFQUFFO1FBQ1YsT0FBTyxDQUFDQSxLQUFLQyxLQUFLLENBQUNDLEtBQUssQ0FBQyxPQUFPQyxJQUFJLENBQUNDLENBQUFBO1lBQ25DLElBQUlDLFFBQVFELEVBQUVFLFdBQVc7WUFDekIsT0FBT0QsVUFBVSxhQUFhQSxVQUFVO1FBQzFDO0lBQ0Y7QUFDRjtBQUVBUCxVQUFVUyxLQUFLLEdBQUc7SUFBQztJQUFhO0NBQXNCO0FBRXREQyxPQUFPQyxPQUFPLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYW5pbWF0aW9uLmpzP2FhNDAiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBBbmltYXRpb24gZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBEb27igJl0IGFkZCBwcmVmaXhlcyBmb3IgbW9kZXJuIHZhbHVlcy5cbiAgICovXG4gIGNoZWNrKGRlY2wpIHtcbiAgICByZXR1cm4gIWRlY2wudmFsdWUuc3BsaXQoL1xccysvKS5zb21lKGkgPT4ge1xuICAgICAgbGV0IGxvd2VyID0gaS50b0xvd2VyQ2FzZSgpXG4gICAgICByZXR1cm4gbG93ZXIgPT09ICdyZXZlcnNlJyB8fCBsb3dlciA9PT0gJ2FsdGVybmF0ZS1yZXZlcnNlJ1xuICAgIH0pXG4gIH1cbn1cblxuQW5pbWF0aW9uLm5hbWVzID0gWydhbmltYXRpb24nLCAnYW5pbWF0aW9uLWRpcmVjdGlvbiddXG5cbm1vZHVsZS5leHBvcnRzID0gQW5pbWF0aW9uXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiQW5pbWF0aW9uIiwiY2hlY2siLCJkZWNsIiwidmFsdWUiLCJzcGxpdCIsInNvbWUiLCJpIiwibG93ZXIiLCJ0b0xvd2VyQ2FzZSIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/animation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/appearance.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/appearance.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass Appearance extends Declaration {\n    constructor(name, prefixes, all){\n        super(name, prefixes, all);\n        if (this.prefixes) {\n            this.prefixes = utils.uniq(this.prefixes.map((i)=>{\n                if (i === \"-ms-\") {\n                    return \"-webkit-\";\n                }\n                return i;\n            }));\n        }\n    }\n}\nAppearance.names = [\n    \"appearance\"\n];\nmodule.exports = Appearance;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hcHBlYXJhbmNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUMxQixJQUFJQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUVwQixNQUFNRSxtQkFBbUJIO0lBQ3ZCSSxZQUFZQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsR0FBRyxDQUFFO1FBQy9CLEtBQUssQ0FBQ0YsTUFBTUMsVUFBVUM7UUFFdEIsSUFBSSxJQUFJLENBQUNELFFBQVEsRUFBRTtZQUNqQixJQUFJLENBQUNBLFFBQVEsR0FBR0osTUFBTU0sSUFBSSxDQUN4QixJQUFJLENBQUNGLFFBQVEsQ0FBQ0csR0FBRyxDQUFDQyxDQUFBQTtnQkFDaEIsSUFBSUEsTUFBTSxRQUFRO29CQUNoQixPQUFPO2dCQUNUO2dCQUNBLE9BQU9BO1lBQ1Q7UUFFSjtJQUNGO0FBQ0Y7QUFFQVAsV0FBV1EsS0FBSyxHQUFHO0lBQUM7Q0FBYTtBQUVqQ0MsT0FBT0MsT0FBTyxHQUFHViIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2FwcGVhcmFuY2UuanM/MzZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpXG5cbmNsYXNzIEFwcGVhcmFuY2UgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeGVzLCBhbGwpIHtcbiAgICBzdXBlcihuYW1lLCBwcmVmaXhlcywgYWxsKVxuXG4gICAgaWYgKHRoaXMucHJlZml4ZXMpIHtcbiAgICAgIHRoaXMucHJlZml4ZXMgPSB1dGlscy51bmlxKFxuICAgICAgICB0aGlzLnByZWZpeGVzLm1hcChpID0+IHtcbiAgICAgICAgICBpZiAoaSA9PT0gJy1tcy0nKSB7XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJ1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gaVxuICAgICAgICB9KVxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuXG5BcHBlYXJhbmNlLm5hbWVzID0gWydhcHBlYXJhbmNlJ11cblxubW9kdWxlLmV4cG9ydHMgPSBBcHBlYXJhbmNlXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwidXRpbHMiLCJBcHBlYXJhbmNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwicHJlZml4ZXMiLCJhbGwiLCJ1bmlxIiwibWFwIiwiaSIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/appearance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/autofill.js":
/*!*********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/autofill.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Selector = __webpack_require__(/*! ../selector */ \"(ssr)/./node_modules/autoprefixer/lib/selector.js\");\nlet utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass Autofill extends Selector {\n    constructor(name, prefixes, all){\n        super(name, prefixes, all);\n        if (this.prefixes) {\n            this.prefixes = utils.uniq(this.prefixes.map(()=>\"-webkit-\"));\n        }\n    }\n    /**\n   * Return different selectors depend on prefix\n   */ prefixed(prefix) {\n        if (prefix === \"-webkit-\") {\n            return \":-webkit-autofill\";\n        }\n        return `:${prefix}autofill`;\n    }\n}\nAutofill.names = [\n    \":autofill\"\n];\nmodule.exports = Autofill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hdXRvZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsUUFBUUQsbUJBQU9BLENBQUM7QUFFcEIsTUFBTUUsaUJBQWlCSDtJQUNyQkksWUFBWUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLEdBQUcsQ0FBRTtRQUMvQixLQUFLLENBQUNGLE1BQU1DLFVBQVVDO1FBRXRCLElBQUksSUFBSSxDQUFDRCxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDQSxRQUFRLEdBQUdKLE1BQU1NLElBQUksQ0FBQyxJQUFJLENBQUNGLFFBQVEsQ0FBQ0csR0FBRyxDQUFDLElBQU07UUFDckQ7SUFDRjtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLE1BQU0sRUFBRTtRQUNmLElBQUlBLFdBQVcsWUFBWTtZQUN6QixPQUFPO1FBQ1Q7UUFDQSxPQUFPLENBQUMsQ0FBQyxFQUFFQSxPQUFPLFFBQVEsQ0FBQztJQUM3QjtBQUNGO0FBRUFSLFNBQVNTLEtBQUssR0FBRztJQUFDO0NBQVk7QUFFOUJDLE9BQU9DLE9BQU8sR0FBR1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hdXRvZmlsbC5qcz83NzgxIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBTZWxlY3RvciA9IHJlcXVpcmUoJy4uL3NlbGVjdG9yJylcbmxldCB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJylcblxuY2xhc3MgQXV0b2ZpbGwgZXh0ZW5kcyBTZWxlY3RvciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeGVzLCBhbGwpIHtcbiAgICBzdXBlcihuYW1lLCBwcmVmaXhlcywgYWxsKVxuXG4gICAgaWYgKHRoaXMucHJlZml4ZXMpIHtcbiAgICAgIHRoaXMucHJlZml4ZXMgPSB1dGlscy51bmlxKHRoaXMucHJlZml4ZXMubWFwKCgpID0+ICctd2Via2l0LScpKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZGlmZmVyZW50IHNlbGVjdG9ycyBkZXBlbmQgb24gcHJlZml4XG4gICAqL1xuICBwcmVmaXhlZChwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXR1cm4gJzotd2Via2l0LWF1dG9maWxsJ1xuICAgIH1cbiAgICByZXR1cm4gYDoke3ByZWZpeH1hdXRvZmlsbGBcbiAgfVxufVxuXG5BdXRvZmlsbC5uYW1lcyA9IFsnOmF1dG9maWxsJ11cblxubW9kdWxlLmV4cG9ydHMgPSBBdXRvZmlsbFxuIl0sIm5hbWVzIjpbIlNlbGVjdG9yIiwicmVxdWlyZSIsInV0aWxzIiwiQXV0b2ZpbGwiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJwcmVmaXhlcyIsImFsbCIsInVuaXEiLCJtYXAiLCJwcmVmaXhlZCIsInByZWZpeCIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/autofill.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/backdrop-filter.js":
/*!****************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/backdrop-filter.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass BackdropFilter extends Declaration {\n    constructor(name, prefixes, all){\n        super(name, prefixes, all);\n        if (this.prefixes) {\n            this.prefixes = utils.uniq(this.prefixes.map((i)=>{\n                return i === \"-ms-\" ? \"-webkit-\" : i;\n            }));\n        }\n    }\n}\nBackdropFilter.names = [\n    \"backdrop-filter\"\n];\nmodule.exports = BackdropFilter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZHJvcC1maWx0ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBQzFCLElBQUlDLFFBQVFELG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1FLHVCQUF1Qkg7SUFDM0JJLFlBQVlDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxHQUFHLENBQUU7UUFDL0IsS0FBSyxDQUFDRixNQUFNQyxVQUFVQztRQUV0QixJQUFJLElBQUksQ0FBQ0QsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQ0EsUUFBUSxHQUFHSixNQUFNTSxJQUFJLENBQ3hCLElBQUksQ0FBQ0YsUUFBUSxDQUFDRyxHQUFHLENBQUNDLENBQUFBO2dCQUNoQixPQUFPQSxNQUFNLFNBQVMsYUFBYUE7WUFDckM7UUFFSjtJQUNGO0FBQ0Y7QUFFQVAsZUFBZVEsS0FBSyxHQUFHO0lBQUM7Q0FBa0I7QUFFMUNDLE9BQU9DLE9BQU8sR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZHJvcC1maWx0ZXIuanM/NWZmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpXG5cbmNsYXNzIEJhY2tkcm9wRmlsdGVyIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXhlcywgYWxsKSB7XG4gICAgc3VwZXIobmFtZSwgcHJlZml4ZXMsIGFsbClcblxuICAgIGlmICh0aGlzLnByZWZpeGVzKSB7XG4gICAgICB0aGlzLnByZWZpeGVzID0gdXRpbHMudW5pcShcbiAgICAgICAgdGhpcy5wcmVmaXhlcy5tYXAoaSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGkgPT09ICctbXMtJyA/ICctd2Via2l0LScgOiBpXG4gICAgICAgIH0pXG4gICAgICApXG4gICAgfVxuICB9XG59XG5cbkJhY2tkcm9wRmlsdGVyLm5hbWVzID0gWydiYWNrZHJvcC1maWx0ZXInXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJhY2tkcm9wRmlsdGVyXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwidXRpbHMiLCJCYWNrZHJvcEZpbHRlciIsImNvbnN0cnVjdG9yIiwibmFtZSIsInByZWZpeGVzIiwiYWxsIiwidW5pcSIsIm1hcCIsImkiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/backdrop-filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/background-clip.js":
/*!****************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/background-clip.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass BackgroundClip extends Declaration {\n    constructor(name, prefixes, all){\n        super(name, prefixes, all);\n        if (this.prefixes) {\n            this.prefixes = utils.uniq(this.prefixes.map((i)=>{\n                return i === \"-ms-\" ? \"-webkit-\" : i;\n            }));\n        }\n    }\n    check(decl) {\n        return decl.value.toLowerCase() === \"text\";\n    }\n}\nBackgroundClip.names = [\n    \"background-clip\"\n];\nmodule.exports = BackgroundClip;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZ3JvdW5kLWNsaXAuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBQzFCLElBQUlDLFFBQVFELG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1FLHVCQUF1Qkg7SUFDM0JJLFlBQVlDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxHQUFHLENBQUU7UUFDL0IsS0FBSyxDQUFDRixNQUFNQyxVQUFVQztRQUV0QixJQUFJLElBQUksQ0FBQ0QsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQ0EsUUFBUSxHQUFHSixNQUFNTSxJQUFJLENBQ3hCLElBQUksQ0FBQ0YsUUFBUSxDQUFDRyxHQUFHLENBQUNDLENBQUFBO2dCQUNoQixPQUFPQSxNQUFNLFNBQVMsYUFBYUE7WUFDckM7UUFFSjtJQUNGO0lBRUFDLE1BQU1DLElBQUksRUFBRTtRQUNWLE9BQU9BLEtBQUtDLEtBQUssQ0FBQ0MsV0FBVyxPQUFPO0lBQ3RDO0FBQ0Y7QUFFQVgsZUFBZVksS0FBSyxHQUFHO0lBQUM7Q0FBa0I7QUFFMUNDLE9BQU9DLE9BQU8sR0FBR2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZ3JvdW5kLWNsaXAuanM/ODllZiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpXG5cbmNsYXNzIEJhY2tncm91bmRDbGlwIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXhlcywgYWxsKSB7XG4gICAgc3VwZXIobmFtZSwgcHJlZml4ZXMsIGFsbClcblxuICAgIGlmICh0aGlzLnByZWZpeGVzKSB7XG4gICAgICB0aGlzLnByZWZpeGVzID0gdXRpbHMudW5pcShcbiAgICAgICAgdGhpcy5wcmVmaXhlcy5tYXAoaSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGkgPT09ICctbXMtJyA/ICctd2Via2l0LScgOiBpXG4gICAgICAgIH0pXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgY2hlY2soZGVjbCkge1xuICAgIHJldHVybiBkZWNsLnZhbHVlLnRvTG93ZXJDYXNlKCkgPT09ICd0ZXh0J1xuICB9XG59XG5cbkJhY2tncm91bmRDbGlwLm5hbWVzID0gWydiYWNrZ3JvdW5kLWNsaXAnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJhY2tncm91bmRDbGlwXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwidXRpbHMiLCJCYWNrZ3JvdW5kQ2xpcCIsImNvbnN0cnVjdG9yIiwibmFtZSIsInByZWZpeGVzIiwiYWxsIiwidW5pcSIsIm1hcCIsImkiLCJjaGVjayIsImRlY2wiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/background-clip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/background-size.js":
/*!****************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/background-size.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass BackgroundSize extends Declaration {\n    /**\n   * Duplication parameter for -webkit- browsers\n   */ set(decl, prefix) {\n        let value = decl.value.toLowerCase();\n        if (prefix === \"-webkit-\" && !value.includes(\" \") && value !== \"contain\" && value !== \"cover\") {\n            decl.value = decl.value + \" \" + decl.value;\n        }\n        return super.set(decl, prefix);\n    }\n}\nBackgroundSize.names = [\n    \"background-size\"\n];\nmodule.exports = BackgroundSize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZ3JvdW5kLXNpemUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLHVCQUF1QkY7SUFDM0I7O0dBRUMsR0FDREcsSUFBSUMsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDaEIsSUFBSUMsUUFBUUYsS0FBS0UsS0FBSyxDQUFDQyxXQUFXO1FBQ2xDLElBQ0VGLFdBQVcsY0FDWCxDQUFDQyxNQUFNRSxRQUFRLENBQUMsUUFDaEJGLFVBQVUsYUFDVkEsVUFBVSxTQUNWO1lBQ0FGLEtBQUtFLEtBQUssR0FBR0YsS0FBS0UsS0FBSyxHQUFHLE1BQU1GLEtBQUtFLEtBQUs7UUFDNUM7UUFDQSxPQUFPLEtBQUssQ0FBQ0gsSUFBSUMsTUFBTUM7SUFDekI7QUFDRjtBQUVBSCxlQUFlTyxLQUFLLEdBQUc7SUFBQztDQUFrQjtBQUUxQ0MsT0FBT0MsT0FBTyxHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2JhY2tncm91bmQtc2l6ZS5qcz9lNGRmIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgQmFja2dyb3VuZFNpemUgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBEdXBsaWNhdGlvbiBwYXJhbWV0ZXIgZm9yIC13ZWJraXQtIGJyb3dzZXJzXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHZhbHVlID0gZGVjbC52YWx1ZS50b0xvd2VyQ2FzZSgpXG4gICAgaWYgKFxuICAgICAgcHJlZml4ID09PSAnLXdlYmtpdC0nICYmXG4gICAgICAhdmFsdWUuaW5jbHVkZXMoJyAnKSAmJlxuICAgICAgdmFsdWUgIT09ICdjb250YWluJyAmJlxuICAgICAgdmFsdWUgIT09ICdjb3ZlcidcbiAgICApIHtcbiAgICAgIGRlY2wudmFsdWUgPSBkZWNsLnZhbHVlICsgJyAnICsgZGVjbC52YWx1ZVxuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgfVxufVxuXG5CYWNrZ3JvdW5kU2l6ZS5uYW1lcyA9IFsnYmFja2dyb3VuZC1zaXplJ11cblxubW9kdWxlLmV4cG9ydHMgPSBCYWNrZ3JvdW5kU2l6ZVxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsIkJhY2tncm91bmRTaXplIiwic2V0IiwiZGVjbCIsInByZWZpeCIsInZhbHVlIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/background-size.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/block-logical.js":
/*!**************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/block-logical.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass BlockLogical extends Declaration {\n    /**\n   * Return property name by spec\n   */ normalize(prop) {\n        if (prop.includes(\"-before\")) {\n            return prop.replace(\"-before\", \"-block-start\");\n        }\n        return prop.replace(\"-after\", \"-block-end\");\n    }\n    /**\n   * Use old syntax for -moz- and -webkit-\n   */ prefixed(prop, prefix) {\n        if (prop.includes(\"-start\")) {\n            return prefix + prop.replace(\"-block-start\", \"-before\");\n        }\n        return prefix + prop.replace(\"-block-end\", \"-after\");\n    }\n}\nBlockLogical.names = [\n    \"border-block-start\",\n    \"border-block-end\",\n    \"margin-block-start\",\n    \"margin-block-end\",\n    \"padding-block-start\",\n    \"padding-block-end\",\n    \"border-before\",\n    \"border-after\",\n    \"margin-before\",\n    \"margin-after\",\n    \"padding-before\",\n    \"padding-after\"\n];\nmodule.exports = BlockLogical;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ibG9jay1sb2dpY2FsLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixNQUFNQyxxQkFBcUJGO0lBQ3pCOztHQUVDLEdBQ0RHLFVBQVVDLElBQUksRUFBRTtRQUNkLElBQUlBLEtBQUtDLFFBQVEsQ0FBQyxZQUFZO1lBQzVCLE9BQU9ELEtBQUtFLE9BQU8sQ0FBQyxXQUFXO1FBQ2pDO1FBQ0EsT0FBT0YsS0FBS0UsT0FBTyxDQUFDLFVBQVU7SUFDaEM7SUFFQTs7R0FFQyxHQUNEQyxTQUFTSCxJQUFJLEVBQUVJLE1BQU0sRUFBRTtRQUNyQixJQUFJSixLQUFLQyxRQUFRLENBQUMsV0FBVztZQUMzQixPQUFPRyxTQUFTSixLQUFLRSxPQUFPLENBQUMsZ0JBQWdCO1FBQy9DO1FBQ0EsT0FBT0UsU0FBU0osS0FBS0UsT0FBTyxDQUFDLGNBQWM7SUFDN0M7QUFDRjtBQUVBSixhQUFhTyxLQUFLLEdBQUc7SUFDbkI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFREMsT0FBT0MsT0FBTyxHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2Jsb2NrLWxvZ2ljYWwuanM/YzhlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEJsb2NrTG9naWNhbCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFJldHVybiBwcm9wZXJ0eSBuYW1lIGJ5IHNwZWNcbiAgICovXG4gIG5vcm1hbGl6ZShwcm9wKSB7XG4gICAgaWYgKHByb3AuaW5jbHVkZXMoJy1iZWZvcmUnKSkge1xuICAgICAgcmV0dXJuIHByb3AucmVwbGFjZSgnLWJlZm9yZScsICctYmxvY2stc3RhcnQnKVxuICAgIH1cbiAgICByZXR1cm4gcHJvcC5yZXBsYWNlKCctYWZ0ZXInLCAnLWJsb2NrLWVuZCcpXG4gIH1cblxuICAvKipcbiAgICogVXNlIG9sZCBzeW50YXggZm9yIC1tb3otIGFuZCAtd2Via2l0LVxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgaWYgKHByb3AuaW5jbHVkZXMoJy1zdGFydCcpKSB7XG4gICAgICByZXR1cm4gcHJlZml4ICsgcHJvcC5yZXBsYWNlKCctYmxvY2stc3RhcnQnLCAnLWJlZm9yZScpXG4gICAgfVxuICAgIHJldHVybiBwcmVmaXggKyBwcm9wLnJlcGxhY2UoJy1ibG9jay1lbmQnLCAnLWFmdGVyJylcbiAgfVxufVxuXG5CbG9ja0xvZ2ljYWwubmFtZXMgPSBbXG4gICdib3JkZXItYmxvY2stc3RhcnQnLFxuICAnYm9yZGVyLWJsb2NrLWVuZCcsXG4gICdtYXJnaW4tYmxvY2stc3RhcnQnLFxuICAnbWFyZ2luLWJsb2NrLWVuZCcsXG4gICdwYWRkaW5nLWJsb2NrLXN0YXJ0JyxcbiAgJ3BhZGRpbmctYmxvY2stZW5kJyxcbiAgJ2JvcmRlci1iZWZvcmUnLFxuICAnYm9yZGVyLWFmdGVyJyxcbiAgJ21hcmdpbi1iZWZvcmUnLFxuICAnbWFyZ2luLWFmdGVyJyxcbiAgJ3BhZGRpbmctYmVmb3JlJyxcbiAgJ3BhZGRpbmctYWZ0ZXInXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gQmxvY2tMb2dpY2FsXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiQmxvY2tMb2dpY2FsIiwibm9ybWFsaXplIiwicHJvcCIsImluY2x1ZGVzIiwicmVwbGFjZSIsInByZWZpeGVkIiwicHJlZml4IiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/block-logical.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/border-image.js":
/*!*************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/border-image.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass BorderImage extends Declaration {\n    /**\n   * Remove fill parameter for prefixed declarations\n   */ set(decl, prefix) {\n        decl.value = decl.value.replace(/\\s+fill(\\s)/, \"$1\");\n        return super.set(decl, prefix);\n    }\n}\nBorderImage.names = [\n    \"border-image\"\n];\nmodule.exports = BorderImage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ib3JkZXItaW1hZ2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLG9CQUFvQkY7SUFDeEI7O0dBRUMsR0FDREcsSUFBSUMsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDaEJELEtBQUtFLEtBQUssR0FBR0YsS0FBS0UsS0FBSyxDQUFDQyxPQUFPLENBQUMsZUFBZTtRQUMvQyxPQUFPLEtBQUssQ0FBQ0osSUFBSUMsTUFBTUM7SUFDekI7QUFDRjtBQUVBSCxZQUFZTSxLQUFLLEdBQUc7SUFBQztDQUFlO0FBRXBDQyxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYm9yZGVyLWltYWdlLmpzP2M1ZWIiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBCb3JkZXJJbWFnZSBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFJlbW92ZSBmaWxsIHBhcmFtZXRlciBmb3IgcHJlZml4ZWQgZGVjbGFyYXRpb25zXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgZGVjbC52YWx1ZSA9IGRlY2wudmFsdWUucmVwbGFjZSgvXFxzK2ZpbGwoXFxzKS8sICckMScpXG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cbn1cblxuQm9yZGVySW1hZ2UubmFtZXMgPSBbJ2JvcmRlci1pbWFnZSddXG5cbm1vZHVsZS5leHBvcnRzID0gQm9yZGVySW1hZ2VcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJCb3JkZXJJbWFnZSIsInNldCIsImRlY2wiLCJwcmVmaXgiLCJ2YWx1ZSIsInJlcGxhY2UiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/border-image.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/border-radius.js":
/*!**************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/border-radius.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass BorderRadius extends Declaration {\n    /**\n   * Return unprefixed version of property\n   */ normalize(prop) {\n        return BorderRadius.toNormal[prop] || prop;\n    }\n    /**\n   * Change syntax, when add Mozilla prefix\n   */ prefixed(prop, prefix) {\n        if (prefix === \"-moz-\") {\n            return prefix + (BorderRadius.toMozilla[prop] || prop);\n        }\n        return super.prefixed(prop, prefix);\n    }\n}\nBorderRadius.names = [\n    \"border-radius\"\n];\nBorderRadius.toMozilla = {};\nBorderRadius.toNormal = {};\nfor (let ver of [\n    \"top\",\n    \"bottom\"\n]){\n    for (let hor of [\n        \"left\",\n        \"right\"\n    ]){\n        let normal = `border-${ver}-${hor}-radius`;\n        let mozilla = `border-radius-${ver}${hor}`;\n        BorderRadius.names.push(normal);\n        BorderRadius.names.push(mozilla);\n        BorderRadius.toMozilla[normal] = mozilla;\n        BorderRadius.toNormal[mozilla] = normal;\n    }\n}\nmodule.exports = BorderRadius;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ib3JkZXItcmFkaXVzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixNQUFNQyxxQkFBcUJGO0lBQ3pCOztHQUVDLEdBQ0RHLFVBQVVDLElBQUksRUFBRTtRQUNkLE9BQU9GLGFBQWFHLFFBQVEsQ0FBQ0QsS0FBSyxJQUFJQTtJQUN4QztJQUVBOztHQUVDLEdBQ0RFLFNBQVNGLElBQUksRUFBRUcsTUFBTSxFQUFFO1FBQ3JCLElBQUlBLFdBQVcsU0FBUztZQUN0QixPQUFPQSxTQUFVTCxDQUFBQSxhQUFhTSxTQUFTLENBQUNKLEtBQUssSUFBSUEsSUFBRztRQUN0RDtRQUNBLE9BQU8sS0FBSyxDQUFDRSxTQUFTRixNQUFNRztJQUM5QjtBQUNGO0FBRUFMLGFBQWFPLEtBQUssR0FBRztJQUFDO0NBQWdCO0FBRXRDUCxhQUFhTSxTQUFTLEdBQUcsQ0FBQztBQUMxQk4sYUFBYUcsUUFBUSxHQUFHLENBQUM7QUFFekIsS0FBSyxJQUFJSyxPQUFPO0lBQUM7SUFBTztDQUFTLENBQUU7SUFDakMsS0FBSyxJQUFJQyxPQUFPO1FBQUM7UUFBUTtLQUFRLENBQUU7UUFDakMsSUFBSUMsU0FBUyxDQUFDLE9BQU8sRUFBRUYsSUFBSSxDQUFDLEVBQUVDLElBQUksT0FBTyxDQUFDO1FBQzFDLElBQUlFLFVBQVUsQ0FBQyxjQUFjLEVBQUVILElBQUksRUFBRUMsSUFBSSxDQUFDO1FBRTFDVCxhQUFhTyxLQUFLLENBQUNLLElBQUksQ0FBQ0Y7UUFDeEJWLGFBQWFPLEtBQUssQ0FBQ0ssSUFBSSxDQUFDRDtRQUV4QlgsYUFBYU0sU0FBUyxDQUFDSSxPQUFPLEdBQUdDO1FBQ2pDWCxhQUFhRyxRQUFRLENBQUNRLFFBQVEsR0FBR0Q7SUFDbkM7QUFDRjtBQUVBRyxPQUFPQyxPQUFPLEdBQUdkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYm9yZGVyLXJhZGl1cy5qcz8yOTRkIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgQm9yZGVyUmFkaXVzIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHVucHJlZml4ZWQgdmVyc2lvbiBvZiBwcm9wZXJ0eVxuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICByZXR1cm4gQm9yZGVyUmFkaXVzLnRvTm9ybWFsW3Byb3BdIHx8IHByb3BcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2Ugc3ludGF4LCB3aGVuIGFkZCBNb3ppbGxhIHByZWZpeFxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tb3otJykge1xuICAgICAgcmV0dXJuIHByZWZpeCArIChCb3JkZXJSYWRpdXMudG9Nb3ppbGxhW3Byb3BdIHx8IHByb3ApXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cbn1cblxuQm9yZGVyUmFkaXVzLm5hbWVzID0gWydib3JkZXItcmFkaXVzJ11cblxuQm9yZGVyUmFkaXVzLnRvTW96aWxsYSA9IHt9XG5Cb3JkZXJSYWRpdXMudG9Ob3JtYWwgPSB7fVxuXG5mb3IgKGxldCB2ZXIgb2YgWyd0b3AnLCAnYm90dG9tJ10pIHtcbiAgZm9yIChsZXQgaG9yIG9mIFsnbGVmdCcsICdyaWdodCddKSB7XG4gICAgbGV0IG5vcm1hbCA9IGBib3JkZXItJHt2ZXJ9LSR7aG9yfS1yYWRpdXNgXG4gICAgbGV0IG1vemlsbGEgPSBgYm9yZGVyLXJhZGl1cy0ke3Zlcn0ke2hvcn1gXG5cbiAgICBCb3JkZXJSYWRpdXMubmFtZXMucHVzaChub3JtYWwpXG4gICAgQm9yZGVyUmFkaXVzLm5hbWVzLnB1c2gobW96aWxsYSlcblxuICAgIEJvcmRlclJhZGl1cy50b01vemlsbGFbbm9ybWFsXSA9IG1vemlsbGFcbiAgICBCb3JkZXJSYWRpdXMudG9Ob3JtYWxbbW96aWxsYV0gPSBub3JtYWxcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJvcmRlclJhZGl1c1xuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsIkJvcmRlclJhZGl1cyIsIm5vcm1hbGl6ZSIsInByb3AiLCJ0b05vcm1hbCIsInByZWZpeGVkIiwicHJlZml4IiwidG9Nb3ppbGxhIiwibmFtZXMiLCJ2ZXIiLCJob3IiLCJub3JtYWwiLCJtb3ppbGxhIiwicHVzaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/border-radius.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/break-props.js":
/*!************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/break-props.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass BreakProps extends Declaration {\n    /**\n   * Don’t prefix some values\n   */ insert(decl, prefix, prefixes) {\n        if (decl.prop !== \"break-inside\") {\n            return super.insert(decl, prefix, prefixes);\n        }\n        if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n            return undefined;\n        }\n        return super.insert(decl, prefix, prefixes);\n    }\n    /**\n   * Return property name by final spec\n   */ normalize(prop) {\n        if (prop.includes(\"inside\")) {\n            return \"break-inside\";\n        }\n        if (prop.includes(\"before\")) {\n            return \"break-before\";\n        }\n        return \"break-after\";\n    }\n    /**\n   * Change name for -webkit- and -moz- prefix\n   */ prefixed(prop, prefix) {\n        return `${prefix}column-${prop}`;\n    }\n    /**\n   * Change prefixed value for avoid-column and avoid-page\n   */ set(decl, prefix) {\n        if (decl.prop === \"break-inside\" && decl.value === \"avoid-column\" || decl.value === \"avoid-page\") {\n            decl.value = \"avoid\";\n        }\n        return super.set(decl, prefix);\n    }\n}\nBreakProps.names = [\n    \"break-inside\",\n    \"page-break-inside\",\n    \"column-break-inside\",\n    \"break-before\",\n    \"page-break-before\",\n    \"column-break-before\",\n    \"break-after\",\n    \"page-break-after\",\n    \"column-break-after\"\n];\nmodule.exports = BreakProps;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9icmVhay1wcm9wcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsbUJBQW1CRjtJQUN2Qjs7R0FFQyxHQUNERyxPQUFPQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFO1FBQzdCLElBQUlGLEtBQUtHLElBQUksS0FBSyxnQkFBZ0I7WUFDaEMsT0FBTyxLQUFLLENBQUNKLE9BQU9DLE1BQU1DLFFBQVFDO1FBQ3BDO1FBQ0EsSUFBSSxVQUFVRSxJQUFJLENBQUNKLEtBQUtLLEtBQUssS0FBSyxRQUFRRCxJQUFJLENBQUNKLEtBQUtLLEtBQUssR0FBRztZQUMxRCxPQUFPQztRQUNUO1FBQ0EsT0FBTyxLQUFLLENBQUNQLE9BQU9DLE1BQU1DLFFBQVFDO0lBQ3BDO0lBRUE7O0dBRUMsR0FDREssVUFBVUosSUFBSSxFQUFFO1FBQ2QsSUFBSUEsS0FBS0ssUUFBUSxDQUFDLFdBQVc7WUFDM0IsT0FBTztRQUNUO1FBQ0EsSUFBSUwsS0FBS0ssUUFBUSxDQUFDLFdBQVc7WUFDM0IsT0FBTztRQUNUO1FBQ0EsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDREMsU0FBU04sSUFBSSxFQUFFRixNQUFNLEVBQUU7UUFDckIsT0FBTyxDQUFDLEVBQUVBLE9BQU8sT0FBTyxFQUFFRSxLQUFLLENBQUM7SUFDbEM7SUFFQTs7R0FFQyxHQUNETyxJQUFJVixJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNoQixJQUNFLEtBQU1FLElBQUksS0FBSyxrQkFBa0JILEtBQUtLLEtBQUssS0FBSyxrQkFDaERMLEtBQUtLLEtBQUssS0FBSyxjQUNmO1lBQ0FMLEtBQUtLLEtBQUssR0FBRztRQUNmO1FBQ0EsT0FBTyxLQUFLLENBQUNLLElBQUlWLE1BQU1DO0lBQ3pCO0FBQ0Y7QUFFQUgsV0FBV2EsS0FBSyxHQUFHO0lBQ2pCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNEO0FBRURDLE9BQU9DLE9BQU8sR0FBR2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9icmVhay1wcm9wcy5qcz9kZjAwIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgQnJlYWtQcm9wcyBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIERvbuKAmXQgcHJlZml4IHNvbWUgdmFsdWVzXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcykge1xuICAgIGlmIChkZWNsLnByb3AgIT09ICdicmVhay1pbnNpZGUnKSB7XG4gICAgICByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG4gICAgfVxuICAgIGlmICgvcmVnaW9uL2kudGVzdChkZWNsLnZhbHVlKSB8fCAvcGFnZS9pLnRlc3QoZGVjbC52YWx1ZSkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBwcm9wZXJ0eSBuYW1lIGJ5IGZpbmFsIHNwZWNcbiAgICovXG4gIG5vcm1hbGl6ZShwcm9wKSB7XG4gICAgaWYgKHByb3AuaW5jbHVkZXMoJ2luc2lkZScpKSB7XG4gICAgICByZXR1cm4gJ2JyZWFrLWluc2lkZSdcbiAgICB9XG4gICAgaWYgKHByb3AuaW5jbHVkZXMoJ2JlZm9yZScpKSB7XG4gICAgICByZXR1cm4gJ2JyZWFrLWJlZm9yZSdcbiAgICB9XG4gICAgcmV0dXJuICdicmVhay1hZnRlcidcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgbmFtZSBmb3IgLXdlYmtpdC0gYW5kIC1tb3otIHByZWZpeFxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgcmV0dXJuIGAke3ByZWZpeH1jb2x1bW4tJHtwcm9wfWBcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJlZml4ZWQgdmFsdWUgZm9yIGF2b2lkLWNvbHVtbiBhbmQgYXZvaWQtcGFnZVxuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGlmIChcbiAgICAgIChkZWNsLnByb3AgPT09ICdicmVhay1pbnNpZGUnICYmIGRlY2wudmFsdWUgPT09ICdhdm9pZC1jb2x1bW4nKSB8fFxuICAgICAgZGVjbC52YWx1ZSA9PT0gJ2F2b2lkLXBhZ2UnXG4gICAgKSB7XG4gICAgICBkZWNsLnZhbHVlID0gJ2F2b2lkJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgfVxufVxuXG5CcmVha1Byb3BzLm5hbWVzID0gW1xuICAnYnJlYWstaW5zaWRlJyxcbiAgJ3BhZ2UtYnJlYWstaW5zaWRlJyxcbiAgJ2NvbHVtbi1icmVhay1pbnNpZGUnLFxuICAnYnJlYWstYmVmb3JlJyxcbiAgJ3BhZ2UtYnJlYWstYmVmb3JlJyxcbiAgJ2NvbHVtbi1icmVhay1iZWZvcmUnLFxuICAnYnJlYWstYWZ0ZXInLFxuICAncGFnZS1icmVhay1hZnRlcicsXG4gICdjb2x1bW4tYnJlYWstYWZ0ZXInXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gQnJlYWtQcm9wc1xuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsIkJyZWFrUHJvcHMiLCJpbnNlcnQiLCJkZWNsIiwicHJlZml4IiwicHJlZml4ZXMiLCJwcm9wIiwidGVzdCIsInZhbHVlIiwidW5kZWZpbmVkIiwibm9ybWFsaXplIiwiaW5jbHVkZXMiLCJwcmVmaXhlZCIsInNldCIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/break-props.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/cross-fade.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/cross-fade.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet list = (__webpack_require__(/*! postcss */ \"(ssr)/./node_modules/postcss/lib/postcss.js\").list);\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nclass CrossFade extends Value {\n    replace(string, prefix) {\n        return list.space(string).map((value)=>{\n            if (value.slice(0, +this.name.length + 1) !== this.name + \"(\") {\n                return value;\n            }\n            let close = value.lastIndexOf(\")\");\n            let after = value.slice(close + 1);\n            let args = value.slice(this.name.length + 1, close);\n            if (prefix === \"-webkit-\") {\n                let match = args.match(/\\d*.?\\d+%?/);\n                if (match) {\n                    args = args.slice(match[0].length).trim();\n                    args += `, ${match[0]}`;\n                } else {\n                    args += \", 0.5\";\n                }\n            }\n            return prefix + this.name + \"(\" + args + \")\" + after;\n        }).join(\" \");\n    }\n}\nCrossFade.names = [\n    \"cross-fade\"\n];\nmodule.exports = CrossFade;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9jcm9zcy1mYWRlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxPQUFPQyx3RkFBdUI7QUFFbEMsSUFBSUMsUUFBUUQsbUJBQU9BLENBQUM7QUFFcEIsTUFBTUUsa0JBQWtCRDtJQUN0QkUsUUFBUUMsTUFBTSxFQUFFQyxNQUFNLEVBQUU7UUFDdEIsT0FBT04sS0FDSk8sS0FBSyxDQUFDRixRQUNORyxHQUFHLENBQUNDLENBQUFBO1lBQ0gsSUFBSUEsTUFBTUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUNDLElBQUksQ0FBQ0MsTUFBTSxHQUFHLE9BQU8sSUFBSSxDQUFDRCxJQUFJLEdBQUcsS0FBSztnQkFDN0QsT0FBT0Y7WUFDVDtZQUVBLElBQUlJLFFBQVFKLE1BQU1LLFdBQVcsQ0FBQztZQUM5QixJQUFJQyxRQUFRTixNQUFNQyxLQUFLLENBQUNHLFFBQVE7WUFDaEMsSUFBSUcsT0FBT1AsTUFBTUMsS0FBSyxDQUFDLElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxNQUFNLEdBQUcsR0FBR0M7WUFFN0MsSUFBSVAsV0FBVyxZQUFZO2dCQUN6QixJQUFJVyxRQUFRRCxLQUFLQyxLQUFLLENBQUM7Z0JBQ3ZCLElBQUlBLE9BQU87b0JBQ1RELE9BQU9BLEtBQUtOLEtBQUssQ0FBQ08sS0FBSyxDQUFDLEVBQUUsQ0FBQ0wsTUFBTSxFQUFFTSxJQUFJO29CQUN2Q0YsUUFBUSxDQUFDLEVBQUUsRUFBRUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUN6QixPQUFPO29CQUNMRCxRQUFRO2dCQUNWO1lBQ0Y7WUFDQSxPQUFPVixTQUFTLElBQUksQ0FBQ0ssSUFBSSxHQUFHLE1BQU1LLE9BQU8sTUFBTUQ7UUFDakQsR0FDQ0ksSUFBSSxDQUFDO0lBQ1Y7QUFDRjtBQUVBaEIsVUFBVWlCLEtBQUssR0FBRztJQUFDO0NBQWE7QUFFaENDLE9BQU9DLE9BQU8sR0FBR25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvY3Jvc3MtZmFkZS5qcz83NmQ4Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBsaXN0ID0gcmVxdWlyZSgncG9zdGNzcycpLmxpc3RcblxubGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxuXG5jbGFzcyBDcm9zc0ZhZGUgZXh0ZW5kcyBWYWx1ZSB7XG4gIHJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gbGlzdFxuICAgICAgLnNwYWNlKHN0cmluZylcbiAgICAgIC5tYXAodmFsdWUgPT4ge1xuICAgICAgICBpZiAodmFsdWUuc2xpY2UoMCwgK3RoaXMubmFtZS5sZW5ndGggKyAxKSAhPT0gdGhpcy5uYW1lICsgJygnKSB7XG4gICAgICAgICAgcmV0dXJuIHZhbHVlXG4gICAgICAgIH1cblxuICAgICAgICBsZXQgY2xvc2UgPSB2YWx1ZS5sYXN0SW5kZXhPZignKScpXG4gICAgICAgIGxldCBhZnRlciA9IHZhbHVlLnNsaWNlKGNsb3NlICsgMSlcbiAgICAgICAgbGV0IGFyZ3MgPSB2YWx1ZS5zbGljZSh0aGlzLm5hbWUubGVuZ3RoICsgMSwgY2xvc2UpXG5cbiAgICAgICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJykge1xuICAgICAgICAgIGxldCBtYXRjaCA9IGFyZ3MubWF0Y2goL1xcZCouP1xcZCslPy8pXG4gICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBhcmdzID0gYXJncy5zbGljZShtYXRjaFswXS5sZW5ndGgpLnRyaW0oKVxuICAgICAgICAgICAgYXJncyArPSBgLCAke21hdGNoWzBdfWBcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXJncyArPSAnLCAwLjUnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcmVmaXggKyB0aGlzLm5hbWUgKyAnKCcgKyBhcmdzICsgJyknICsgYWZ0ZXJcbiAgICAgIH0pXG4gICAgICAuam9pbignICcpXG4gIH1cbn1cblxuQ3Jvc3NGYWRlLm5hbWVzID0gWydjcm9zcy1mYWRlJ11cblxubW9kdWxlLmV4cG9ydHMgPSBDcm9zc0ZhZGVcbiJdLCJuYW1lcyI6WyJsaXN0IiwicmVxdWlyZSIsIlZhbHVlIiwiQ3Jvc3NGYWRlIiwicmVwbGFjZSIsInN0cmluZyIsInByZWZpeCIsInNwYWNlIiwibWFwIiwidmFsdWUiLCJzbGljZSIsIm5hbWUiLCJsZW5ndGgiLCJjbG9zZSIsImxhc3RJbmRleE9mIiwiYWZ0ZXIiLCJhcmdzIiwibWF0Y2giLCJ0cmltIiwiam9pbiIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/cross-fade.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/display-flex.js":
/*!*************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/display-flex.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet OldValue = __webpack_require__(/*! ../old-value */ \"(ssr)/./node_modules/autoprefixer/lib/old-value.js\");\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nclass DisplayFlex extends Value {\n    constructor(name, prefixes){\n        super(name, prefixes);\n        if (name === \"display-flex\") {\n            this.name = \"flex\";\n        }\n    }\n    /**\n   * Faster check for flex value\n   */ check(decl) {\n        return decl.prop === \"display\" && decl.value === this.name;\n    }\n    /**\n   * Change value for old specs\n   */ old(prefix) {\n        let prefixed = this.prefixed(prefix);\n        if (!prefixed) return undefined;\n        return new OldValue(this.name, prefixed);\n    }\n    /**\n   * Return value by spec\n   */ prefixed(prefix) {\n        let spec, value;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2009) {\n            if (this.name === \"flex\") {\n                value = \"box\";\n            } else {\n                value = \"inline-box\";\n            }\n        } else if (spec === 2012) {\n            if (this.name === \"flex\") {\n                value = \"flexbox\";\n            } else {\n                value = \"inline-flexbox\";\n            }\n        } else if (spec === \"final\") {\n            value = this.name;\n        }\n        return prefix + value;\n    }\n    /**\n   * Add prefix to value depend on flebox spec version\n   */ replace(string, prefix) {\n        return this.prefixed(prefix);\n    }\n}\nDisplayFlex.names = [\n    \"display-flex\",\n    \"inline-flex\"\n];\nmodule.exports = DisplayFlex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9kaXNwbGF5LWZsZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlDLFdBQVdELG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlFLFFBQVFGLG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1HLG9CQUFvQkQ7SUFDeEJFLFlBQVlDLElBQUksRUFBRUMsUUFBUSxDQUFFO1FBQzFCLEtBQUssQ0FBQ0QsTUFBTUM7UUFDWixJQUFJRCxTQUFTLGdCQUFnQjtZQUMzQixJQUFJLENBQUNBLElBQUksR0FBRztRQUNkO0lBQ0Y7SUFFQTs7R0FFQyxHQUNERSxNQUFNQyxJQUFJLEVBQUU7UUFDVixPQUFPQSxLQUFLQyxJQUFJLEtBQUssYUFBYUQsS0FBS0UsS0FBSyxLQUFLLElBQUksQ0FBQ0wsSUFBSTtJQUM1RDtJQUVBOztHQUVDLEdBQ0RNLElBQUlDLE1BQU0sRUFBRTtRQUNWLElBQUlDLFdBQVcsSUFBSSxDQUFDQSxRQUFRLENBQUNEO1FBQzdCLElBQUksQ0FBQ0MsVUFBVSxPQUFPQztRQUN0QixPQUFPLElBQUliLFNBQVMsSUFBSSxDQUFDSSxJQUFJLEVBQUVRO0lBQ2pDO0lBRUE7O0dBRUMsR0FDREEsU0FBU0QsTUFBTSxFQUFFO1FBQ2YsSUFBSUcsTUFBTUw7UUFDVCxDQUFDSyxNQUFNSCxPQUFPLEdBQUdiLFNBQVNhO1FBRTNCLElBQUlHLFNBQVMsTUFBTTtZQUNqQixJQUFJLElBQUksQ0FBQ1YsSUFBSSxLQUFLLFFBQVE7Z0JBQ3hCSyxRQUFRO1lBQ1YsT0FBTztnQkFDTEEsUUFBUTtZQUNWO1FBQ0YsT0FBTyxJQUFJSyxTQUFTLE1BQU07WUFDeEIsSUFBSSxJQUFJLENBQUNWLElBQUksS0FBSyxRQUFRO2dCQUN4QkssUUFBUTtZQUNWLE9BQU87Z0JBQ0xBLFFBQVE7WUFDVjtRQUNGLE9BQU8sSUFBSUssU0FBUyxTQUFTO1lBQzNCTCxRQUFRLElBQUksQ0FBQ0wsSUFBSTtRQUNuQjtRQUVBLE9BQU9PLFNBQVNGO0lBQ2xCO0lBRUE7O0dBRUMsR0FDRE0sUUFBUUMsTUFBTSxFQUFFTCxNQUFNLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0Q7SUFDdkI7QUFDRjtBQUVBVCxZQUFZZSxLQUFLLEdBQUc7SUFBQztJQUFnQjtDQUFjO0FBRW5EQyxPQUFPQyxPQUFPLEdBQUdqQiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2Rpc3BsYXktZmxleC5qcz8xY2EzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBmbGV4U3BlYyA9IHJlcXVpcmUoJy4vZmxleC1zcGVjJylcbmxldCBPbGRWYWx1ZSA9IHJlcXVpcmUoJy4uL29sZC12YWx1ZScpXG5sZXQgVmFsdWUgPSByZXF1aXJlKCcuLi92YWx1ZScpXG5cbmNsYXNzIERpc3BsYXlGbGV4IGV4dGVuZHMgVmFsdWUge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXhlcykge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzKVxuICAgIGlmIChuYW1lID09PSAnZGlzcGxheS1mbGV4Jykge1xuICAgICAgdGhpcy5uYW1lID0gJ2ZsZXgnXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEZhc3RlciBjaGVjayBmb3IgZmxleCB2YWx1ZVxuICAgKi9cbiAgY2hlY2soZGVjbCkge1xuICAgIHJldHVybiBkZWNsLnByb3AgPT09ICdkaXNwbGF5JyAmJiBkZWNsLnZhbHVlID09PSB0aGlzLm5hbWVcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgdmFsdWUgZm9yIG9sZCBzcGVjc1xuICAgKi9cbiAgb2xkKHByZWZpeCkge1xuICAgIGxldCBwcmVmaXhlZCA9IHRoaXMucHJlZml4ZWQocHJlZml4KVxuICAgIGlmICghcHJlZml4ZWQpIHJldHVybiB1bmRlZmluZWRcbiAgICByZXR1cm4gbmV3IE9sZFZhbHVlKHRoaXMubmFtZSwgcHJlZml4ZWQpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHZhbHVlIGJ5IHNwZWNcbiAgICovXG4gIHByZWZpeGVkKHByZWZpeCkge1xuICAgIGxldCBzcGVjLCB2YWx1ZVxuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcblxuICAgIGlmIChzcGVjID09PSAyMDA5KSB7XG4gICAgICBpZiAodGhpcy5uYW1lID09PSAnZmxleCcpIHtcbiAgICAgICAgdmFsdWUgPSAnYm94J1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWUgPSAnaW5saW5lLWJveCdcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIGlmICh0aGlzLm5hbWUgPT09ICdmbGV4Jykge1xuICAgICAgICB2YWx1ZSA9ICdmbGV4Ym94J1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWUgPSAnaW5saW5lLWZsZXhib3gnXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChzcGVjID09PSAnZmluYWwnKSB7XG4gICAgICB2YWx1ZSA9IHRoaXMubmFtZVxuICAgIH1cblxuICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZVxuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBwcmVmaXggdG8gdmFsdWUgZGVwZW5kIG9uIGZsZWJveCBzcGVjIHZlcnNpb25cbiAgICovXG4gIHJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gdGhpcy5wcmVmaXhlZChwcmVmaXgpXG4gIH1cbn1cblxuRGlzcGxheUZsZXgubmFtZXMgPSBbJ2Rpc3BsYXktZmxleCcsICdpbmxpbmUtZmxleCddXG5cbm1vZHVsZS5leHBvcnRzID0gRGlzcGxheUZsZXhcbiJdLCJuYW1lcyI6WyJmbGV4U3BlYyIsInJlcXVpcmUiLCJPbGRWYWx1ZSIsIlZhbHVlIiwiRGlzcGxheUZsZXgiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJwcmVmaXhlcyIsImNoZWNrIiwiZGVjbCIsInByb3AiLCJ2YWx1ZSIsIm9sZCIsInByZWZpeCIsInByZWZpeGVkIiwidW5kZWZpbmVkIiwic3BlYyIsInJlcGxhY2UiLCJzdHJpbmciLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/display-flex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/display-grid.js":
/*!*************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/display-grid.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nclass DisplayGrid extends Value {\n    constructor(name, prefixes){\n        super(name, prefixes);\n        if (name === \"display-grid\") {\n            this.name = \"grid\";\n        }\n    }\n    /**\n   * Faster check for flex value\n   */ check(decl) {\n        return decl.prop === \"display\" && decl.value === this.name;\n    }\n}\nDisplayGrid.names = [\n    \"display-grid\",\n    \"inline-grid\"\n];\nmodule.exports = DisplayGrid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9kaXNwbGF5LWdyaWQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1DLG9CQUFvQkY7SUFDeEJHLFlBQVlDLElBQUksRUFBRUMsUUFBUSxDQUFFO1FBQzFCLEtBQUssQ0FBQ0QsTUFBTUM7UUFDWixJQUFJRCxTQUFTLGdCQUFnQjtZQUMzQixJQUFJLENBQUNBLElBQUksR0FBRztRQUNkO0lBQ0Y7SUFFQTs7R0FFQyxHQUNERSxNQUFNQyxJQUFJLEVBQUU7UUFDVixPQUFPQSxLQUFLQyxJQUFJLEtBQUssYUFBYUQsS0FBS0UsS0FBSyxLQUFLLElBQUksQ0FBQ0wsSUFBSTtJQUM1RDtBQUNGO0FBRUFGLFlBQVlRLEtBQUssR0FBRztJQUFDO0lBQWdCO0NBQWM7QUFFbkRDLE9BQU9DLE9BQU8sR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9kaXNwbGF5LWdyaWQuanM/ZGY4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgVmFsdWUgPSByZXF1aXJlKCcuLi92YWx1ZScpXG5cbmNsYXNzIERpc3BsYXlHcmlkIGV4dGVuZHMgVmFsdWUge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXhlcykge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzKVxuICAgIGlmIChuYW1lID09PSAnZGlzcGxheS1ncmlkJykge1xuICAgICAgdGhpcy5uYW1lID0gJ2dyaWQnXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEZhc3RlciBjaGVjayBmb3IgZmxleCB2YWx1ZVxuICAgKi9cbiAgY2hlY2soZGVjbCkge1xuICAgIHJldHVybiBkZWNsLnByb3AgPT09ICdkaXNwbGF5JyAmJiBkZWNsLnZhbHVlID09PSB0aGlzLm5hbWVcbiAgfVxufVxuXG5EaXNwbGF5R3JpZC5uYW1lcyA9IFsnZGlzcGxheS1ncmlkJywgJ2lubGluZS1ncmlkJ11cblxubW9kdWxlLmV4cG9ydHMgPSBEaXNwbGF5R3JpZFxuIl0sIm5hbWVzIjpbIlZhbHVlIiwicmVxdWlyZSIsIkRpc3BsYXlHcmlkIiwiY29uc3RydWN0b3IiLCJuYW1lIiwicHJlZml4ZXMiLCJjaGVjayIsImRlY2wiLCJwcm9wIiwidmFsdWUiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/display-grid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/file-selector-button.js":
/*!*********************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/file-selector-button.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Selector = __webpack_require__(/*! ../selector */ \"(ssr)/./node_modules/autoprefixer/lib/selector.js\");\nlet utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass FileSelectorButton extends Selector {\n    constructor(name, prefixes, all){\n        super(name, prefixes, all);\n        if (this.prefixes) {\n            this.prefixes = utils.uniq(this.prefixes.map(()=>\"-webkit-\"));\n        }\n    }\n    /**\n   * Return different selectors depend on prefix\n   */ prefixed(prefix) {\n        if (prefix === \"-webkit-\") {\n            return \"::-webkit-file-upload-button\";\n        }\n        return `::${prefix}file-selector-button`;\n    }\n}\nFileSelectorButton.names = [\n    \"::file-selector-button\"\n];\nmodule.exports = FileSelectorButton;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9maWxlLXNlbGVjdG9yLWJ1dHRvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsUUFBUUQsbUJBQU9BLENBQUM7QUFFcEIsTUFBTUUsMkJBQTJCSDtJQUMvQkksWUFBWUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLEdBQUcsQ0FBRTtRQUMvQixLQUFLLENBQUNGLE1BQU1DLFVBQVVDO1FBRXRCLElBQUksSUFBSSxDQUFDRCxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDQSxRQUFRLEdBQUdKLE1BQU1NLElBQUksQ0FBQyxJQUFJLENBQUNGLFFBQVEsQ0FBQ0csR0FBRyxDQUFDLElBQU07UUFDckQ7SUFDRjtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLE1BQU0sRUFBRTtRQUNmLElBQUlBLFdBQVcsWUFBWTtZQUN6QixPQUFPO1FBQ1Q7UUFDQSxPQUFPLENBQUMsRUFBRSxFQUFFQSxPQUFPLG9CQUFvQixDQUFDO0lBQzFDO0FBQ0Y7QUFFQVIsbUJBQW1CUyxLQUFLLEdBQUc7SUFBQztDQUF5QjtBQUVyREMsT0FBT0MsT0FBTyxHQUFHWCIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2ZpbGUtc2VsZWN0b3ItYnV0dG9uLmpzP2ZiNGQiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vc2VsZWN0b3InKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKVxuXG5jbGFzcyBGaWxlU2VsZWN0b3JCdXR0b24gZXh0ZW5kcyBTZWxlY3RvciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeGVzLCBhbGwpIHtcbiAgICBzdXBlcihuYW1lLCBwcmVmaXhlcywgYWxsKVxuXG4gICAgaWYgKHRoaXMucHJlZml4ZXMpIHtcbiAgICAgIHRoaXMucHJlZml4ZXMgPSB1dGlscy51bmlxKHRoaXMucHJlZml4ZXMubWFwKCgpID0+ICctd2Via2l0LScpKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZGlmZmVyZW50IHNlbGVjdG9ycyBkZXBlbmQgb24gcHJlZml4XG4gICAqL1xuICBwcmVmaXhlZChwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXR1cm4gJzo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24nXG4gICAgfVxuICAgIHJldHVybiBgOjoke3ByZWZpeH1maWxlLXNlbGVjdG9yLWJ1dHRvbmBcbiAgfVxufVxuXG5GaWxlU2VsZWN0b3JCdXR0b24ubmFtZXMgPSBbJzo6ZmlsZS1zZWxlY3Rvci1idXR0b24nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZpbGVTZWxlY3RvckJ1dHRvblxuIl0sIm5hbWVzIjpbIlNlbGVjdG9yIiwicmVxdWlyZSIsInV0aWxzIiwiRmlsZVNlbGVjdG9yQnV0dG9uIiwiY29uc3RydWN0b3IiLCJuYW1lIiwicHJlZml4ZXMiLCJhbGwiLCJ1bmlxIiwibWFwIiwicHJlZml4ZWQiLCJwcmVmaXgiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/file-selector-button.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/filter-value.js":
/*!*************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/filter-value.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nclass FilterValue extends Value {\n    constructor(name, prefixes){\n        super(name, prefixes);\n        if (name === \"filter-function\") {\n            this.name = \"filter\";\n        }\n    }\n}\nFilterValue.names = [\n    \"filter\",\n    \"filter-function\"\n];\nmodule.exports = FilterValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9maWx0ZXItdmFsdWUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1DLG9CQUFvQkY7SUFDeEJHLFlBQVlDLElBQUksRUFBRUMsUUFBUSxDQUFFO1FBQzFCLEtBQUssQ0FBQ0QsTUFBTUM7UUFDWixJQUFJRCxTQUFTLG1CQUFtQjtZQUM5QixJQUFJLENBQUNBLElBQUksR0FBRztRQUNkO0lBQ0Y7QUFDRjtBQUVBRixZQUFZSSxLQUFLLEdBQUc7SUFBQztJQUFVO0NBQWtCO0FBRWpEQyxPQUFPQyxPQUFPLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmlsdGVyLXZhbHVlLmpzPzlhMzgiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxuXG5jbGFzcyBGaWx0ZXJWYWx1ZSBleHRlbmRzIFZhbHVlIHtcbiAgY29uc3RydWN0b3IobmFtZSwgcHJlZml4ZXMpIHtcbiAgICBzdXBlcihuYW1lLCBwcmVmaXhlcylcbiAgICBpZiAobmFtZSA9PT0gJ2ZpbHRlci1mdW5jdGlvbicpIHtcbiAgICAgIHRoaXMubmFtZSA9ICdmaWx0ZXInXG4gICAgfVxuICB9XG59XG5cbkZpbHRlclZhbHVlLm5hbWVzID0gWydmaWx0ZXInLCAnZmlsdGVyLWZ1bmN0aW9uJ11cblxubW9kdWxlLmV4cG9ydHMgPSBGaWx0ZXJWYWx1ZVxuIl0sIm5hbWVzIjpbIlZhbHVlIiwicmVxdWlyZSIsIkZpbHRlclZhbHVlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwicHJlZml4ZXMiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/filter-value.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/filter.js":
/*!*******************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/filter.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass Filter extends Declaration {\n    /**\n   * Check is it Internet Explorer filter\n   */ check(decl) {\n        let v = decl.value;\n        return !v.toLowerCase().includes(\"alpha(\") && !v.includes(\"DXImageTransform.Microsoft\") && !v.includes(\"data:image/svg+xml\");\n    }\n}\nFilter.names = [\n    \"filter\"\n];\nmodule.exports = Filter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9maWx0ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLGVBQWVGO0lBQ25COztHQUVDLEdBQ0RHLE1BQU1DLElBQUksRUFBRTtRQUNWLElBQUlDLElBQUlELEtBQUtFLEtBQUs7UUFDbEIsT0FDRSxDQUFDRCxFQUFFRSxXQUFXLEdBQUdDLFFBQVEsQ0FBQyxhQUMxQixDQUFDSCxFQUFFRyxRQUFRLENBQUMsaUNBQ1osQ0FBQ0gsRUFBRUcsUUFBUSxDQUFDO0lBRWhCO0FBQ0Y7QUFFQU4sT0FBT08sS0FBSyxHQUFHO0lBQUM7Q0FBUztBQUV6QkMsT0FBT0MsT0FBTyxHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2ZpbHRlci5qcz8wN2UxIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgRmlsdGVyIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQ2hlY2sgaXMgaXQgSW50ZXJuZXQgRXhwbG9yZXIgZmlsdGVyXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgbGV0IHYgPSBkZWNsLnZhbHVlXG4gICAgcmV0dXJuIChcbiAgICAgICF2LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ2FscGhhKCcpICYmXG4gICAgICAhdi5pbmNsdWRlcygnRFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQnKSAmJlxuICAgICAgIXYuaW5jbHVkZXMoJ2RhdGE6aW1hZ2Uvc3ZnK3htbCcpXG4gICAgKVxuICB9XG59XG5cbkZpbHRlci5uYW1lcyA9IFsnZmlsdGVyJ11cblxubW9kdWxlLmV4cG9ydHMgPSBGaWx0ZXJcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJGaWx0ZXIiLCJjaGVjayIsImRlY2wiLCJ2IiwidmFsdWUiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/filter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex-basis.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex-basis.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass FlexBasis extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"flex-basis\";\n    }\n    /**\n   * Return flex property for 2012 spec\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2012) {\n            return prefix + \"flex-preferred-size\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Ignore 2009 spec and use flex property for 2012\n   */ set(decl, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2012 || spec === \"final\") {\n            return super.set(decl, prefix);\n        }\n        return undefined;\n    }\n}\nFlexBasis.names = [\n    \"flex-basis\",\n    \"flex-preferred-size\"\n];\nmodule.exports = FlexBasis;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWJhc2lzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQztBQUN2QixJQUFJQyxjQUFjRCxtQkFBT0EsQ0FBQztBQUUxQixNQUFNRSxrQkFBa0JEO0lBQ3RCOztHQUVDLEdBQ0RFLFlBQVk7UUFDVixPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNyQixJQUFJQztRQUNILENBQUNBLE1BQU1ELE9BQU8sR0FBR1AsU0FBU087UUFDM0IsSUFBSUMsU0FBUyxNQUFNO1lBQ2pCLE9BQU9ELFNBQVM7UUFDbEI7UUFDQSxPQUFPLEtBQUssQ0FBQ0YsU0FBU0MsTUFBTUM7SUFDOUI7SUFFQTs7R0FFQyxHQUNERSxJQUFJQyxJQUFJLEVBQUVILE1BQU0sRUFBRTtRQUNoQixJQUFJQztRQUNILENBQUNBLE1BQU1ELE9BQU8sR0FBR1AsU0FBU087UUFDM0IsSUFBSUMsU0FBUyxRQUFRQSxTQUFTLFNBQVM7WUFDckMsT0FBTyxLQUFLLENBQUNDLElBQUlDLE1BQU1IO1FBQ3pCO1FBQ0EsT0FBT0k7SUFDVDtBQUNGO0FBRUFSLFVBQVVTLEtBQUssR0FBRztJQUFDO0lBQWM7Q0FBc0I7QUFFdkRDLE9BQU9DLE9BQU8sR0FBR1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWJhc2lzLmpzPzQyYjAiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBGbGV4QmFzaXMgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdmbGV4LWJhc2lzJ1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBmbGV4IHByb3BlcnR5IGZvciAyMDEyIHNwZWNcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjID09PSAyMDEyKSB7XG4gICAgICByZXR1cm4gcHJlZml4ICsgJ2ZsZXgtcHJlZmVycmVkLXNpemUnXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogSWdub3JlIDIwMDkgc3BlYyBhbmQgdXNlIGZsZXggcHJvcGVydHkgZm9yIDIwMTJcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAxMiB8fCBzcGVjID09PSAnZmluYWwnKSB7XG4gICAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbkZsZXhCYXNpcy5uYW1lcyA9IFsnZmxleC1iYXNpcycsICdmbGV4LXByZWZlcnJlZC1zaXplJ11cblxubW9kdWxlLmV4cG9ydHMgPSBGbGV4QmFzaXNcbiJdLCJuYW1lcyI6WyJmbGV4U3BlYyIsInJlcXVpcmUiLCJEZWNsYXJhdGlvbiIsIkZsZXhCYXNpcyIsIm5vcm1hbGl6ZSIsInByZWZpeGVkIiwicHJvcCIsInByZWZpeCIsInNwZWMiLCJzZXQiLCJkZWNsIiwidW5kZWZpbmVkIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex-basis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex-direction.js":
/*!***************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex-direction.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass FlexDirection extends Declaration {\n    /**\n   * Use two properties for 2009 spec\n   */ insert(decl, prefix, prefixes) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec !== 2009) {\n            return super.insert(decl, prefix, prefixes);\n        }\n        let already = decl.parent.some((i)=>i.prop === prefix + \"box-orient\" || i.prop === prefix + \"box-direction\");\n        if (already) {\n            return undefined;\n        }\n        let v = decl.value;\n        let orient, dir;\n        if (v === \"inherit\" || v === \"initial\" || v === \"unset\") {\n            orient = v;\n            dir = v;\n        } else {\n            orient = v.includes(\"row\") ? \"horizontal\" : \"vertical\";\n            dir = v.includes(\"reverse\") ? \"reverse\" : \"normal\";\n        }\n        let cloned = this.clone(decl);\n        cloned.prop = prefix + \"box-orient\";\n        cloned.value = orient;\n        if (this.needCascade(decl)) {\n            cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        decl.parent.insertBefore(decl, cloned);\n        cloned = this.clone(decl);\n        cloned.prop = prefix + \"box-direction\";\n        cloned.value = dir;\n        if (this.needCascade(decl)) {\n            cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, cloned);\n    }\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"flex-direction\";\n    }\n    /**\n   * Clean two properties for 2009 spec\n   */ old(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2009) {\n            return [\n                prefix + \"box-orient\",\n                prefix + \"box-direction\"\n            ];\n        } else {\n            return super.old(prop, prefix);\n        }\n    }\n}\nFlexDirection.names = [\n    \"flex-direction\",\n    \"box-direction\",\n    \"box-orient\"\n];\nmodule.exports = FlexDirection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWRpcmVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUUsc0JBQXNCRDtJQUMxQjs7R0FFQyxHQUNERSxPQUFPQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFO1FBQzdCLElBQUlDO1FBQ0gsQ0FBQ0EsTUFBTUYsT0FBTyxHQUFHTixTQUFTTTtRQUMzQixJQUFJRSxTQUFTLE1BQU07WUFDakIsT0FBTyxLQUFLLENBQUNKLE9BQU9DLE1BQU1DLFFBQVFDO1FBQ3BDO1FBQ0EsSUFBSUUsVUFBVUosS0FBS0ssTUFBTSxDQUFDQyxJQUFJLENBQzVCQyxDQUFBQSxJQUNFQSxFQUFFQyxJQUFJLEtBQUtQLFNBQVMsZ0JBQWdCTSxFQUFFQyxJQUFJLEtBQUtQLFNBQVM7UUFFNUQsSUFBSUcsU0FBUztZQUNYLE9BQU9LO1FBQ1Q7UUFFQSxJQUFJQyxJQUFJVixLQUFLVyxLQUFLO1FBQ2xCLElBQUlDLFFBQVFDO1FBQ1osSUFBSUgsTUFBTSxhQUFhQSxNQUFNLGFBQWFBLE1BQU0sU0FBUztZQUN2REUsU0FBU0Y7WUFDVEcsTUFBTUg7UUFDUixPQUFPO1lBQ0xFLFNBQVNGLEVBQUVJLFFBQVEsQ0FBQyxTQUFTLGVBQWU7WUFDNUNELE1BQU1ILEVBQUVJLFFBQVEsQ0FBQyxhQUFhLFlBQVk7UUFDNUM7UUFFQSxJQUFJQyxTQUFTLElBQUksQ0FBQ0MsS0FBSyxDQUFDaEI7UUFDeEJlLE9BQU9QLElBQUksR0FBR1AsU0FBUztRQUN2QmMsT0FBT0osS0FBSyxHQUFHQztRQUNmLElBQUksSUFBSSxDQUFDSyxXQUFXLENBQUNqQixPQUFPO1lBQzFCZSxPQUFPRyxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJLENBQUNDLFVBQVUsQ0FBQ2xCLFVBQVVGLE1BQU1DO1FBQ3ZEO1FBQ0FELEtBQUtLLE1BQU0sQ0FBQ2dCLFlBQVksQ0FBQ3JCLE1BQU1lO1FBRS9CQSxTQUFTLElBQUksQ0FBQ0MsS0FBSyxDQUFDaEI7UUFDcEJlLE9BQU9QLElBQUksR0FBR1AsU0FBUztRQUN2QmMsT0FBT0osS0FBSyxHQUFHRTtRQUNmLElBQUksSUFBSSxDQUFDSSxXQUFXLENBQUNqQixPQUFPO1lBQzFCZSxPQUFPRyxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJLENBQUNDLFVBQVUsQ0FBQ2xCLFVBQVVGLE1BQU1DO1FBQ3ZEO1FBQ0EsT0FBT0QsS0FBS0ssTUFBTSxDQUFDZ0IsWUFBWSxDQUFDckIsTUFBTWU7SUFDeEM7SUFFQTs7R0FFQyxHQUNETyxZQUFZO1FBQ1YsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDREMsSUFBSWYsSUFBSSxFQUFFUCxNQUFNLEVBQUU7UUFDaEIsSUFBSUU7UUFDSCxDQUFDQSxNQUFNRixPQUFPLEdBQUdOLFNBQVNNO1FBQzNCLElBQUlFLFNBQVMsTUFBTTtZQUNqQixPQUFPO2dCQUFDRixTQUFTO2dCQUFjQSxTQUFTO2FBQWdCO1FBQzFELE9BQU87WUFDTCxPQUFPLEtBQUssQ0FBQ3NCLElBQUlmLE1BQU1QO1FBQ3pCO0lBQ0Y7QUFDRjtBQUVBSCxjQUFjMEIsS0FBSyxHQUFHO0lBQUM7SUFBa0I7SUFBaUI7Q0FBYTtBQUV2RUMsT0FBT0MsT0FBTyxHQUFHNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWRpcmVjdGlvbi5qcz82OTRiIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBmbGV4U3BlYyA9IHJlcXVpcmUoJy4vZmxleC1zcGVjJylcbmxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgRmxleERpcmVjdGlvbiBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFVzZSB0d28gcHJvcGVydGllcyBmb3IgMjAwOSBzcGVjXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcykge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjICE9PSAyMDA5KSB7XG4gICAgICByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG4gICAgfVxuICAgIGxldCBhbHJlYWR5ID0gZGVjbC5wYXJlbnQuc29tZShcbiAgICAgIGkgPT5cbiAgICAgICAgaS5wcm9wID09PSBwcmVmaXggKyAnYm94LW9yaWVudCcgfHwgaS5wcm9wID09PSBwcmVmaXggKyAnYm94LWRpcmVjdGlvbidcbiAgICApXG4gICAgaWYgKGFscmVhZHkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG5cbiAgICBsZXQgdiA9IGRlY2wudmFsdWVcbiAgICBsZXQgb3JpZW50LCBkaXJcbiAgICBpZiAodiA9PT0gJ2luaGVyaXQnIHx8IHYgPT09ICdpbml0aWFsJyB8fCB2ID09PSAndW5zZXQnKSB7XG4gICAgICBvcmllbnQgPSB2XG4gICAgICBkaXIgPSB2XG4gICAgfSBlbHNlIHtcbiAgICAgIG9yaWVudCA9IHYuaW5jbHVkZXMoJ3JvdycpID8gJ2hvcml6b250YWwnIDogJ3ZlcnRpY2FsJ1xuICAgICAgZGlyID0gdi5pbmNsdWRlcygncmV2ZXJzZScpID8gJ3JldmVyc2UnIDogJ25vcm1hbCdcbiAgICB9XG5cbiAgICBsZXQgY2xvbmVkID0gdGhpcy5jbG9uZShkZWNsKVxuICAgIGNsb25lZC5wcm9wID0gcHJlZml4ICsgJ2JveC1vcmllbnQnXG4gICAgY2xvbmVkLnZhbHVlID0gb3JpZW50XG4gICAgaWYgKHRoaXMubmVlZENhc2NhZGUoZGVjbCkpIHtcbiAgICAgIGNsb25lZC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICBkZWNsLnBhcmVudC5pbnNlcnRCZWZvcmUoZGVjbCwgY2xvbmVkKVxuXG4gICAgY2xvbmVkID0gdGhpcy5jbG9uZShkZWNsKVxuICAgIGNsb25lZC5wcm9wID0gcHJlZml4ICsgJ2JveC1kaXJlY3Rpb24nXG4gICAgY2xvbmVkLnZhbHVlID0gZGlyXG4gICAgaWYgKHRoaXMubmVlZENhc2NhZGUoZGVjbCkpIHtcbiAgICAgIGNsb25lZC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gZGVjbC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGRlY2wsIGNsb25lZClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdmbGV4LWRpcmVjdGlvbidcbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhbiB0d28gcHJvcGVydGllcyBmb3IgMjAwOSBzcGVjXG4gICAqL1xuICBvbGQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMDkpIHtcbiAgICAgIHJldHVybiBbcHJlZml4ICsgJ2JveC1vcmllbnQnLCBwcmVmaXggKyAnYm94LWRpcmVjdGlvbiddXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBzdXBlci5vbGQocHJvcCwgcHJlZml4KVxuICAgIH1cbiAgfVxufVxuXG5GbGV4RGlyZWN0aW9uLm5hbWVzID0gWydmbGV4LWRpcmVjdGlvbicsICdib3gtZGlyZWN0aW9uJywgJ2JveC1vcmllbnQnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhEaXJlY3Rpb25cbiJdLCJuYW1lcyI6WyJmbGV4U3BlYyIsInJlcXVpcmUiLCJEZWNsYXJhdGlvbiIsIkZsZXhEaXJlY3Rpb24iLCJpbnNlcnQiLCJkZWNsIiwicHJlZml4IiwicHJlZml4ZXMiLCJzcGVjIiwiYWxyZWFkeSIsInBhcmVudCIsInNvbWUiLCJpIiwicHJvcCIsInVuZGVmaW5lZCIsInYiLCJ2YWx1ZSIsIm9yaWVudCIsImRpciIsImluY2x1ZGVzIiwiY2xvbmVkIiwiY2xvbmUiLCJuZWVkQ2FzY2FkZSIsInJhd3MiLCJiZWZvcmUiLCJjYWxjQmVmb3JlIiwiaW5zZXJ0QmVmb3JlIiwibm9ybWFsaXplIiwib2xkIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex-direction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex-flow.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex-flow.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass FlexFlow extends Declaration {\n    /**\n   * Use two properties for 2009 spec\n   */ insert(decl, prefix, prefixes) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec !== 2009) {\n            return super.insert(decl, prefix, prefixes);\n        }\n        let values = decl.value.split(/\\s+/).filter((i)=>i !== \"wrap\" && i !== \"nowrap\" && \"wrap-reverse\");\n        if (values.length === 0) {\n            return undefined;\n        }\n        let already = decl.parent.some((i)=>i.prop === prefix + \"box-orient\" || i.prop === prefix + \"box-direction\");\n        if (already) {\n            return undefined;\n        }\n        let value = values[0];\n        let orient = value.includes(\"row\") ? \"horizontal\" : \"vertical\";\n        let dir = value.includes(\"reverse\") ? \"reverse\" : \"normal\";\n        let cloned = this.clone(decl);\n        cloned.prop = prefix + \"box-orient\";\n        cloned.value = orient;\n        if (this.needCascade(decl)) {\n            cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        decl.parent.insertBefore(decl, cloned);\n        cloned = this.clone(decl);\n        cloned.prop = prefix + \"box-direction\";\n        cloned.value = dir;\n        if (this.needCascade(decl)) {\n            cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, cloned);\n    }\n}\nFlexFlow.names = [\n    \"flex-flow\",\n    \"box-direction\",\n    \"box-orient\"\n];\nmodule.exports = FlexFlow;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWZsb3cuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlDLGNBQWNELG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1FLGlCQUFpQkQ7SUFDckI7O0dBRUMsR0FDREUsT0FBT0MsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRTtRQUM3QixJQUFJQztRQUNILENBQUNBLE1BQU1GLE9BQU8sR0FBR04sU0FBU007UUFDM0IsSUFBSUUsU0FBUyxNQUFNO1lBQ2pCLE9BQU8sS0FBSyxDQUFDSixPQUFPQyxNQUFNQyxRQUFRQztRQUNwQztRQUNBLElBQUlFLFNBQVNKLEtBQUtLLEtBQUssQ0FDcEJDLEtBQUssQ0FBQyxPQUNOQyxNQUFNLENBQUNDLENBQUFBLElBQUtBLE1BQU0sVUFBVUEsTUFBTSxZQUFZO1FBQ2pELElBQUlKLE9BQU9LLE1BQU0sS0FBSyxHQUFHO1lBQ3ZCLE9BQU9DO1FBQ1Q7UUFFQSxJQUFJQyxVQUFVWCxLQUFLWSxNQUFNLENBQUNDLElBQUksQ0FDNUJMLENBQUFBLElBQ0VBLEVBQUVNLElBQUksS0FBS2IsU0FBUyxnQkFBZ0JPLEVBQUVNLElBQUksS0FBS2IsU0FBUztRQUU1RCxJQUFJVSxTQUFTO1lBQ1gsT0FBT0Q7UUFDVDtRQUVBLElBQUlMLFFBQVFELE1BQU0sQ0FBQyxFQUFFO1FBQ3JCLElBQUlXLFNBQVNWLE1BQU1XLFFBQVEsQ0FBQyxTQUFTLGVBQWU7UUFDcEQsSUFBSUMsTUFBTVosTUFBTVcsUUFBUSxDQUFDLGFBQWEsWUFBWTtRQUVsRCxJQUFJRSxTQUFTLElBQUksQ0FBQ0MsS0FBSyxDQUFDbkI7UUFDeEJrQixPQUFPSixJQUFJLEdBQUdiLFNBQVM7UUFDdkJpQixPQUFPYixLQUFLLEdBQUdVO1FBQ2YsSUFBSSxJQUFJLENBQUNLLFdBQVcsQ0FBQ3BCLE9BQU87WUFDMUJrQixPQUFPRyxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJLENBQUNDLFVBQVUsQ0FBQ3JCLFVBQVVGLE1BQU1DO1FBQ3ZEO1FBQ0FELEtBQUtZLE1BQU0sQ0FBQ1ksWUFBWSxDQUFDeEIsTUFBTWtCO1FBRS9CQSxTQUFTLElBQUksQ0FBQ0MsS0FBSyxDQUFDbkI7UUFDcEJrQixPQUFPSixJQUFJLEdBQUdiLFNBQVM7UUFDdkJpQixPQUFPYixLQUFLLEdBQUdZO1FBQ2YsSUFBSSxJQUFJLENBQUNHLFdBQVcsQ0FBQ3BCLE9BQU87WUFDMUJrQixPQUFPRyxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJLENBQUNDLFVBQVUsQ0FBQ3JCLFVBQVVGLE1BQU1DO1FBQ3ZEO1FBQ0EsT0FBT0QsS0FBS1ksTUFBTSxDQUFDWSxZQUFZLENBQUN4QixNQUFNa0I7SUFDeEM7QUFDRjtBQUVBcEIsU0FBUzJCLEtBQUssR0FBRztJQUFDO0lBQWE7SUFBaUI7Q0FBYTtBQUU3REMsT0FBT0MsT0FBTyxHQUFHN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWZsb3cuanM/NTVkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEZsZXhGbG93IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogVXNlIHR3byBwcm9wZXJ0aWVzIGZvciAyMDA5IHNwZWNcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgIT09IDIwMDkpIHtcbiAgICAgIHJldHVybiBzdXBlci5pbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcylcbiAgICB9XG4gICAgbGV0IHZhbHVlcyA9IGRlY2wudmFsdWVcbiAgICAgIC5zcGxpdCgvXFxzKy8pXG4gICAgICAuZmlsdGVyKGkgPT4gaSAhPT0gJ3dyYXAnICYmIGkgIT09ICdub3dyYXAnICYmICd3cmFwLXJldmVyc2UnKVxuICAgIGlmICh2YWx1ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgbGV0IGFscmVhZHkgPSBkZWNsLnBhcmVudC5zb21lKFxuICAgICAgaSA9PlxuICAgICAgICBpLnByb3AgPT09IHByZWZpeCArICdib3gtb3JpZW50JyB8fCBpLnByb3AgPT09IHByZWZpeCArICdib3gtZGlyZWN0aW9uJ1xuICAgIClcbiAgICBpZiAoYWxyZWFkeSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCB2YWx1ZSA9IHZhbHVlc1swXVxuICAgIGxldCBvcmllbnQgPSB2YWx1ZS5pbmNsdWRlcygncm93JykgPyAnaG9yaXpvbnRhbCcgOiAndmVydGljYWwnXG4gICAgbGV0IGRpciA9IHZhbHVlLmluY2x1ZGVzKCdyZXZlcnNlJykgPyAncmV2ZXJzZScgOiAnbm9ybWFsJ1xuXG4gICAgbGV0IGNsb25lZCA9IHRoaXMuY2xvbmUoZGVjbClcbiAgICBjbG9uZWQucHJvcCA9IHByZWZpeCArICdib3gtb3JpZW50J1xuICAgIGNsb25lZC52YWx1ZSA9IG9yaWVudFxuICAgIGlmICh0aGlzLm5lZWRDYXNjYWRlKGRlY2wpKSB7XG4gICAgICBjbG9uZWQucmF3cy5iZWZvcmUgPSB0aGlzLmNhbGNCZWZvcmUocHJlZml4ZXMsIGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgZGVjbC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGRlY2wsIGNsb25lZClcblxuICAgIGNsb25lZCA9IHRoaXMuY2xvbmUoZGVjbClcbiAgICBjbG9uZWQucHJvcCA9IHByZWZpeCArICdib3gtZGlyZWN0aW9uJ1xuICAgIGNsb25lZC52YWx1ZSA9IGRpclxuICAgIGlmICh0aGlzLm5lZWRDYXNjYWRlKGRlY2wpKSB7XG4gICAgICBjbG9uZWQucmF3cy5iZWZvcmUgPSB0aGlzLmNhbGNCZWZvcmUocHJlZml4ZXMsIGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgcmV0dXJuIGRlY2wucGFyZW50Lmluc2VydEJlZm9yZShkZWNsLCBjbG9uZWQpXG4gIH1cbn1cblxuRmxleEZsb3cubmFtZXMgPSBbJ2ZsZXgtZmxvdycsICdib3gtZGlyZWN0aW9uJywgJ2JveC1vcmllbnQnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhGbG93XG4iXSwibmFtZXMiOlsiZmxleFNwZWMiLCJyZXF1aXJlIiwiRGVjbGFyYXRpb24iLCJGbGV4RmxvdyIsImluc2VydCIsImRlY2wiLCJwcmVmaXgiLCJwcmVmaXhlcyIsInNwZWMiLCJ2YWx1ZXMiLCJ2YWx1ZSIsInNwbGl0IiwiZmlsdGVyIiwiaSIsImxlbmd0aCIsInVuZGVmaW5lZCIsImFscmVhZHkiLCJwYXJlbnQiLCJzb21lIiwicHJvcCIsIm9yaWVudCIsImluY2x1ZGVzIiwiZGlyIiwiY2xvbmVkIiwiY2xvbmUiLCJuZWVkQ2FzY2FkZSIsInJhd3MiLCJiZWZvcmUiLCJjYWxjQmVmb3JlIiwiaW5zZXJ0QmVmb3JlIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex-flow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex-grow.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex-grow.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass Flex extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"flex\";\n    }\n    /**\n   * Return flex property for 2009 and 2012 specs\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2009) {\n            return prefix + \"box-flex\";\n        }\n        if (spec === 2012) {\n            return prefix + \"flex-positive\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n}\nFlex.names = [\n    \"flex-grow\",\n    \"flex-positive\"\n];\nmodule.exports = Flex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWdyb3cuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlDLGNBQWNELG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1FLGFBQWFEO0lBQ2pCOztHQUVDLEdBQ0RFLFlBQVk7UUFDVixPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNyQixJQUFJQztRQUNILENBQUNBLE1BQU1ELE9BQU8sR0FBR1AsU0FBU087UUFDM0IsSUFBSUMsU0FBUyxNQUFNO1lBQ2pCLE9BQU9ELFNBQVM7UUFDbEI7UUFDQSxJQUFJQyxTQUFTLE1BQU07WUFDakIsT0FBT0QsU0FBUztRQUNsQjtRQUNBLE9BQU8sS0FBSyxDQUFDRixTQUFTQyxNQUFNQztJQUM5QjtBQUNGO0FBRUFKLEtBQUtNLEtBQUssR0FBRztJQUFDO0lBQWE7Q0FBZ0I7QUFFM0NDLE9BQU9DLE9BQU8sR0FBR1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LWdyb3cuanM/ZjY2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEZsZXggZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdmbGV4J1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBmbGV4IHByb3BlcnR5IGZvciAyMDA5IGFuZCAyMDEyIHNwZWNzXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAwOSkge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdib3gtZmxleCdcbiAgICB9XG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1wb3NpdGl2ZSdcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxufVxuXG5GbGV4Lm5hbWVzID0gWydmbGV4LWdyb3cnLCAnZmxleC1wb3NpdGl2ZSddXG5cbm1vZHVsZS5leHBvcnRzID0gRmxleFxuIl0sIm5hbWVzIjpbImZsZXhTcGVjIiwicmVxdWlyZSIsIkRlY2xhcmF0aW9uIiwiRmxleCIsIm5vcm1hbGl6ZSIsInByZWZpeGVkIiwicHJvcCIsInByZWZpeCIsInNwZWMiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex-grow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex-shrink.js":
/*!************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex-shrink.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass FlexShrink extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"flex-shrink\";\n    }\n    /**\n   * Return flex property for 2012 spec\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2012) {\n            return prefix + \"flex-negative\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Ignore 2009 spec and use flex property for 2012\n   */ set(decl, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2012 || spec === \"final\") {\n            return super.set(decl, prefix);\n        }\n        return undefined;\n    }\n}\nFlexShrink.names = [\n    \"flex-shrink\",\n    \"flex-negative\"\n];\nmodule.exports = FlexShrink;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LXNocmluay5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUUsbUJBQW1CRDtJQUN2Qjs7R0FFQyxHQUNERSxZQUFZO1FBQ1YsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDREMsU0FBU0MsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDckIsSUFBSUM7UUFDSCxDQUFDQSxNQUFNRCxPQUFPLEdBQUdQLFNBQVNPO1FBQzNCLElBQUlDLFNBQVMsTUFBTTtZQUNqQixPQUFPRCxTQUFTO1FBQ2xCO1FBQ0EsT0FBTyxLQUFLLENBQUNGLFNBQVNDLE1BQU1DO0lBQzlCO0lBRUE7O0dBRUMsR0FDREUsSUFBSUMsSUFBSSxFQUFFSCxNQUFNLEVBQUU7UUFDaEIsSUFBSUM7UUFDSCxDQUFDQSxNQUFNRCxPQUFPLEdBQUdQLFNBQVNPO1FBQzNCLElBQUlDLFNBQVMsUUFBUUEsU0FBUyxTQUFTO1lBQ3JDLE9BQU8sS0FBSyxDQUFDQyxJQUFJQyxNQUFNSDtRQUN6QjtRQUNBLE9BQU9JO0lBQ1Q7QUFDRjtBQUVBUixXQUFXUyxLQUFLLEdBQUc7SUFBQztJQUFlO0NBQWdCO0FBRW5EQyxPQUFPQyxPQUFPLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmxleC1zaHJpbmsuanM/Yzc3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEZsZXhTaHJpbmsgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdmbGV4LXNocmluaydcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZmxleCBwcm9wZXJ0eSBmb3IgMjAxMiBzcGVjXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAxMikge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdmbGV4LW5lZ2F0aXZlJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIElnbm9yZSAyMDA5IHNwZWMgYW5kIHVzZSBmbGV4IHByb3BlcnR5IGZvciAyMDEyXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMTIgfHwgc3BlYyA9PT0gJ2ZpbmFsJykge1xuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5GbGV4U2hyaW5rLm5hbWVzID0gWydmbGV4LXNocmluaycsICdmbGV4LW5lZ2F0aXZlJ11cblxubW9kdWxlLmV4cG9ydHMgPSBGbGV4U2hyaW5rXG4iXSwibmFtZXMiOlsiZmxleFNwZWMiLCJyZXF1aXJlIiwiRGVjbGFyYXRpb24iLCJGbGV4U2hyaW5rIiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4Iiwic3BlYyIsInNldCIsImRlY2wiLCJ1bmRlZmluZWQiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex-shrink.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex-spec.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("/**\n * Return flexbox spec versions by prefix\n */ \nmodule.exports = function(prefix) {\n    let spec;\n    if (prefix === \"-webkit- 2009\" || prefix === \"-moz-\") {\n        spec = 2009;\n    } else if (prefix === \"-ms-\") {\n        spec = 2012;\n    } else if (prefix === \"-webkit-\") {\n        spec = \"final\";\n    }\n    if (prefix === \"-webkit- 2009\") {\n        prefix = \"-webkit-\";\n    }\n    return [\n        spec,\n        prefix\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LXNwZWMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0NBRUM7QUFDREEsT0FBT0MsT0FBTyxHQUFHLFNBQVVDLE1BQU07SUFDL0IsSUFBSUM7SUFDSixJQUFJRCxXQUFXLG1CQUFtQkEsV0FBVyxTQUFTO1FBQ3BEQyxPQUFPO0lBQ1QsT0FBTyxJQUFJRCxXQUFXLFFBQVE7UUFDNUJDLE9BQU87SUFDVCxPQUFPLElBQUlELFdBQVcsWUFBWTtRQUNoQ0MsT0FBTztJQUNUO0lBRUEsSUFBSUQsV0FBVyxpQkFBaUI7UUFDOUJBLFNBQVM7SUFDWDtJQUVBLE9BQU87UUFBQ0M7UUFBTUQ7S0FBTztBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2ZsZXgtc3BlYy5qcz8zNzBiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJuIGZsZXhib3ggc3BlYyB2ZXJzaW9ucyBieSBwcmVmaXhcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocHJlZml4KSB7XG4gIGxldCBzcGVjXG4gIGlmIChwcmVmaXggPT09ICctd2Via2l0LSAyMDA5JyB8fCBwcmVmaXggPT09ICctbW96LScpIHtcbiAgICBzcGVjID0gMjAwOVxuICB9IGVsc2UgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgc3BlYyA9IDIwMTJcbiAgfSBlbHNlIGlmIChwcmVmaXggPT09ICctd2Via2l0LScpIHtcbiAgICBzcGVjID0gJ2ZpbmFsJ1xuICB9XG5cbiAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtIDIwMDknKSB7XG4gICAgcHJlZml4ID0gJy13ZWJraXQtJ1xuICB9XG5cbiAgcmV0dXJuIFtzcGVjLCBwcmVmaXhdXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInByZWZpeCIsInNwZWMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex-wrap.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex-wrap.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass FlexWrap extends Declaration {\n    /**\n   * Don't add prefix for 2009 spec\n   */ set(decl, prefix) {\n        let spec = flexSpec(prefix)[0];\n        if (spec !== 2009) {\n            return super.set(decl, prefix);\n        }\n        return undefined;\n    }\n}\nFlexWrap.names = [\n    \"flex-wrap\"\n];\nmodule.exports = FlexWrap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LXdyYXAuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlDLGNBQWNELG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1FLGlCQUFpQkQ7SUFDckI7O0dBRUMsR0FDREUsSUFBSUMsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDaEIsSUFBSUMsT0FBT1AsU0FBU00sT0FBTyxDQUFDLEVBQUU7UUFDOUIsSUFBSUMsU0FBUyxNQUFNO1lBQ2pCLE9BQU8sS0FBSyxDQUFDSCxJQUFJQyxNQUFNQztRQUN6QjtRQUNBLE9BQU9FO0lBQ1Q7QUFDRjtBQUVBTCxTQUFTTSxLQUFLLEdBQUc7SUFBQztDQUFZO0FBRTlCQyxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmxleC13cmFwLmpzPzZhZjciXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBGbGV4V3JhcCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIERvbid0IGFkZCBwcmVmaXggZm9yIDIwMDkgc3BlY1xuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGxldCBzcGVjID0gZmxleFNwZWMocHJlZml4KVswXVxuICAgIGlmIChzcGVjICE9PSAyMDA5KSB7XG4gICAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbkZsZXhXcmFwLm5hbWVzID0gWydmbGV4LXdyYXAnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhXcmFwXG4iXSwibmFtZXMiOlsiZmxleFNwZWMiLCJyZXF1aXJlIiwiRGVjbGFyYXRpb24iLCJGbGV4V3JhcCIsInNldCIsImRlY2wiLCJwcmVmaXgiLCJzcGVjIiwidW5kZWZpbmVkIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex-wrap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/flex.js":
/*!*****************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/flex.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet list = (__webpack_require__(/*! postcss */ \"(ssr)/./node_modules/postcss/lib/postcss.js\").list);\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass Flex extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"flex\";\n    }\n    /**\n   * Change property name for 2009 spec\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2009) {\n            return prefix + \"box-flex\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */ set(decl, prefix) {\n        let spec = flexSpec(prefix)[0];\n        if (spec === 2009) {\n            decl.value = list.space(decl.value)[0];\n            decl.value = Flex.oldValues[decl.value] || decl.value;\n            return super.set(decl, prefix);\n        }\n        if (spec === 2012) {\n            let components = list.space(decl.value);\n            if (components.length === 3 && components[2] === \"0\") {\n                decl.value = components.slice(0, 2).concat(\"0px\").join(\" \");\n            }\n        }\n        return super.set(decl, prefix);\n    }\n}\nFlex.names = [\n    \"flex\",\n    \"box-flex\"\n];\nFlex.oldValues = {\n    auto: \"1\",\n    none: \"0\"\n};\nmodule.exports = Flex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxPQUFPQyx3RkFBdUI7QUFFbEMsSUFBSUMsV0FBV0QsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUUsY0FBY0YsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUcsYUFBYUQ7SUFDakI7O0dBRUMsR0FDREUsWUFBWTtRQUNWLE9BQU87SUFDVDtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLElBQUksRUFBRUMsTUFBTSxFQUFFO1FBQ3JCLElBQUlDO1FBQ0gsQ0FBQ0EsTUFBTUQsT0FBTyxHQUFHTixTQUFTTTtRQUMzQixJQUFJQyxTQUFTLE1BQU07WUFDakIsT0FBT0QsU0FBUztRQUNsQjtRQUNBLE9BQU8sS0FBSyxDQUFDRixTQUFTQyxNQUFNQztJQUM5QjtJQUVBOzs7R0FHQyxHQUNERSxJQUFJQyxJQUFJLEVBQUVILE1BQU0sRUFBRTtRQUNoQixJQUFJQyxPQUFPUCxTQUFTTSxPQUFPLENBQUMsRUFBRTtRQUM5QixJQUFJQyxTQUFTLE1BQU07WUFDakJFLEtBQUtDLEtBQUssR0FBR1osS0FBS2EsS0FBSyxDQUFDRixLQUFLQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQ3RDRCxLQUFLQyxLQUFLLEdBQUdSLEtBQUtVLFNBQVMsQ0FBQ0gsS0FBS0MsS0FBSyxDQUFDLElBQUlELEtBQUtDLEtBQUs7WUFDckQsT0FBTyxLQUFLLENBQUNGLElBQUlDLE1BQU1IO1FBQ3pCO1FBQ0EsSUFBSUMsU0FBUyxNQUFNO1lBQ2pCLElBQUlNLGFBQWFmLEtBQUthLEtBQUssQ0FBQ0YsS0FBS0MsS0FBSztZQUN0QyxJQUFJRyxXQUFXQyxNQUFNLEtBQUssS0FBS0QsVUFBVSxDQUFDLEVBQUUsS0FBSyxLQUFLO2dCQUNwREosS0FBS0MsS0FBSyxHQUFHRyxXQUFXRSxLQUFLLENBQUMsR0FBRyxHQUFHQyxNQUFNLENBQUMsT0FBT0MsSUFBSSxDQUFDO1lBQ3pEO1FBQ0Y7UUFDQSxPQUFPLEtBQUssQ0FBQ1QsSUFBSUMsTUFBTUg7SUFDekI7QUFDRjtBQUVBSixLQUFLZ0IsS0FBSyxHQUFHO0lBQUM7SUFBUTtDQUFXO0FBRWpDaEIsS0FBS1UsU0FBUyxHQUFHO0lBQ2ZPLE1BQU07SUFDTkMsTUFBTTtBQUNSO0FBRUFDLE9BQU9DLE9BQU8sR0FBR3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmxleC5qcz8xZGQxIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBsaXN0ID0gcmVxdWlyZSgncG9zdGNzcycpLmxpc3RcblxubGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBGbGV4IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnZmxleCdcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgMjAwOSBzcGVjXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAwOSkge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdib3gtZmxleCdcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBTcGVjIDIwMDkgc3VwcG9ydHMgb25seSBmaXJzdCBhcmd1bWVudFxuICAgKiBTcGVjIDIwMTIgZGlzYWxsb3dzIHVuaXRsZXNzIGJhc2lzXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWMgPSBmbGV4U3BlYyhwcmVmaXgpWzBdXG4gICAgaWYgKHNwZWMgPT09IDIwMDkpIHtcbiAgICAgIGRlY2wudmFsdWUgPSBsaXN0LnNwYWNlKGRlY2wudmFsdWUpWzBdXG4gICAgICBkZWNsLnZhbHVlID0gRmxleC5vbGRWYWx1ZXNbZGVjbC52YWx1ZV0gfHwgZGVjbC52YWx1ZVxuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIGlmIChzcGVjID09PSAyMDEyKSB7XG4gICAgICBsZXQgY29tcG9uZW50cyA9IGxpc3Quc3BhY2UoZGVjbC52YWx1ZSlcbiAgICAgIGlmIChjb21wb25lbnRzLmxlbmd0aCA9PT0gMyAmJiBjb21wb25lbnRzWzJdID09PSAnMCcpIHtcbiAgICAgICAgZGVjbC52YWx1ZSA9IGNvbXBvbmVudHMuc2xpY2UoMCwgMikuY29uY2F0KCcwcHgnKS5qb2luKCcgJylcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cbn1cblxuRmxleC5uYW1lcyA9IFsnZmxleCcsICdib3gtZmxleCddXG5cbkZsZXgub2xkVmFsdWVzID0ge1xuICBhdXRvOiAnMScsXG4gIG5vbmU6ICcwJ1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhcbiJdLCJuYW1lcyI6WyJsaXN0IiwicmVxdWlyZSIsImZsZXhTcGVjIiwiRGVjbGFyYXRpb24iLCJGbGV4Iiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4Iiwic3BlYyIsInNldCIsImRlY2wiLCJ2YWx1ZSIsInNwYWNlIiwib2xkVmFsdWVzIiwiY29tcG9uZW50cyIsImxlbmd0aCIsInNsaWNlIiwiY29uY2F0Iiwiam9pbiIsIm5hbWVzIiwiYXV0byIsIm5vbmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/flex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/fullscreen.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/fullscreen.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Selector = __webpack_require__(/*! ../selector */ \"(ssr)/./node_modules/autoprefixer/lib/selector.js\");\nclass Fullscreen extends Selector {\n    /**\n   * Return different selectors depend on prefix\n   */ prefixed(prefix) {\n        if (prefix === \"-webkit-\") {\n            return \":-webkit-full-screen\";\n        }\n        if (prefix === \"-moz-\") {\n            return \":-moz-full-screen\";\n        }\n        return `:${prefix}fullscreen`;\n    }\n}\nFullscreen.names = [\n    \":fullscreen\"\n];\nmodule.exports = Fullscreen;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mdWxsc2NyZWVuLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQztBQUV2QixNQUFNQyxtQkFBbUJGO0lBQ3ZCOztHQUVDLEdBQ0RHLFNBQVNDLE1BQU0sRUFBRTtRQUNmLElBQUlBLFdBQVcsWUFBWTtZQUN6QixPQUFPO1FBQ1Q7UUFDQSxJQUFJQSxXQUFXLFNBQVM7WUFDdEIsT0FBTztRQUNUO1FBQ0EsT0FBTyxDQUFDLENBQUMsRUFBRUEsT0FBTyxVQUFVLENBQUM7SUFDL0I7QUFDRjtBQUVBRixXQUFXRyxLQUFLLEdBQUc7SUFBQztDQUFjO0FBRWxDQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZnVsbHNjcmVlbi5qcz80YmU5Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBTZWxlY3RvciA9IHJlcXVpcmUoJy4uL3NlbGVjdG9yJylcblxuY2xhc3MgRnVsbHNjcmVlbiBleHRlbmRzIFNlbGVjdG9yIHtcbiAgLyoqXG4gICAqIFJldHVybiBkaWZmZXJlbnQgc2VsZWN0b3JzIGRlcGVuZCBvbiBwcmVmaXhcbiAgICovXG4gIHByZWZpeGVkKHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctd2Via2l0LScpIHtcbiAgICAgIHJldHVybiAnOi13ZWJraXQtZnVsbC1zY3JlZW4nXG4gICAgfVxuICAgIGlmIChwcmVmaXggPT09ICctbW96LScpIHtcbiAgICAgIHJldHVybiAnOi1tb3otZnVsbC1zY3JlZW4nXG4gICAgfVxuICAgIHJldHVybiBgOiR7cHJlZml4fWZ1bGxzY3JlZW5gXG4gIH1cbn1cblxuRnVsbHNjcmVlbi5uYW1lcyA9IFsnOmZ1bGxzY3JlZW4nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bGxzY3JlZW5cbiJdLCJuYW1lcyI6WyJTZWxlY3RvciIsInJlcXVpcmUiLCJGdWxsc2NyZWVuIiwicHJlZml4ZWQiLCJwcmVmaXgiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/fullscreen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/gradient.js":
/*!*********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/gradient.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet parser = __webpack_require__(/*! postcss-value-parser */ \"(ssr)/./node_modules/postcss-value-parser/lib/index.js\");\nlet range = __webpack_require__(/*! normalize-range */ \"(ssr)/./node_modules/normalize-range/index.js\");\nlet OldValue = __webpack_require__(/*! ../old-value */ \"(ssr)/./node_modules/autoprefixer/lib/old-value.js\");\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nlet utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nlet IS_DIRECTION = /top|left|right|bottom/gi;\nclass Gradient extends Value {\n    /**\n   * Do not add non-webkit prefixes for list-style and object\n   */ add(decl, prefix) {\n        let p = decl.prop;\n        if (p.includes(\"mask\")) {\n            if (prefix === \"-webkit-\" || prefix === \"-webkit- old\") {\n                return super.add(decl, prefix);\n            }\n        } else if (p === \"list-style\" || p === \"list-style-image\" || p === \"content\") {\n            if (prefix === \"-webkit-\" || prefix === \"-webkit- old\") {\n                return super.add(decl, prefix);\n            }\n        } else {\n            return super.add(decl, prefix);\n        }\n        return undefined;\n    }\n    /**\n   * Get div token from exists parameters\n   */ cloneDiv(params) {\n        for (let i of params){\n            if (i.type === \"div\" && i.value === \",\") {\n                return i;\n            }\n        }\n        return {\n            after: \" \",\n            type: \"div\",\n            value: \",\"\n        };\n    }\n    /**\n   * Change colors syntax to old webkit\n   */ colorStops(params) {\n        let result = [];\n        for(let i = 0; i < params.length; i++){\n            let pos;\n            let param = params[i];\n            let item;\n            if (i === 0) {\n                continue;\n            }\n            let color = parser.stringify(param[0]);\n            if (param[1] && param[1].type === \"word\") {\n                pos = param[1].value;\n            } else if (param[2] && param[2].type === \"word\") {\n                pos = param[2].value;\n            }\n            let stop;\n            if (i === 1 && (!pos || pos === \"0%\")) {\n                stop = `from(${color})`;\n            } else if (i === params.length - 1 && (!pos || pos === \"100%\")) {\n                stop = `to(${color})`;\n            } else if (pos) {\n                stop = `color-stop(${pos}, ${color})`;\n            } else {\n                stop = `color-stop(${color})`;\n            }\n            let div = param[param.length - 1];\n            params[i] = [\n                {\n                    type: \"word\",\n                    value: stop\n                }\n            ];\n            if (div.type === \"div\" && div.value === \",\") {\n                item = params[i].push(div);\n            }\n            result.push(item);\n        }\n        return result;\n    }\n    /**\n   * Change new direction to old\n   */ convertDirection(params) {\n        if (params.length > 0) {\n            if (params[0].value === \"to\") {\n                this.fixDirection(params);\n            } else if (params[0].value.includes(\"deg\")) {\n                this.fixAngle(params);\n            } else if (this.isRadial(params)) {\n                this.fixRadial(params);\n            }\n        }\n        return params;\n    }\n    /**\n   * Add 90 degrees\n   */ fixAngle(params) {\n        let first = params[0].value;\n        first = parseFloat(first);\n        first = Math.abs(450 - first) % 360;\n        first = this.roundFloat(first, 3);\n        params[0].value = `${first}deg`;\n    }\n    /**\n   * Replace `to top left` to `bottom right`\n   */ fixDirection(params) {\n        params.splice(0, 2);\n        for (let param of params){\n            if (param.type === \"div\") {\n                break;\n            }\n            if (param.type === \"word\") {\n                param.value = this.revertDirection(param.value);\n            }\n        }\n    }\n    /**\n   * Fix radial direction syntax\n   */ fixRadial(params) {\n        let first = [];\n        let second = [];\n        let a, b, c, i, next;\n        for(i = 0; i < params.length - 2; i++){\n            a = params[i];\n            b = params[i + 1];\n            c = params[i + 2];\n            if (a.type === \"space\" && b.value === \"at\" && c.type === \"space\") {\n                next = i + 3;\n                break;\n            } else {\n                first.push(a);\n            }\n        }\n        let div;\n        for(i = next; i < params.length; i++){\n            if (params[i].type === \"div\") {\n                div = params[i];\n                break;\n            } else {\n                second.push(params[i]);\n            }\n        }\n        params.splice(0, i, ...second, div, ...first);\n    }\n    /**\n   * Look for at word\n   */ isRadial(params) {\n        let state = \"before\";\n        for (let param of params){\n            if (state === \"before\" && param.type === \"space\") {\n                state = \"at\";\n            } else if (state === \"at\" && param.value === \"at\") {\n                state = \"after\";\n            } else if (state === \"after\" && param.type === \"space\") {\n                return true;\n            } else if (param.type === \"div\") {\n                break;\n            } else {\n                state = \"before\";\n            }\n        }\n        return false;\n    }\n    /**\n   * Replace old direction to new\n   */ newDirection(params) {\n        if (params[0].value === \"to\") {\n            return params;\n        }\n        IS_DIRECTION.lastIndex = 0 // reset search index of global regexp\n        ;\n        if (!IS_DIRECTION.test(params[0].value)) {\n            return params;\n        }\n        params.unshift({\n            type: \"word\",\n            value: \"to\"\n        }, {\n            type: \"space\",\n            value: \" \"\n        });\n        for(let i = 2; i < params.length; i++){\n            if (params[i].type === \"div\") {\n                break;\n            }\n            if (params[i].type === \"word\") {\n                params[i].value = this.revertDirection(params[i].value);\n            }\n        }\n        return params;\n    }\n    /**\n   * Normalize angle\n   */ normalize(nodes, gradientName) {\n        if (!nodes[0]) return nodes;\n        if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n            nodes[0].value = this.normalizeUnit(nodes[0].value, 400);\n        } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n            nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);\n        } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n            nodes[0].value = this.normalizeUnit(nodes[0].value, 1);\n        } else if (nodes[0].value.includes(\"deg\")) {\n            let num = parseFloat(nodes[0].value);\n            num = range.wrap(0, 360, num);\n            nodes[0].value = `${num}deg`;\n        }\n        if (gradientName === \"linear-gradient\" || gradientName === \"repeating-linear-gradient\") {\n            let direction = nodes[0].value;\n            // Unitless zero for `<angle>` values are allowed in CSS gradients and transforms.\n            // Spec: https://github.com/w3c/csswg-drafts/commit/602789171429b2231223ab1e5acf8f7f11652eb3\n            if (direction === \"0deg\" || direction === \"0\") {\n                nodes = this.replaceFirst(nodes, \"to\", \" \", \"top\");\n            } else if (direction === \"90deg\") {\n                nodes = this.replaceFirst(nodes, \"to\", \" \", \"right\");\n            } else if (direction === \"180deg\") {\n                nodes = this.replaceFirst(nodes, \"to\", \" \", \"bottom\") // default value\n                ;\n            } else if (direction === \"270deg\") {\n                nodes = this.replaceFirst(nodes, \"to\", \" \", \"left\");\n            }\n        }\n        return nodes;\n    }\n    /**\n   * Convert angle unit to deg\n   */ normalizeUnit(str, full) {\n        let num = parseFloat(str);\n        let deg = num / full * 360;\n        return `${deg}deg`;\n    }\n    /**\n   * Remove old WebKit gradient too\n   */ old(prefix) {\n        if (prefix === \"-webkit-\") {\n            let type;\n            if (this.name === \"linear-gradient\") {\n                type = \"linear\";\n            } else if (this.name === \"repeating-linear-gradient\") {\n                type = \"repeating-linear\";\n            } else if (this.name === \"repeating-radial-gradient\") {\n                type = \"repeating-radial\";\n            } else {\n                type = \"radial\";\n            }\n            let string = \"-gradient\";\n            let regexp = utils.regexp(`-webkit-(${type}-gradient|gradient\\\\(\\\\s*${type})`, false);\n            return new OldValue(this.name, prefix + this.name, string, regexp);\n        } else {\n            return super.old(prefix);\n        }\n    }\n    /**\n   * Change direction syntax to old webkit\n   */ oldDirection(params) {\n        let div = this.cloneDiv(params[0]);\n        if (params[0][0].value !== \"to\") {\n            return params.unshift([\n                {\n                    type: \"word\",\n                    value: Gradient.oldDirections.bottom\n                },\n                div\n            ]);\n        } else {\n            let words = [];\n            for (let node of params[0].slice(2)){\n                if (node.type === \"word\") {\n                    words.push(node.value.toLowerCase());\n                }\n            }\n            words = words.join(\" \");\n            let old = Gradient.oldDirections[words] || words;\n            params[0] = [\n                {\n                    type: \"word\",\n                    value: old\n                },\n                div\n            ];\n            return params[0];\n        }\n    }\n    /**\n   * Convert to old webkit syntax\n   */ oldWebkit(node) {\n        let { nodes } = node;\n        let string = parser.stringify(node.nodes);\n        if (this.name !== \"linear-gradient\") {\n            return false;\n        }\n        if (nodes[0] && nodes[0].value.includes(\"deg\")) {\n            return false;\n        }\n        if (string.includes(\"px\") || string.includes(\"-corner\") || string.includes(\"-side\")) {\n            return false;\n        }\n        let params = [\n            []\n        ];\n        for (let i of nodes){\n            params[params.length - 1].push(i);\n            if (i.type === \"div\" && i.value === \",\") {\n                params.push([]);\n            }\n        }\n        this.oldDirection(params);\n        this.colorStops(params);\n        node.nodes = [];\n        for (let param of params){\n            node.nodes = node.nodes.concat(param);\n        }\n        node.nodes.unshift({\n            type: \"word\",\n            value: \"linear\"\n        }, this.cloneDiv(node.nodes));\n        node.value = \"-webkit-gradient\";\n        return true;\n    }\n    /**\n   * Change degrees for webkit prefix\n   */ replace(string, prefix) {\n        let ast = parser(string);\n        for (let node of ast.nodes){\n            let gradientName = this.name // gradient name\n            ;\n            if (node.type === \"function\" && node.value === gradientName) {\n                node.nodes = this.newDirection(node.nodes);\n                node.nodes = this.normalize(node.nodes, gradientName);\n                if (prefix === \"-webkit- old\") {\n                    let changes = this.oldWebkit(node);\n                    if (!changes) {\n                        return false;\n                    }\n                } else {\n                    node.nodes = this.convertDirection(node.nodes);\n                    node.value = prefix + node.value;\n                }\n            }\n        }\n        return ast.toString();\n    }\n    /**\n   * Replace first token\n   */ replaceFirst(params, ...words) {\n        let prefix = words.map((i)=>{\n            if (i === \" \") {\n                return {\n                    type: \"space\",\n                    value: i\n                };\n            }\n            return {\n                type: \"word\",\n                value: i\n            };\n        });\n        return prefix.concat(params.slice(1));\n    }\n    revertDirection(word) {\n        return Gradient.directions[word.toLowerCase()] || word;\n    }\n    /**\n   * Round float and save digits under dot\n   */ roundFloat(float, digits) {\n        return parseFloat(float.toFixed(digits));\n    }\n}\nGradient.names = [\n    \"linear-gradient\",\n    \"repeating-linear-gradient\",\n    \"radial-gradient\",\n    \"repeating-radial-gradient\"\n];\nGradient.directions = {\n    bottom: \"top\",\n    left: \"right\",\n    right: \"left\",\n    top: \"bottom\" // default value\n};\n// Direction to replace\nGradient.oldDirections = {\n    \"bottom\": \"left top, left bottom\",\n    \"bottom left\": \"right top, left bottom\",\n    \"bottom right\": \"left top, right bottom\",\n    \"left\": \"right top, left top\",\n    \"left bottom\": \"right top, left bottom\",\n    \"left top\": \"right bottom, left top\",\n    \"right\": \"left top, right top\",\n    \"right bottom\": \"left top, right bottom\",\n    \"right top\": \"left bottom, right top\",\n    \"top\": \"left bottom, left top\",\n    \"top left\": \"right bottom, left top\",\n    \"top right\": \"left bottom, right top\"\n};\nmodule.exports = Gradient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/gradient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-area.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-area.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet utils = __webpack_require__(/*! ./grid-utils */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\");\nclass GridArea extends Declaration {\n    /**\n   * Translate grid-area to separate -ms- prefixed properties\n   */ insert(decl, prefix, prefixes, result) {\n        if (prefix !== \"-ms-\") return super.insert(decl, prefix, prefixes);\n        let values = utils.parse(decl);\n        let [rowStart, rowSpan] = utils.translate(values, 0, 2);\n        let [columnStart, columnSpan] = utils.translate(values, 1, 3);\n        [\n            [\n                \"grid-row\",\n                rowStart\n            ],\n            [\n                \"grid-row-span\",\n                rowSpan\n            ],\n            [\n                \"grid-column\",\n                columnStart\n            ],\n            [\n                \"grid-column-span\",\n                columnSpan\n            ]\n        ].forEach(([prop, value])=>{\n            utils.insertDecl(decl, prop, value);\n        });\n        utils.warnTemplateSelectorNotFound(decl, result);\n        utils.warnIfGridRowColumnExists(decl, result);\n        return undefined;\n    }\n}\nGridArea.names = [\n    \"grid-area\"\n];\nmodule.exports = GridArea;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLWFyZWEuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBQzFCLElBQUlDLFFBQVFELG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1FLGlCQUFpQkg7SUFDckI7O0dBRUMsR0FDREksT0FBT0MsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsTUFBTSxFQUFFO1FBQ3JDLElBQUlGLFdBQVcsUUFBUSxPQUFPLEtBQUssQ0FBQ0YsT0FBT0MsTUFBTUMsUUFBUUM7UUFFekQsSUFBSUUsU0FBU1AsTUFBTVEsS0FBSyxDQUFDTDtRQUV6QixJQUFJLENBQUNNLFVBQVVDLFFBQVEsR0FBR1YsTUFBTVcsU0FBUyxDQUFDSixRQUFRLEdBQUc7UUFDckQsSUFBSSxDQUFDSyxhQUFhQyxXQUFXLEdBQUdiLE1BQU1XLFNBQVMsQ0FBQ0osUUFBUSxHQUFHO1FBRTFEO1lBQ0M7Z0JBQUM7Z0JBQVlFO2FBQVM7WUFDdEI7Z0JBQUM7Z0JBQWlCQzthQUFRO1lBQzFCO2dCQUFDO2dCQUFlRTthQUFZO1lBQzVCO2dCQUFDO2dCQUFvQkM7YUFBVztTQUNqQyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDQyxNQUFNQyxNQUFNO1lBQ3RCaEIsTUFBTWlCLFVBQVUsQ0FBQ2QsTUFBTVksTUFBTUM7UUFDL0I7UUFFQWhCLE1BQU1rQiw0QkFBNEIsQ0FBQ2YsTUFBTUc7UUFDekNOLE1BQU1tQix5QkFBeUIsQ0FBQ2hCLE1BQU1HO1FBRXRDLE9BQU9jO0lBQ1Q7QUFDRjtBQUVBbkIsU0FBU29CLEtBQUssR0FBRztJQUFDO0NBQVk7QUFFOUJDLE9BQU9DLE9BQU8sR0FBR3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC1hcmVhLmpzP2VkMDkiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi9ncmlkLXV0aWxzJylcblxuY2xhc3MgR3JpZEFyZWEgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBUcmFuc2xhdGUgZ3JpZC1hcmVhIHRvIHNlcGFyYXRlIC1tcy0gcHJlZml4ZWQgcHJvcGVydGllc1xuICAgKi9cbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMsIHJlc3VsdCkge1xuICAgIGlmIChwcmVmaXggIT09ICctbXMtJykgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuXG4gICAgbGV0IHZhbHVlcyA9IHV0aWxzLnBhcnNlKGRlY2wpXG5cbiAgICBsZXQgW3Jvd1N0YXJ0LCByb3dTcGFuXSA9IHV0aWxzLnRyYW5zbGF0ZSh2YWx1ZXMsIDAsIDIpXG4gICAgbGV0IFtjb2x1bW5TdGFydCwgY29sdW1uU3Bhbl0gPSB1dGlscy50cmFuc2xhdGUodmFsdWVzLCAxLCAzKVxuXG4gICAgO1tcbiAgICAgIFsnZ3JpZC1yb3cnLCByb3dTdGFydF0sXG4gICAgICBbJ2dyaWQtcm93LXNwYW4nLCByb3dTcGFuXSxcbiAgICAgIFsnZ3JpZC1jb2x1bW4nLCBjb2x1bW5TdGFydF0sXG4gICAgICBbJ2dyaWQtY29sdW1uLXNwYW4nLCBjb2x1bW5TcGFuXVxuICAgIF0uZm9yRWFjaCgoW3Byb3AsIHZhbHVlXSkgPT4ge1xuICAgICAgdXRpbHMuaW5zZXJ0RGVjbChkZWNsLCBwcm9wLCB2YWx1ZSlcbiAgICB9KVxuXG4gICAgdXRpbHMud2FyblRlbXBsYXRlU2VsZWN0b3JOb3RGb3VuZChkZWNsLCByZXN1bHQpXG4gICAgdXRpbHMud2FybklmR3JpZFJvd0NvbHVtbkV4aXN0cyhkZWNsLCByZXN1bHQpXG5cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuR3JpZEFyZWEubmFtZXMgPSBbJ2dyaWQtYXJlYSddXG5cbm1vZHVsZS5leHBvcnRzID0gR3JpZEFyZWFcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJ1dGlscyIsIkdyaWRBcmVhIiwiaW5zZXJ0IiwiZGVjbCIsInByZWZpeCIsInByZWZpeGVzIiwicmVzdWx0IiwidmFsdWVzIiwicGFyc2UiLCJyb3dTdGFydCIsInJvd1NwYW4iLCJ0cmFuc2xhdGUiLCJjb2x1bW5TdGFydCIsImNvbHVtblNwYW4iLCJmb3JFYWNoIiwicHJvcCIsInZhbHVlIiwiaW5zZXJ0RGVjbCIsIndhcm5UZW1wbGF0ZVNlbGVjdG9yTm90Rm91bmQiLCJ3YXJuSWZHcmlkUm93Q29sdW1uRXhpc3RzIiwidW5kZWZpbmVkIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-area.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-column-align.js":
/*!******************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-column-align.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass GridColumnAlign extends Declaration {\n    /**\n   * Do not prefix flexbox values\n   */ check(decl) {\n        return !decl.value.includes(\"flex-\") && decl.value !== \"baseline\";\n    }\n    /**\n   * Change IE property back\n   */ normalize() {\n        return \"justify-self\";\n    }\n    /**\n   * Change property name for IE\n   */ prefixed(prop, prefix) {\n        return prefix + \"grid-column-align\";\n    }\n}\nGridColumnAlign.names = [\n    \"grid-column-align\"\n];\nmodule.exports = GridColumnAlign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLWNvbHVtbi1hbGlnbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsd0JBQXdCRjtJQUM1Qjs7R0FFQyxHQUNERyxNQUFNQyxJQUFJLEVBQUU7UUFDVixPQUFPLENBQUNBLEtBQUtDLEtBQUssQ0FBQ0MsUUFBUSxDQUFDLFlBQVlGLEtBQUtDLEtBQUssS0FBSztJQUN6RDtJQUVBOztHQUVDLEdBQ0RFLFlBQVk7UUFDVixPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNyQixPQUFPQSxTQUFTO0lBQ2xCO0FBQ0Y7QUFFQVIsZ0JBQWdCUyxLQUFLLEdBQUc7SUFBQztDQUFvQjtBQUU3Q0MsT0FBT0MsT0FBTyxHQUFHWCIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2dyaWQtY29sdW1uLWFsaWduLmpzP2E5MDgiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBHcmlkQ29sdW1uQWxpZ24gZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBEbyBub3QgcHJlZml4IGZsZXhib3ggdmFsdWVzXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgcmV0dXJuICFkZWNsLnZhbHVlLmluY2x1ZGVzKCdmbGV4LScpICYmIGRlY2wudmFsdWUgIT09ICdiYXNlbGluZSdcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgSUUgcHJvcGVydHkgYmFja1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnanVzdGlmeS1zZWxmJ1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciBJRVxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgcmV0dXJuIHByZWZpeCArICdncmlkLWNvbHVtbi1hbGlnbidcbiAgfVxufVxuXG5HcmlkQ29sdW1uQWxpZ24ubmFtZXMgPSBbJ2dyaWQtY29sdW1uLWFsaWduJ11cblxubW9kdWxlLmV4cG9ydHMgPSBHcmlkQ29sdW1uQWxpZ25cbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJHcmlkQ29sdW1uQWxpZ24iLCJjaGVjayIsImRlY2wiLCJ2YWx1ZSIsImluY2x1ZGVzIiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4IiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-column-align.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-end.js":
/*!*********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-end.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet { isPureNumber } = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass GridEnd extends Declaration {\n    /**\n   * Change repeating syntax for IE\n   */ insert(decl, prefix, prefixes, result) {\n        if (prefix !== \"-ms-\") return super.insert(decl, prefix, prefixes);\n        let clonedDecl = this.clone(decl);\n        let startProp = decl.prop.replace(/end$/, \"start\");\n        let spanProp = prefix + decl.prop.replace(/end$/, \"span\");\n        if (decl.parent.some((i)=>i.prop === spanProp)) {\n            return undefined;\n        }\n        clonedDecl.prop = spanProp;\n        if (decl.value.includes(\"span\")) {\n            clonedDecl.value = decl.value.replace(/span\\s/i, \"\");\n        } else {\n            let startDecl;\n            decl.parent.walkDecls(startProp, (d)=>{\n                startDecl = d;\n            });\n            if (startDecl) {\n                if (isPureNumber(startDecl.value)) {\n                    let value = Number(decl.value) - Number(startDecl.value) + \"\";\n                    clonedDecl.value = value;\n                } else {\n                    return undefined;\n                }\n            } else {\n                decl.warn(result, `Can not prefix ${decl.prop} (${startProp} is not found)`);\n            }\n        }\n        decl.cloneBefore(clonedDecl);\n        return undefined;\n    }\n}\nGridEnd.names = [\n    \"grid-row-end\",\n    \"grid-column-end\"\n];\nmodule.exports = GridEnd;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLWVuZC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFDMUIsSUFBSSxFQUFFQyxZQUFZLEVBQUUsR0FBR0QsbUJBQU9BLENBQUM7QUFFL0IsTUFBTUUsZ0JBQWdCSDtJQUNwQjs7R0FFQyxHQUNESSxPQUFPQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUU7UUFDckMsSUFBSUYsV0FBVyxRQUFRLE9BQU8sS0FBSyxDQUFDRixPQUFPQyxNQUFNQyxRQUFRQztRQUV6RCxJQUFJRSxhQUFhLElBQUksQ0FBQ0MsS0FBSyxDQUFDTDtRQUU1QixJQUFJTSxZQUFZTixLQUFLTyxJQUFJLENBQUNDLE9BQU8sQ0FBQyxRQUFRO1FBQzFDLElBQUlDLFdBQVdSLFNBQVNELEtBQUtPLElBQUksQ0FBQ0MsT0FBTyxDQUFDLFFBQVE7UUFFbEQsSUFBSVIsS0FBS1UsTUFBTSxDQUFDQyxJQUFJLENBQUNDLENBQUFBLElBQUtBLEVBQUVMLElBQUksS0FBS0UsV0FBVztZQUM5QyxPQUFPSTtRQUNUO1FBRUFULFdBQVdHLElBQUksR0FBR0U7UUFFbEIsSUFBSVQsS0FBS2MsS0FBSyxDQUFDQyxRQUFRLENBQUMsU0FBUztZQUMvQlgsV0FBV1UsS0FBSyxHQUFHZCxLQUFLYyxLQUFLLENBQUNOLE9BQU8sQ0FBQyxXQUFXO1FBQ25ELE9BQU87WUFDTCxJQUFJUTtZQUNKaEIsS0FBS1UsTUFBTSxDQUFDTyxTQUFTLENBQUNYLFdBQVdZLENBQUFBO2dCQUMvQkYsWUFBWUU7WUFDZDtZQUNBLElBQUlGLFdBQVc7Z0JBQ2IsSUFBSW5CLGFBQWFtQixVQUFVRixLQUFLLEdBQUc7b0JBQ2pDLElBQUlBLFFBQVFLLE9BQU9uQixLQUFLYyxLQUFLLElBQUlLLE9BQU9ILFVBQVVGLEtBQUssSUFBSTtvQkFDM0RWLFdBQVdVLEtBQUssR0FBR0E7Z0JBQ3JCLE9BQU87b0JBQ0wsT0FBT0Q7Z0JBQ1Q7WUFDRixPQUFPO2dCQUNMYixLQUFLb0IsSUFBSSxDQUNQakIsUUFDQSxDQUFDLGVBQWUsRUFBRUgsS0FBS08sSUFBSSxDQUFDLEVBQUUsRUFBRUQsVUFBVSxjQUFjLENBQUM7WUFFN0Q7UUFDRjtRQUVBTixLQUFLcUIsV0FBVyxDQUFDakI7UUFFakIsT0FBT1M7SUFDVDtBQUNGO0FBRUFmLFFBQVF3QixLQUFLLEdBQUc7SUFBQztJQUFnQjtDQUFrQjtBQUVuREMsT0FBT0MsT0FBTyxHQUFHMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLWVuZC5qcz8xMmY4Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcbmxldCB7IGlzUHVyZU51bWJlciB9ID0gcmVxdWlyZSgnLi4vdXRpbHMnKVxuXG5jbGFzcyBHcmlkRW5kIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQ2hhbmdlIHJlcGVhdGluZyBzeW50YXggZm9yIElFXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcywgcmVzdWx0KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICBsZXQgY2xvbmVkRGVjbCA9IHRoaXMuY2xvbmUoZGVjbClcblxuICAgIGxldCBzdGFydFByb3AgPSBkZWNsLnByb3AucmVwbGFjZSgvZW5kJC8sICdzdGFydCcpXG4gICAgbGV0IHNwYW5Qcm9wID0gcHJlZml4ICsgZGVjbC5wcm9wLnJlcGxhY2UoL2VuZCQvLCAnc3BhbicpXG5cbiAgICBpZiAoZGVjbC5wYXJlbnQuc29tZShpID0+IGkucHJvcCA9PT0gc3BhblByb3ApKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgY2xvbmVkRGVjbC5wcm9wID0gc3BhblByb3BcblxuICAgIGlmIChkZWNsLnZhbHVlLmluY2x1ZGVzKCdzcGFuJykpIHtcbiAgICAgIGNsb25lZERlY2wudmFsdWUgPSBkZWNsLnZhbHVlLnJlcGxhY2UoL3NwYW5cXHMvaSwgJycpXG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBzdGFydERlY2xcbiAgICAgIGRlY2wucGFyZW50LndhbGtEZWNscyhzdGFydFByb3AsIGQgPT4ge1xuICAgICAgICBzdGFydERlY2wgPSBkXG4gICAgICB9KVxuICAgICAgaWYgKHN0YXJ0RGVjbCkge1xuICAgICAgICBpZiAoaXNQdXJlTnVtYmVyKHN0YXJ0RGVjbC52YWx1ZSkpIHtcbiAgICAgICAgICBsZXQgdmFsdWUgPSBOdW1iZXIoZGVjbC52YWx1ZSkgLSBOdW1iZXIoc3RhcnREZWNsLnZhbHVlKSArICcnXG4gICAgICAgICAgY2xvbmVkRGVjbC52YWx1ZSA9IHZhbHVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkZWNsLndhcm4oXG4gICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgIGBDYW4gbm90IHByZWZpeCAke2RlY2wucHJvcH0gKCR7c3RhcnRQcm9wfSBpcyBub3QgZm91bmQpYFxuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuXG4gICAgZGVjbC5jbG9uZUJlZm9yZShjbG9uZWREZWNsKVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbkdyaWRFbmQubmFtZXMgPSBbJ2dyaWQtcm93LWVuZCcsICdncmlkLWNvbHVtbi1lbmQnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWRFbmRcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJpc1B1cmVOdW1iZXIiLCJHcmlkRW5kIiwiaW5zZXJ0IiwiZGVjbCIsInByZWZpeCIsInByZWZpeGVzIiwicmVzdWx0IiwiY2xvbmVkRGVjbCIsImNsb25lIiwic3RhcnRQcm9wIiwicHJvcCIsInJlcGxhY2UiLCJzcGFuUHJvcCIsInBhcmVudCIsInNvbWUiLCJpIiwidW5kZWZpbmVkIiwidmFsdWUiLCJpbmNsdWRlcyIsInN0YXJ0RGVjbCIsIndhbGtEZWNscyIsImQiLCJOdW1iZXIiLCJ3YXJuIiwiY2xvbmVCZWZvcmUiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-end.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-row-align.js":
/*!***************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-row-align.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass GridRowAlign extends Declaration {\n    /**\n   * Do not prefix flexbox values\n   */ check(decl) {\n        return !decl.value.includes(\"flex-\") && decl.value !== \"baseline\";\n    }\n    /**\n   * Change IE property back\n   */ normalize() {\n        return \"align-self\";\n    }\n    /**\n   * Change property name for IE\n   */ prefixed(prop, prefix) {\n        return prefix + \"grid-row-align\";\n    }\n}\nGridRowAlign.names = [\n    \"grid-row-align\"\n];\nmodule.exports = GridRowAlign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXJvdy1hbGlnbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMscUJBQXFCRjtJQUN6Qjs7R0FFQyxHQUNERyxNQUFNQyxJQUFJLEVBQUU7UUFDVixPQUFPLENBQUNBLEtBQUtDLEtBQUssQ0FBQ0MsUUFBUSxDQUFDLFlBQVlGLEtBQUtDLEtBQUssS0FBSztJQUN6RDtJQUVBOztHQUVDLEdBQ0RFLFlBQVk7UUFDVixPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNyQixPQUFPQSxTQUFTO0lBQ2xCO0FBQ0Y7QUFFQVIsYUFBYVMsS0FBSyxHQUFHO0lBQUM7Q0FBaUI7QUFFdkNDLE9BQU9DLE9BQU8sR0FBR1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXJvdy1hbGlnbi5qcz9mMDc3Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgR3JpZFJvd0FsaWduIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogRG8gbm90IHByZWZpeCBmbGV4Ym94IHZhbHVlc1xuICAgKi9cbiAgY2hlY2soZGVjbCkge1xuICAgIHJldHVybiAhZGVjbC52YWx1ZS5pbmNsdWRlcygnZmxleC0nKSAmJiBkZWNsLnZhbHVlICE9PSAnYmFzZWxpbmUnXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIElFIHByb3BlcnR5IGJhY2tcbiAgICovXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICByZXR1cm4gJ2FsaWduLXNlbGYnXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIElFXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gcHJlZml4ICsgJ2dyaWQtcm93LWFsaWduJ1xuICB9XG59XG5cbkdyaWRSb3dBbGlnbi5uYW1lcyA9IFsnZ3JpZC1yb3ctYWxpZ24nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWRSb3dBbGlnblxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsIkdyaWRSb3dBbGlnbiIsImNoZWNrIiwiZGVjbCIsInZhbHVlIiwiaW5jbHVkZXMiLCJub3JtYWxpemUiLCJwcmVmaXhlZCIsInByb3AiLCJwcmVmaXgiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-row-align.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-row-column.js":
/*!****************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-row-column.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet utils = __webpack_require__(/*! ./grid-utils */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\");\nclass GridRowColumn extends Declaration {\n    /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */ insert(decl, prefix, prefixes) {\n        if (prefix !== \"-ms-\") return super.insert(decl, prefix, prefixes);\n        let values = utils.parse(decl);\n        let [start, span] = utils.translate(values, 0, 1);\n        let hasStartValueSpan = values[0] && values[0].includes(\"span\");\n        if (hasStartValueSpan) {\n            span = values[0].join(\"\").replace(/\\D/g, \"\");\n        }\n        ;\n        [\n            [\n                decl.prop,\n                start\n            ],\n            [\n                `${decl.prop}-span`,\n                span\n            ]\n        ].forEach(([prop, value])=>{\n            utils.insertDecl(decl, prop, value);\n        });\n        return undefined;\n    }\n}\nGridRowColumn.names = [\n    \"grid-row\",\n    \"grid-column\"\n];\nmodule.exports = GridRowColumn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXJvdy1jb2x1bW4uanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBQzFCLElBQUlDLFFBQVFELG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1FLHNCQUFzQkg7SUFDMUI7O0dBRUMsR0FDREksT0FBT0MsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRTtRQUM3QixJQUFJRCxXQUFXLFFBQVEsT0FBTyxLQUFLLENBQUNGLE9BQU9DLE1BQU1DLFFBQVFDO1FBRXpELElBQUlDLFNBQVNOLE1BQU1PLEtBQUssQ0FBQ0o7UUFDekIsSUFBSSxDQUFDSyxPQUFPQyxLQUFLLEdBQUdULE1BQU1VLFNBQVMsQ0FBQ0osUUFBUSxHQUFHO1FBRS9DLElBQUlLLG9CQUFvQkwsTUFBTSxDQUFDLEVBQUUsSUFBSUEsTUFBTSxDQUFDLEVBQUUsQ0FBQ00sUUFBUSxDQUFDO1FBRXhELElBQUlELG1CQUFtQjtZQUNyQkYsT0FBT0gsTUFBTSxDQUFDLEVBQUUsQ0FBQ08sSUFBSSxDQUFDLElBQUlDLE9BQU8sQ0FBQyxPQUFPO1FBQzNDOztRQUVDO1lBQ0M7Z0JBQUNYLEtBQUtZLElBQUk7Z0JBQUVQO2FBQU07WUFDbEI7Z0JBQUMsQ0FBQyxFQUFFTCxLQUFLWSxJQUFJLENBQUMsS0FBSyxDQUFDO2dCQUFFTjthQUFLO1NBQzVCLENBQUNPLE9BQU8sQ0FBQyxDQUFDLENBQUNELE1BQU1FLE1BQU07WUFDdEJqQixNQUFNa0IsVUFBVSxDQUFDZixNQUFNWSxNQUFNRTtRQUMvQjtRQUVBLE9BQU9FO0lBQ1Q7QUFDRjtBQUVBbEIsY0FBY21CLEtBQUssR0FBRztJQUFDO0lBQVk7Q0FBYztBQUVqREMsT0FBT0MsT0FBTyxHQUFHckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXJvdy1jb2x1bW4uanM/ZWYxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuL2dyaWQtdXRpbHMnKVxuXG5jbGFzcyBHcmlkUm93Q29sdW1uIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogVHJhbnNsYXRlIGdyaWQtcm93IC8gZ3JpZC1jb2x1bW4gdG8gc2VwYXJhdGUgLW1zLSBwcmVmaXhlZCBwcm9wZXJ0aWVzXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcykge1xuICAgIGlmIChwcmVmaXggIT09ICctbXMtJykgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuXG4gICAgbGV0IHZhbHVlcyA9IHV0aWxzLnBhcnNlKGRlY2wpXG4gICAgbGV0IFtzdGFydCwgc3Bhbl0gPSB1dGlscy50cmFuc2xhdGUodmFsdWVzLCAwLCAxKVxuXG4gICAgbGV0IGhhc1N0YXJ0VmFsdWVTcGFuID0gdmFsdWVzWzBdICYmIHZhbHVlc1swXS5pbmNsdWRlcygnc3BhbicpXG5cbiAgICBpZiAoaGFzU3RhcnRWYWx1ZVNwYW4pIHtcbiAgICAgIHNwYW4gPSB2YWx1ZXNbMF0uam9pbignJykucmVwbGFjZSgvXFxEL2csICcnKVxuICAgIH1cblxuICAgIDtbXG4gICAgICBbZGVjbC5wcm9wLCBzdGFydF0sXG4gICAgICBbYCR7ZGVjbC5wcm9wfS1zcGFuYCwgc3Bhbl1cbiAgICBdLmZvckVhY2goKFtwcm9wLCB2YWx1ZV0pID0+IHtcbiAgICAgIHV0aWxzLmluc2VydERlY2woZGVjbCwgcHJvcCwgdmFsdWUpXG4gICAgfSlcblxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5HcmlkUm93Q29sdW1uLm5hbWVzID0gWydncmlkLXJvdycsICdncmlkLWNvbHVtbiddXG5cbm1vZHVsZS5leHBvcnRzID0gR3JpZFJvd0NvbHVtblxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsInV0aWxzIiwiR3JpZFJvd0NvbHVtbiIsImluc2VydCIsImRlY2wiLCJwcmVmaXgiLCJwcmVmaXhlcyIsInZhbHVlcyIsInBhcnNlIiwic3RhcnQiLCJzcGFuIiwidHJhbnNsYXRlIiwiaGFzU3RhcnRWYWx1ZVNwYW4iLCJpbmNsdWRlcyIsImpvaW4iLCJyZXBsYWNlIiwicHJvcCIsImZvckVhY2giLCJ2YWx1ZSIsImluc2VydERlY2wiLCJ1bmRlZmluZWQiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-row-column.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-rows-columns.js":
/*!******************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-rows-columns.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet { autoplaceGridItems, getGridGap, inheritGridGap, prefixTrackProp, prefixTrackValue } = __webpack_require__(/*! ./grid-utils */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\");\nlet Processor = __webpack_require__(/*! ../processor */ \"(ssr)/./node_modules/autoprefixer/lib/processor.js\");\nclass GridRowsColumns extends Declaration {\n    insert(decl, prefix, prefixes, result) {\n        if (prefix !== \"-ms-\") return super.insert(decl, prefix, prefixes);\n        let { parent, prop, value } = decl;\n        let isRowProp = prop.includes(\"rows\");\n        let isColumnProp = prop.includes(\"columns\");\n        let hasGridTemplate = parent.some((i)=>i.prop === \"grid-template\" || i.prop === \"grid-template-areas\");\n        /**\n     * Not to prefix rows declaration if grid-template(-areas) is present\n     */ if (hasGridTemplate && isRowProp) {\n            return false;\n        }\n        let processor = new Processor({\n            options: {}\n        });\n        let status = processor.gridStatus(parent, result);\n        let gap = getGridGap(decl);\n        gap = inheritGridGap(decl, gap) || gap;\n        let gapValue = isRowProp ? gap.row : gap.column;\n        if ((status === \"no-autoplace\" || status === true) && !hasGridTemplate) {\n            gapValue = null;\n        }\n        let prefixValue = prefixTrackValue({\n            gap: gapValue,\n            value\n        });\n        /**\n     * Insert prefixes\n     */ decl.cloneBefore({\n            prop: prefixTrackProp({\n                prefix,\n                prop\n            }),\n            value: prefixValue\n        });\n        let autoflow = parent.nodes.find((i)=>i.prop === \"grid-auto-flow\");\n        let autoflowValue = \"row\";\n        if (autoflow && !processor.disabled(autoflow, result)) {\n            autoflowValue = autoflow.value.trim();\n        }\n        if (status === \"autoplace\") {\n            /**\n       * Show warning if grid-template-rows decl is not found\n       */ let rowDecl = parent.nodes.find((i)=>i.prop === \"grid-template-rows\");\n            if (!rowDecl && hasGridTemplate) {\n                return undefined;\n            } else if (!rowDecl && !hasGridTemplate) {\n                decl.warn(result, \"Autoplacement does not work without grid-template-rows property\");\n                return undefined;\n            }\n            /**\n       * Show warning if grid-template-columns decl is not found\n       */ let columnDecl = parent.nodes.find((i)=>{\n                return i.prop === \"grid-template-columns\";\n            });\n            if (!columnDecl && !hasGridTemplate) {\n                decl.warn(result, \"Autoplacement does not work without grid-template-columns property\");\n            }\n            /**\n       * Autoplace grid items\n       */ if (isColumnProp && !hasGridTemplate) {\n                autoplaceGridItems(decl, result, gap, autoflowValue);\n            }\n        }\n        return undefined;\n    }\n    /**\n   * Change IE property back\n   */ normalize(prop) {\n        return prop.replace(/^grid-(rows|columns)/, \"grid-template-$1\");\n    }\n    /**\n   * Change property name for IE\n   */ prefixed(prop, prefix) {\n        if (prefix === \"-ms-\") {\n            return prefixTrackProp({\n                prefix,\n                prop\n            });\n        }\n        return super.prefixed(prop, prefix);\n    }\n}\nGridRowsColumns.names = [\n    \"grid-template-rows\",\n    \"grid-template-columns\",\n    \"grid-rows\",\n    \"grid-columns\"\n];\nmodule.exports = GridRowsColumns;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXJvd3MtY29sdW1ucy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFDMUIsSUFBSSxFQUNGQyxrQkFBa0IsRUFDbEJDLFVBQVUsRUFDVkMsY0FBYyxFQUNkQyxlQUFlLEVBQ2ZDLGdCQUFnQixFQUNqQixHQUFHTCxtQkFBT0EsQ0FBQztBQUNaLElBQUlNLFlBQVlOLG1CQUFPQSxDQUFDO0FBRXhCLE1BQU1PLHdCQUF3QlI7SUFDNUJTLE9BQU9DLElBQUksRUFBRUMsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRTtRQUNyQyxJQUFJRixXQUFXLFFBQVEsT0FBTyxLQUFLLENBQUNGLE9BQU9DLE1BQU1DLFFBQVFDO1FBRXpELElBQUksRUFBRUUsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHTjtRQUM5QixJQUFJTyxZQUFZRixLQUFLRyxRQUFRLENBQUM7UUFDOUIsSUFBSUMsZUFBZUosS0FBS0csUUFBUSxDQUFDO1FBRWpDLElBQUlFLGtCQUFrQk4sT0FBT08sSUFBSSxDQUMvQkMsQ0FBQUEsSUFBS0EsRUFBRVAsSUFBSSxLQUFLLG1CQUFtQk8sRUFBRVAsSUFBSSxLQUFLO1FBR2hEOztLQUVDLEdBQ0QsSUFBSUssbUJBQW1CSCxXQUFXO1lBQ2hDLE9BQU87UUFDVDtRQUVBLElBQUlNLFlBQVksSUFBSWhCLFVBQVU7WUFBRWlCLFNBQVMsQ0FBQztRQUFFO1FBQzVDLElBQUlDLFNBQVNGLFVBQVVHLFVBQVUsQ0FBQ1osUUFBUUQ7UUFDMUMsSUFBSWMsTUFBTXhCLFdBQVdPO1FBQ3JCaUIsTUFBTXZCLGVBQWVNLE1BQU1pQixRQUFRQTtRQUVuQyxJQUFJQyxXQUFXWCxZQUFZVSxJQUFJRSxHQUFHLEdBQUdGLElBQUlHLE1BQU07UUFFL0MsSUFBSSxDQUFDTCxXQUFXLGtCQUFrQkEsV0FBVyxJQUFHLEtBQU0sQ0FBQ0wsaUJBQWlCO1lBQ3RFUSxXQUFXO1FBQ2I7UUFFQSxJQUFJRyxjQUFjekIsaUJBQWlCO1lBQ2pDcUIsS0FBS0M7WUFDTFo7UUFDRjtRQUVBOztLQUVDLEdBQ0ROLEtBQUtzQixXQUFXLENBQUM7WUFDZmpCLE1BQU1WLGdCQUFnQjtnQkFBRU07Z0JBQVFJO1lBQUs7WUFDckNDLE9BQU9lO1FBQ1Q7UUFFQSxJQUFJRSxXQUFXbkIsT0FBT29CLEtBQUssQ0FBQ0MsSUFBSSxDQUFDYixDQUFBQSxJQUFLQSxFQUFFUCxJQUFJLEtBQUs7UUFDakQsSUFBSXFCLGdCQUFnQjtRQUVwQixJQUFJSCxZQUFZLENBQUNWLFVBQVVjLFFBQVEsQ0FBQ0osVUFBVXBCLFNBQVM7WUFDckR1QixnQkFBZ0JILFNBQVNqQixLQUFLLENBQUNzQixJQUFJO1FBQ3JDO1FBQ0EsSUFBSWIsV0FBVyxhQUFhO1lBQzFCOztPQUVDLEdBQ0QsSUFBSWMsVUFBVXpCLE9BQU9vQixLQUFLLENBQUNDLElBQUksQ0FBQ2IsQ0FBQUEsSUFBS0EsRUFBRVAsSUFBSSxLQUFLO1lBRWhELElBQUksQ0FBQ3dCLFdBQVduQixpQkFBaUI7Z0JBQy9CLE9BQU9vQjtZQUNULE9BQU8sSUFBSSxDQUFDRCxXQUFXLENBQUNuQixpQkFBaUI7Z0JBQ3ZDVixLQUFLK0IsSUFBSSxDQUNQNUIsUUFDQTtnQkFFRixPQUFPMkI7WUFDVDtZQUVBOztPQUVDLEdBQ0QsSUFBSUUsYUFBYTVCLE9BQU9vQixLQUFLLENBQUNDLElBQUksQ0FBQ2IsQ0FBQUE7Z0JBQ2pDLE9BQU9BLEVBQUVQLElBQUksS0FBSztZQUNwQjtZQUNBLElBQUksQ0FBQzJCLGNBQWMsQ0FBQ3RCLGlCQUFpQjtnQkFDbkNWLEtBQUsrQixJQUFJLENBQ1A1QixRQUNBO1lBRUo7WUFFQTs7T0FFQyxHQUNELElBQUlNLGdCQUFnQixDQUFDQyxpQkFBaUI7Z0JBQ3BDbEIsbUJBQW1CUSxNQUFNRyxRQUFRYyxLQUFLUztZQUN4QztRQUNGO1FBRUEsT0FBT0k7SUFDVDtJQUVBOztHQUVDLEdBQ0RHLFVBQVU1QixJQUFJLEVBQUU7UUFDZCxPQUFPQSxLQUFLNkIsT0FBTyxDQUFDLHdCQUF3QjtJQUM5QztJQUVBOztHQUVDLEdBQ0RDLFNBQVM5QixJQUFJLEVBQUVKLE1BQU0sRUFBRTtRQUNyQixJQUFJQSxXQUFXLFFBQVE7WUFDckIsT0FBT04sZ0JBQWdCO2dCQUFFTTtnQkFBUUk7WUFBSztRQUN4QztRQUNBLE9BQU8sS0FBSyxDQUFDOEIsU0FBUzlCLE1BQU1KO0lBQzlCO0FBQ0Y7QUFFQUgsZ0JBQWdCc0MsS0FBSyxHQUFHO0lBQ3RCO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFREMsT0FBT0MsT0FBTyxHQUFHeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXJvd3MtY29sdW1ucy5qcz83ZjUyIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcbmxldCB7XG4gIGF1dG9wbGFjZUdyaWRJdGVtcyxcbiAgZ2V0R3JpZEdhcCxcbiAgaW5oZXJpdEdyaWRHYXAsXG4gIHByZWZpeFRyYWNrUHJvcCxcbiAgcHJlZml4VHJhY2tWYWx1ZVxufSA9IHJlcXVpcmUoJy4vZ3JpZC11dGlscycpXG5sZXQgUHJvY2Vzc29yID0gcmVxdWlyZSgnLi4vcHJvY2Vzc29yJylcblxuY2xhc3MgR3JpZFJvd3NDb2x1bW5zIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcywgcmVzdWx0KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICBsZXQgeyBwYXJlbnQsIHByb3AsIHZhbHVlIH0gPSBkZWNsXG4gICAgbGV0IGlzUm93UHJvcCA9IHByb3AuaW5jbHVkZXMoJ3Jvd3MnKVxuICAgIGxldCBpc0NvbHVtblByb3AgPSBwcm9wLmluY2x1ZGVzKCdjb2x1bW5zJylcblxuICAgIGxldCBoYXNHcmlkVGVtcGxhdGUgPSBwYXJlbnQuc29tZShcbiAgICAgIGkgPT4gaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZScgfHwgaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1hcmVhcydcbiAgICApXG5cbiAgICAvKipcbiAgICAgKiBOb3QgdG8gcHJlZml4IHJvd3MgZGVjbGFyYXRpb24gaWYgZ3JpZC10ZW1wbGF0ZSgtYXJlYXMpIGlzIHByZXNlbnRcbiAgICAgKi9cbiAgICBpZiAoaGFzR3JpZFRlbXBsYXRlICYmIGlzUm93UHJvcCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgbGV0IHByb2Nlc3NvciA9IG5ldyBQcm9jZXNzb3IoeyBvcHRpb25zOiB7fSB9KVxuICAgIGxldCBzdGF0dXMgPSBwcm9jZXNzb3IuZ3JpZFN0YXR1cyhwYXJlbnQsIHJlc3VsdClcbiAgICBsZXQgZ2FwID0gZ2V0R3JpZEdhcChkZWNsKVxuICAgIGdhcCA9IGluaGVyaXRHcmlkR2FwKGRlY2wsIGdhcCkgfHwgZ2FwXG5cbiAgICBsZXQgZ2FwVmFsdWUgPSBpc1Jvd1Byb3AgPyBnYXAucm93IDogZ2FwLmNvbHVtblxuXG4gICAgaWYgKChzdGF0dXMgPT09ICduby1hdXRvcGxhY2UnIHx8IHN0YXR1cyA9PT0gdHJ1ZSkgJiYgIWhhc0dyaWRUZW1wbGF0ZSkge1xuICAgICAgZ2FwVmFsdWUgPSBudWxsXG4gICAgfVxuXG4gICAgbGV0IHByZWZpeFZhbHVlID0gcHJlZml4VHJhY2tWYWx1ZSh7XG4gICAgICBnYXA6IGdhcFZhbHVlLFxuICAgICAgdmFsdWVcbiAgICB9KVxuXG4gICAgLyoqXG4gICAgICogSW5zZXJ0IHByZWZpeGVzXG4gICAgICovXG4gICAgZGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICBwcm9wOiBwcmVmaXhUcmFja1Byb3AoeyBwcmVmaXgsIHByb3AgfSksXG4gICAgICB2YWx1ZTogcHJlZml4VmFsdWVcbiAgICB9KVxuXG4gICAgbGV0IGF1dG9mbG93ID0gcGFyZW50Lm5vZGVzLmZpbmQoaSA9PiBpLnByb3AgPT09ICdncmlkLWF1dG8tZmxvdycpXG4gICAgbGV0IGF1dG9mbG93VmFsdWUgPSAncm93J1xuXG4gICAgaWYgKGF1dG9mbG93ICYmICFwcm9jZXNzb3IuZGlzYWJsZWQoYXV0b2Zsb3csIHJlc3VsdCkpIHtcbiAgICAgIGF1dG9mbG93VmFsdWUgPSBhdXRvZmxvdy52YWx1ZS50cmltKClcbiAgICB9XG4gICAgaWYgKHN0YXR1cyA9PT0gJ2F1dG9wbGFjZScpIHtcbiAgICAgIC8qKlxuICAgICAgICogU2hvdyB3YXJuaW5nIGlmIGdyaWQtdGVtcGxhdGUtcm93cyBkZWNsIGlzIG5vdCBmb3VuZFxuICAgICAgICovXG4gICAgICBsZXQgcm93RGVjbCA9IHBhcmVudC5ub2Rlcy5maW5kKGkgPT4gaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1yb3dzJylcblxuICAgICAgaWYgKCFyb3dEZWNsICYmIGhhc0dyaWRUZW1wbGF0ZSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICB9IGVsc2UgaWYgKCFyb3dEZWNsICYmICFoYXNHcmlkVGVtcGxhdGUpIHtcbiAgICAgICAgZGVjbC53YXJuKFxuICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAnQXV0b3BsYWNlbWVudCBkb2VzIG5vdCB3b3JrIHdpdGhvdXQgZ3JpZC10ZW1wbGF0ZS1yb3dzIHByb3BlcnR5J1xuICAgICAgICApXG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBTaG93IHdhcm5pbmcgaWYgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zIGRlY2wgaXMgbm90IGZvdW5kXG4gICAgICAgKi9cbiAgICAgIGxldCBjb2x1bW5EZWNsID0gcGFyZW50Lm5vZGVzLmZpbmQoaSA9PiB7XG4gICAgICAgIHJldHVybiBpLnByb3AgPT09ICdncmlkLXRlbXBsYXRlLWNvbHVtbnMnXG4gICAgICB9KVxuICAgICAgaWYgKCFjb2x1bW5EZWNsICYmICFoYXNHcmlkVGVtcGxhdGUpIHtcbiAgICAgICAgZGVjbC53YXJuKFxuICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAnQXV0b3BsYWNlbWVudCBkb2VzIG5vdCB3b3JrIHdpdGhvdXQgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zIHByb3BlcnR5J1xuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogQXV0b3BsYWNlIGdyaWQgaXRlbXNcbiAgICAgICAqL1xuICAgICAgaWYgKGlzQ29sdW1uUHJvcCAmJiAhaGFzR3JpZFRlbXBsYXRlKSB7XG4gICAgICAgIGF1dG9wbGFjZUdyaWRJdGVtcyhkZWNsLCByZXN1bHQsIGdhcCwgYXV0b2Zsb3dWYWx1ZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIElFIHByb3BlcnR5IGJhY2tcbiAgICovXG4gIG5vcm1hbGl6ZShwcm9wKSB7XG4gICAgcmV0dXJuIHByb3AucmVwbGFjZSgvXmdyaWQtKHJvd3N8Y29sdW1ucykvLCAnZ3JpZC10ZW1wbGF0ZS0kMScpXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIElFXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLW1zLScpIHtcbiAgICAgIHJldHVybiBwcmVmaXhUcmFja1Byb3AoeyBwcmVmaXgsIHByb3AgfSlcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxufVxuXG5HcmlkUm93c0NvbHVtbnMubmFtZXMgPSBbXG4gICdncmlkLXRlbXBsYXRlLXJvd3MnLFxuICAnZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zJyxcbiAgJ2dyaWQtcm93cycsXG4gICdncmlkLWNvbHVtbnMnXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gR3JpZFJvd3NDb2x1bW5zXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiYXV0b3BsYWNlR3JpZEl0ZW1zIiwiZ2V0R3JpZEdhcCIsImluaGVyaXRHcmlkR2FwIiwicHJlZml4VHJhY2tQcm9wIiwicHJlZml4VHJhY2tWYWx1ZSIsIlByb2Nlc3NvciIsIkdyaWRSb3dzQ29sdW1ucyIsImluc2VydCIsImRlY2wiLCJwcmVmaXgiLCJwcmVmaXhlcyIsInJlc3VsdCIsInBhcmVudCIsInByb3AiLCJ2YWx1ZSIsImlzUm93UHJvcCIsImluY2x1ZGVzIiwiaXNDb2x1bW5Qcm9wIiwiaGFzR3JpZFRlbXBsYXRlIiwic29tZSIsImkiLCJwcm9jZXNzb3IiLCJvcHRpb25zIiwic3RhdHVzIiwiZ3JpZFN0YXR1cyIsImdhcCIsImdhcFZhbHVlIiwicm93IiwiY29sdW1uIiwicHJlZml4VmFsdWUiLCJjbG9uZUJlZm9yZSIsImF1dG9mbG93Iiwibm9kZXMiLCJmaW5kIiwiYXV0b2Zsb3dWYWx1ZSIsImRpc2FibGVkIiwidHJpbSIsInJvd0RlY2wiLCJ1bmRlZmluZWQiLCJ3YXJuIiwiY29sdW1uRGVjbCIsIm5vcm1hbGl6ZSIsInJlcGxhY2UiLCJwcmVmaXhlZCIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-rows-columns.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-start.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-start.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass GridStart extends Declaration {\n    /**\n   * Do not add prefix for unsupported value in IE\n   */ check(decl) {\n        let value = decl.value;\n        return !value.includes(\"/\") && !value.includes(\"span\");\n    }\n    /**\n   * Return a final spec property\n   */ normalize(prop) {\n        return prop.replace(\"-start\", \"\");\n    }\n    /**\n   * Change property name for IE\n   */ prefixed(prop, prefix) {\n        let result = super.prefixed(prop, prefix);\n        if (prefix === \"-ms-\") {\n            result = result.replace(\"-start\", \"\");\n        }\n        return result;\n    }\n}\nGridStart.names = [\n    \"grid-row-start\",\n    \"grid-column-start\"\n];\nmodule.exports = GridStart;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXN0YXJ0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixNQUFNQyxrQkFBa0JGO0lBQ3RCOztHQUVDLEdBQ0RHLE1BQU1DLElBQUksRUFBRTtRQUNWLElBQUlDLFFBQVFELEtBQUtDLEtBQUs7UUFDdEIsT0FBTyxDQUFDQSxNQUFNQyxRQUFRLENBQUMsUUFBUSxDQUFDRCxNQUFNQyxRQUFRLENBQUM7SUFDakQ7SUFFQTs7R0FFQyxHQUNEQyxVQUFVQyxJQUFJLEVBQUU7UUFDZCxPQUFPQSxLQUFLQyxPQUFPLENBQUMsVUFBVTtJQUNoQztJQUVBOztHQUVDLEdBQ0RDLFNBQVNGLElBQUksRUFBRUcsTUFBTSxFQUFFO1FBQ3JCLElBQUlDLFNBQVMsS0FBSyxDQUFDRixTQUFTRixNQUFNRztRQUNsQyxJQUFJQSxXQUFXLFFBQVE7WUFDckJDLFNBQVNBLE9BQU9ILE9BQU8sQ0FBQyxVQUFVO1FBQ3BDO1FBQ0EsT0FBT0c7SUFDVDtBQUNGO0FBRUFWLFVBQVVXLEtBQUssR0FBRztJQUFDO0lBQWtCO0NBQW9CO0FBRXpEQyxPQUFPQyxPQUFPLEdBQUdiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC1zdGFydC5qcz9lY2EzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgR3JpZFN0YXJ0IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogRG8gbm90IGFkZCBwcmVmaXggZm9yIHVuc3VwcG9ydGVkIHZhbHVlIGluIElFXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgbGV0IHZhbHVlID0gZGVjbC52YWx1ZVxuICAgIHJldHVybiAhdmFsdWUuaW5jbHVkZXMoJy8nKSAmJiAhdmFsdWUuaW5jbHVkZXMoJ3NwYW4nKVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBhIGZpbmFsIHNwZWMgcHJvcGVydHlcbiAgICovXG4gIG5vcm1hbGl6ZShwcm9wKSB7XG4gICAgcmV0dXJuIHByb3AucmVwbGFjZSgnLXN0YXJ0JywgJycpXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIElFXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgcmVzdWx0ID0gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICAgIGlmIChwcmVmaXggPT09ICctbXMtJykge1xuICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UoJy1zdGFydCcsICcnKVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cblxuR3JpZFN0YXJ0Lm5hbWVzID0gWydncmlkLXJvdy1zdGFydCcsICdncmlkLWNvbHVtbi1zdGFydCddXG5cbm1vZHVsZS5leHBvcnRzID0gR3JpZFN0YXJ0XG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiR3JpZFN0YXJ0IiwiY2hlY2siLCJkZWNsIiwidmFsdWUiLCJpbmNsdWRlcyIsIm5vcm1hbGl6ZSIsInByb3AiLCJyZXBsYWNlIiwicHJlZml4ZWQiLCJwcmVmaXgiLCJyZXN1bHQiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-start.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-template-areas.js":
/*!********************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-template-areas.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet { getGridGap, inheritGridGap, parseGridAreas, prefixTrackProp, prefixTrackValue, warnGridGap, warnMissedAreas } = __webpack_require__(/*! ./grid-utils */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\");\nfunction getGridRows(tpl) {\n    return tpl.trim().slice(1, -1).split(/[\"']\\s*[\"']?/g);\n}\nclass GridTemplateAreas extends Declaration {\n    /**\n   * Translate grid-template-areas to separate -ms- prefixed properties\n   */ insert(decl, prefix, prefixes, result) {\n        if (prefix !== \"-ms-\") return super.insert(decl, prefix, prefixes);\n        let hasColumns = false;\n        let hasRows = false;\n        let parent = decl.parent;\n        let gap = getGridGap(decl);\n        gap = inheritGridGap(decl, gap) || gap;\n        // remove already prefixed rows\n        // to prevent doubling prefixes\n        parent.walkDecls(/-ms-grid-rows/, (i)=>i.remove());\n        // add empty tracks to rows\n        parent.walkDecls(/grid-template-(rows|columns)/, (trackDecl)=>{\n            if (trackDecl.prop === \"grid-template-rows\") {\n                hasRows = true;\n                let { prop, value } = trackDecl;\n                trackDecl.cloneBefore({\n                    prop: prefixTrackProp({\n                        prefix,\n                        prop\n                    }),\n                    value: prefixTrackValue({\n                        gap: gap.row,\n                        value\n                    })\n                });\n            } else {\n                hasColumns = true;\n            }\n        });\n        let gridRows = getGridRows(decl.value);\n        if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n            decl.cloneBefore({\n                prop: \"-ms-grid-rows\",\n                raws: {},\n                value: prefixTrackValue({\n                    gap: gap.row,\n                    value: `repeat(${gridRows.length}, auto)`\n                })\n            });\n        }\n        // warnings\n        warnGridGap({\n            decl,\n            gap,\n            hasColumns,\n            result\n        });\n        let areas = parseGridAreas({\n            gap,\n            rows: gridRows\n        });\n        warnMissedAreas(areas, decl, result);\n        return decl;\n    }\n}\nGridTemplateAreas.names = [\n    \"grid-template-areas\"\n];\nmodule.exports = GridTemplateAreas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXRlbXBsYXRlLWFyZWFzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUMxQixJQUFJLEVBQ0ZDLFVBQVUsRUFDVkMsY0FBYyxFQUNkQyxjQUFjLEVBQ2RDLGVBQWUsRUFDZkMsZ0JBQWdCLEVBQ2hCQyxXQUFXLEVBQ1hDLGVBQWUsRUFDaEIsR0FBR1AsbUJBQU9BLENBQUM7QUFFWixTQUFTUSxZQUFZQyxHQUFHO0lBQ3RCLE9BQU9BLElBQ0pDLElBQUksR0FDSkMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUNWQyxLQUFLLENBQUM7QUFDWDtBQUVBLE1BQU1DLDBCQUEwQmQ7SUFDOUI7O0dBRUMsR0FDRGUsT0FBT0MsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsTUFBTSxFQUFFO1FBQ3JDLElBQUlGLFdBQVcsUUFBUSxPQUFPLEtBQUssQ0FBQ0YsT0FBT0MsTUFBTUMsUUFBUUM7UUFFekQsSUFBSUUsYUFBYTtRQUNqQixJQUFJQyxVQUFVO1FBQ2QsSUFBSUMsU0FBU04sS0FBS00sTUFBTTtRQUN4QixJQUFJQyxNQUFNckIsV0FBV2M7UUFDckJPLE1BQU1wQixlQUFlYSxNQUFNTyxRQUFRQTtRQUVuQywrQkFBK0I7UUFDL0IsK0JBQStCO1FBQy9CRCxPQUFPRSxTQUFTLENBQUMsaUJBQWlCQyxDQUFBQSxJQUFLQSxFQUFFQyxNQUFNO1FBRS9DLDJCQUEyQjtRQUMzQkosT0FBT0UsU0FBUyxDQUFDLGdDQUFnQ0csQ0FBQUE7WUFDL0MsSUFBSUEsVUFBVUMsSUFBSSxLQUFLLHNCQUFzQjtnQkFDM0NQLFVBQVU7Z0JBQ1YsSUFBSSxFQUFFTyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHRjtnQkFDdEJBLFVBQVVHLFdBQVcsQ0FBQztvQkFDcEJGLE1BQU12QixnQkFBZ0I7d0JBQUVZO3dCQUFRVztvQkFBSztvQkFDckNDLE9BQU92QixpQkFBaUI7d0JBQUVpQixLQUFLQSxJQUFJUSxHQUFHO3dCQUFFRjtvQkFBTTtnQkFDaEQ7WUFDRixPQUFPO2dCQUNMVCxhQUFhO1lBQ2Y7UUFDRjtRQUVBLElBQUlZLFdBQVd2QixZQUFZTyxLQUFLYSxLQUFLO1FBRXJDLElBQUlULGNBQWMsQ0FBQ0MsV0FBV0UsSUFBSVEsR0FBRyxJQUFJQyxTQUFTQyxNQUFNLEdBQUcsR0FBRztZQUM1RGpCLEtBQUtjLFdBQVcsQ0FBQztnQkFDZkYsTUFBTTtnQkFDTk0sTUFBTSxDQUFDO2dCQUNQTCxPQUFPdkIsaUJBQWlCO29CQUN0QmlCLEtBQUtBLElBQUlRLEdBQUc7b0JBQ1pGLE9BQU8sQ0FBQyxPQUFPLEVBQUVHLFNBQVNDLE1BQU0sQ0FBQyxPQUFPLENBQUM7Z0JBQzNDO1lBQ0Y7UUFDRjtRQUVBLFdBQVc7UUFDWDFCLFlBQVk7WUFDVlM7WUFDQU87WUFDQUg7WUFDQUQ7UUFDRjtRQUVBLElBQUlnQixRQUFRL0IsZUFBZTtZQUN6Qm1CO1lBQ0FhLE1BQU1KO1FBQ1I7UUFFQXhCLGdCQUFnQjJCLE9BQU9uQixNQUFNRztRQUU3QixPQUFPSDtJQUNUO0FBQ0Y7QUFFQUYsa0JBQWtCdUIsS0FBSyxHQUFHO0lBQUM7Q0FBc0I7QUFFakRDLE9BQU9DLE9BQU8sR0FBR3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC10ZW1wbGF0ZS1hcmVhcy5qcz83ODhiIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcbmxldCB7XG4gIGdldEdyaWRHYXAsXG4gIGluaGVyaXRHcmlkR2FwLFxuICBwYXJzZUdyaWRBcmVhcyxcbiAgcHJlZml4VHJhY2tQcm9wLFxuICBwcmVmaXhUcmFja1ZhbHVlLFxuICB3YXJuR3JpZEdhcCxcbiAgd2Fybk1pc3NlZEFyZWFzXG59ID0gcmVxdWlyZSgnLi9ncmlkLXV0aWxzJylcblxuZnVuY3Rpb24gZ2V0R3JpZFJvd3ModHBsKSB7XG4gIHJldHVybiB0cGxcbiAgICAudHJpbSgpXG4gICAgLnNsaWNlKDEsIC0xKVxuICAgIC5zcGxpdCgvW1wiJ11cXHMqW1wiJ10/L2cpXG59XG5cbmNsYXNzIEdyaWRUZW1wbGF0ZUFyZWFzIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogVHJhbnNsYXRlIGdyaWQtdGVtcGxhdGUtYXJlYXMgdG8gc2VwYXJhdGUgLW1zLSBwcmVmaXhlZCBwcm9wZXJ0aWVzXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcywgcmVzdWx0KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICBsZXQgaGFzQ29sdW1ucyA9IGZhbHNlXG4gICAgbGV0IGhhc1Jvd3MgPSBmYWxzZVxuICAgIGxldCBwYXJlbnQgPSBkZWNsLnBhcmVudFxuICAgIGxldCBnYXAgPSBnZXRHcmlkR2FwKGRlY2wpXG4gICAgZ2FwID0gaW5oZXJpdEdyaWRHYXAoZGVjbCwgZ2FwKSB8fCBnYXBcblxuICAgIC8vIHJlbW92ZSBhbHJlYWR5IHByZWZpeGVkIHJvd3NcbiAgICAvLyB0byBwcmV2ZW50IGRvdWJsaW5nIHByZWZpeGVzXG4gICAgcGFyZW50LndhbGtEZWNscygvLW1zLWdyaWQtcm93cy8sIGkgPT4gaS5yZW1vdmUoKSlcblxuICAgIC8vIGFkZCBlbXB0eSB0cmFja3MgdG8gcm93c1xuICAgIHBhcmVudC53YWxrRGVjbHMoL2dyaWQtdGVtcGxhdGUtKHJvd3N8Y29sdW1ucykvLCB0cmFja0RlY2wgPT4ge1xuICAgICAgaWYgKHRyYWNrRGVjbC5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1yb3dzJykge1xuICAgICAgICBoYXNSb3dzID0gdHJ1ZVxuICAgICAgICBsZXQgeyBwcm9wLCB2YWx1ZSB9ID0gdHJhY2tEZWNsXG4gICAgICAgIHRyYWNrRGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICAgICAgcHJvcDogcHJlZml4VHJhY2tQcm9wKHsgcHJlZml4LCBwcm9wIH0pLFxuICAgICAgICAgIHZhbHVlOiBwcmVmaXhUcmFja1ZhbHVlKHsgZ2FwOiBnYXAucm93LCB2YWx1ZSB9KVxuICAgICAgICB9KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGFzQ29sdW1ucyA9IHRydWVcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgbGV0IGdyaWRSb3dzID0gZ2V0R3JpZFJvd3MoZGVjbC52YWx1ZSlcblxuICAgIGlmIChoYXNDb2x1bW5zICYmICFoYXNSb3dzICYmIGdhcC5yb3cgJiYgZ3JpZFJvd3MubGVuZ3RoID4gMSkge1xuICAgICAgZGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICAgIHByb3A6ICctbXMtZ3JpZC1yb3dzJyxcbiAgICAgICAgcmF3czoge30sXG4gICAgICAgIHZhbHVlOiBwcmVmaXhUcmFja1ZhbHVlKHtcbiAgICAgICAgICBnYXA6IGdhcC5yb3csXG4gICAgICAgICAgdmFsdWU6IGByZXBlYXQoJHtncmlkUm93cy5sZW5ndGh9LCBhdXRvKWBcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gd2FybmluZ3NcbiAgICB3YXJuR3JpZEdhcCh7XG4gICAgICBkZWNsLFxuICAgICAgZ2FwLFxuICAgICAgaGFzQ29sdW1ucyxcbiAgICAgIHJlc3VsdFxuICAgIH0pXG5cbiAgICBsZXQgYXJlYXMgPSBwYXJzZUdyaWRBcmVhcyh7XG4gICAgICBnYXAsXG4gICAgICByb3dzOiBncmlkUm93c1xuICAgIH0pXG5cbiAgICB3YXJuTWlzc2VkQXJlYXMoYXJlYXMsIGRlY2wsIHJlc3VsdClcblxuICAgIHJldHVybiBkZWNsXG4gIH1cbn1cblxuR3JpZFRlbXBsYXRlQXJlYXMubmFtZXMgPSBbJ2dyaWQtdGVtcGxhdGUtYXJlYXMnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWRUZW1wbGF0ZUFyZWFzXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiZ2V0R3JpZEdhcCIsImluaGVyaXRHcmlkR2FwIiwicGFyc2VHcmlkQXJlYXMiLCJwcmVmaXhUcmFja1Byb3AiLCJwcmVmaXhUcmFja1ZhbHVlIiwid2FybkdyaWRHYXAiLCJ3YXJuTWlzc2VkQXJlYXMiLCJnZXRHcmlkUm93cyIsInRwbCIsInRyaW0iLCJzbGljZSIsInNwbGl0IiwiR3JpZFRlbXBsYXRlQXJlYXMiLCJpbnNlcnQiLCJkZWNsIiwicHJlZml4IiwicHJlZml4ZXMiLCJyZXN1bHQiLCJoYXNDb2x1bW5zIiwiaGFzUm93cyIsInBhcmVudCIsImdhcCIsIndhbGtEZWNscyIsImkiLCJyZW1vdmUiLCJ0cmFja0RlY2wiLCJwcm9wIiwidmFsdWUiLCJjbG9uZUJlZm9yZSIsInJvdyIsImdyaWRSb3dzIiwibGVuZ3RoIiwicmF3cyIsImFyZWFzIiwicm93cyIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-template-areas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-template.js":
/*!**************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-template.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet { getGridGap, inheritGridGap, parseTemplate, warnGridGap, warnMissedAreas } = __webpack_require__(/*! ./grid-utils */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\");\nclass GridTemplate extends Declaration {\n    /**\n   * Translate grid-template to separate -ms- prefixed properties\n   */ insert(decl, prefix, prefixes, result) {\n        if (prefix !== \"-ms-\") return super.insert(decl, prefix, prefixes);\n        if (decl.parent.some((i)=>i.prop === \"-ms-grid-rows\")) {\n            return undefined;\n        }\n        let gap = getGridGap(decl);\n        /**\n     * we must insert inherited gap values in some cases:\n     * if we are inside media query && if we have no grid-gap value\n     */ let inheritedGap = inheritGridGap(decl, gap);\n        let { areas, columns, rows } = parseTemplate({\n            decl,\n            gap: inheritedGap || gap\n        });\n        let hasAreas = Object.keys(areas).length > 0;\n        let hasRows = Boolean(rows);\n        let hasColumns = Boolean(columns);\n        warnGridGap({\n            decl,\n            gap,\n            hasColumns,\n            result\n        });\n        warnMissedAreas(areas, decl, result);\n        if (hasRows && hasColumns || hasAreas) {\n            decl.cloneBefore({\n                prop: \"-ms-grid-rows\",\n                raws: {},\n                value: rows\n            });\n        }\n        if (hasColumns) {\n            decl.cloneBefore({\n                prop: \"-ms-grid-columns\",\n                raws: {},\n                value: columns\n            });\n        }\n        return decl;\n    }\n}\nGridTemplate.names = [\n    \"grid-template\"\n];\nmodule.exports = GridTemplate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXRlbXBsYXRlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUMxQixJQUFJLEVBQ0ZDLFVBQVUsRUFDVkMsY0FBYyxFQUNkQyxhQUFhLEVBQ2JDLFdBQVcsRUFDWEMsZUFBZSxFQUNoQixHQUFHTCxtQkFBT0EsQ0FBQztBQUVaLE1BQU1NLHFCQUFxQlA7SUFDekI7O0dBRUMsR0FDRFEsT0FBT0MsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsTUFBTSxFQUFFO1FBQ3JDLElBQUlGLFdBQVcsUUFBUSxPQUFPLEtBQUssQ0FBQ0YsT0FBT0MsTUFBTUMsUUFBUUM7UUFFekQsSUFBSUYsS0FBS0ksTUFBTSxDQUFDQyxJQUFJLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUksS0FBSyxrQkFBa0I7WUFDckQsT0FBT0M7UUFDVDtRQUVBLElBQUlDLE1BQU1oQixXQUFXTztRQUVyQjs7O0tBR0MsR0FDRCxJQUFJVSxlQUFlaEIsZUFBZU0sTUFBTVM7UUFFeEMsSUFBSSxFQUFFRSxLQUFLLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFLEdBQUdsQixjQUFjO1lBQzNDSztZQUNBUyxLQUFLQyxnQkFBZ0JEO1FBQ3ZCO1FBRUEsSUFBSUssV0FBV0MsT0FBT0MsSUFBSSxDQUFDTCxPQUFPTSxNQUFNLEdBQUc7UUFDM0MsSUFBSUMsVUFBVUMsUUFBUU47UUFDdEIsSUFBSU8sYUFBYUQsUUFBUVA7UUFFekJoQixZQUFZO1lBQ1ZJO1lBQ0FTO1lBQ0FXO1lBQ0FqQjtRQUNGO1FBRUFOLGdCQUFnQmMsT0FBT1gsTUFBTUc7UUFFN0IsSUFBSSxXQUFZaUIsY0FBZU4sVUFBVTtZQUN2Q2QsS0FBS3FCLFdBQVcsQ0FBQztnQkFDZmQsTUFBTTtnQkFDTmUsTUFBTSxDQUFDO2dCQUNQQyxPQUFPVjtZQUNUO1FBQ0Y7UUFFQSxJQUFJTyxZQUFZO1lBQ2RwQixLQUFLcUIsV0FBVyxDQUFDO2dCQUNmZCxNQUFNO2dCQUNOZSxNQUFNLENBQUM7Z0JBQ1BDLE9BQU9YO1lBQ1Q7UUFDRjtRQUVBLE9BQU9aO0lBQ1Q7QUFDRjtBQUVBRixhQUFhMEIsS0FBSyxHQUFHO0lBQUM7Q0FBZ0I7QUFFdENDLE9BQU9DLE9BQU8sR0FBRzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC10ZW1wbGF0ZS5qcz8xYzVkIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcbmxldCB7XG4gIGdldEdyaWRHYXAsXG4gIGluaGVyaXRHcmlkR2FwLFxuICBwYXJzZVRlbXBsYXRlLFxuICB3YXJuR3JpZEdhcCxcbiAgd2Fybk1pc3NlZEFyZWFzXG59ID0gcmVxdWlyZSgnLi9ncmlkLXV0aWxzJylcblxuY2xhc3MgR3JpZFRlbXBsYXRlIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogVHJhbnNsYXRlIGdyaWQtdGVtcGxhdGUgdG8gc2VwYXJhdGUgLW1zLSBwcmVmaXhlZCBwcm9wZXJ0aWVzXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcywgcmVzdWx0KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICBpZiAoZGVjbC5wYXJlbnQuc29tZShpID0+IGkucHJvcCA9PT0gJy1tcy1ncmlkLXJvd3MnKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCBnYXAgPSBnZXRHcmlkR2FwKGRlY2wpXG5cbiAgICAvKipcbiAgICAgKiB3ZSBtdXN0IGluc2VydCBpbmhlcml0ZWQgZ2FwIHZhbHVlcyBpbiBzb21lIGNhc2VzOlxuICAgICAqIGlmIHdlIGFyZSBpbnNpZGUgbWVkaWEgcXVlcnkgJiYgaWYgd2UgaGF2ZSBubyBncmlkLWdhcCB2YWx1ZVxuICAgICAqL1xuICAgIGxldCBpbmhlcml0ZWRHYXAgPSBpbmhlcml0R3JpZEdhcChkZWNsLCBnYXApXG5cbiAgICBsZXQgeyBhcmVhcywgY29sdW1ucywgcm93cyB9ID0gcGFyc2VUZW1wbGF0ZSh7XG4gICAgICBkZWNsLFxuICAgICAgZ2FwOiBpbmhlcml0ZWRHYXAgfHwgZ2FwXG4gICAgfSlcblxuICAgIGxldCBoYXNBcmVhcyA9IE9iamVjdC5rZXlzKGFyZWFzKS5sZW5ndGggPiAwXG4gICAgbGV0IGhhc1Jvd3MgPSBCb29sZWFuKHJvd3MpXG4gICAgbGV0IGhhc0NvbHVtbnMgPSBCb29sZWFuKGNvbHVtbnMpXG5cbiAgICB3YXJuR3JpZEdhcCh7XG4gICAgICBkZWNsLFxuICAgICAgZ2FwLFxuICAgICAgaGFzQ29sdW1ucyxcbiAgICAgIHJlc3VsdFxuICAgIH0pXG5cbiAgICB3YXJuTWlzc2VkQXJlYXMoYXJlYXMsIGRlY2wsIHJlc3VsdClcblxuICAgIGlmICgoaGFzUm93cyAmJiBoYXNDb2x1bW5zKSB8fCBoYXNBcmVhcykge1xuICAgICAgZGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICAgIHByb3A6ICctbXMtZ3JpZC1yb3dzJyxcbiAgICAgICAgcmF3czoge30sXG4gICAgICAgIHZhbHVlOiByb3dzXG4gICAgICB9KVxuICAgIH1cblxuICAgIGlmIChoYXNDb2x1bW5zKSB7XG4gICAgICBkZWNsLmNsb25lQmVmb3JlKHtcbiAgICAgICAgcHJvcDogJy1tcy1ncmlkLWNvbHVtbnMnLFxuICAgICAgICByYXdzOiB7fSxcbiAgICAgICAgdmFsdWU6IGNvbHVtbnNcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgcmV0dXJuIGRlY2xcbiAgfVxufVxuXG5HcmlkVGVtcGxhdGUubmFtZXMgPSBbJ2dyaWQtdGVtcGxhdGUnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWRUZW1wbGF0ZVxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsImdldEdyaWRHYXAiLCJpbmhlcml0R3JpZEdhcCIsInBhcnNlVGVtcGxhdGUiLCJ3YXJuR3JpZEdhcCIsIndhcm5NaXNzZWRBcmVhcyIsIkdyaWRUZW1wbGF0ZSIsImluc2VydCIsImRlY2wiLCJwcmVmaXgiLCJwcmVmaXhlcyIsInJlc3VsdCIsInBhcmVudCIsInNvbWUiLCJpIiwicHJvcCIsInVuZGVmaW5lZCIsImdhcCIsImluaGVyaXRlZEdhcCIsImFyZWFzIiwiY29sdW1ucyIsInJvd3MiLCJoYXNBcmVhcyIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJoYXNSb3dzIiwiQm9vbGVhbiIsImhhc0NvbHVtbnMiLCJjbG9uZUJlZm9yZSIsInJhd3MiLCJ2YWx1ZSIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-template.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/grid-utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("let parser = __webpack_require__(/*! postcss-value-parser */ \"(ssr)/./node_modules/postcss-value-parser/lib/index.js\");\nlet list = (__webpack_require__(/*! postcss */ \"(ssr)/./node_modules/postcss/lib/postcss.js\").list);\nlet uniq = (__webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\").uniq);\nlet escapeRegexp = (__webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\").escapeRegexp);\nlet splitSelector = (__webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\").splitSelector);\nfunction convert(value) {\n    if (value && value.length === 2 && value[0] === \"span\" && parseInt(value[1], 10) > 0) {\n        return [\n            false,\n            parseInt(value[1], 10)\n        ];\n    }\n    if (value && value.length === 1 && parseInt(value[0], 10) > 0) {\n        return [\n            parseInt(value[0], 10),\n            false\n        ];\n    }\n    return [\n        false,\n        false\n    ];\n}\nexports.translate = translate;\nfunction translate(values, startIndex, endIndex) {\n    let startValue = values[startIndex];\n    let endValue = values[endIndex];\n    if (!startValue) {\n        return [\n            false,\n            false\n        ];\n    }\n    let [start, spanStart] = convert(startValue);\n    let [end, spanEnd] = convert(endValue);\n    if (start && !endValue) {\n        return [\n            start,\n            false\n        ];\n    }\n    if (spanStart && end) {\n        return [\n            end - spanStart,\n            spanStart\n        ];\n    }\n    if (start && spanEnd) {\n        return [\n            start,\n            spanEnd\n        ];\n    }\n    if (start && end) {\n        return [\n            start,\n            end - start\n        ];\n    }\n    return [\n        false,\n        false\n    ];\n}\nexports.parse = parse;\nfunction parse(decl) {\n    let node = parser(decl.value);\n    let values = [];\n    let current = 0;\n    values[current] = [];\n    for (let i of node.nodes){\n        if (i.type === \"div\") {\n            current += 1;\n            values[current] = [];\n        } else if (i.type === \"word\") {\n            values[current].push(i.value);\n        }\n    }\n    return values;\n}\nexports.insertDecl = insertDecl;\nfunction insertDecl(decl, prop, value) {\n    if (value && !decl.parent.some((i)=>i.prop === `-ms-${prop}`)) {\n        decl.cloneBefore({\n            prop: `-ms-${prop}`,\n            value: value.toString()\n        });\n    }\n}\n// Track transforms\nexports.prefixTrackProp = prefixTrackProp;\nfunction prefixTrackProp({ prefix, prop }) {\n    return prefix + prop.replace(\"template-\", \"\");\n}\nfunction transformRepeat({ nodes }, { gap }) {\n    let { count, size } = nodes.reduce((result, node)=>{\n        if (node.type === \"div\" && node.value === \",\") {\n            result.key = \"size\";\n        } else {\n            result[result.key].push(parser.stringify(node));\n        }\n        return result;\n    }, {\n        count: [],\n        key: \"count\",\n        size: []\n    });\n    // insert gap values\n    if (gap) {\n        size = size.filter((i)=>i.trim());\n        let val = [];\n        for(let i = 1; i <= count; i++){\n            size.forEach((item, index)=>{\n                if (index > 0 || i > 1) {\n                    val.push(gap);\n                }\n                val.push(item);\n            });\n        }\n        return val.join(\" \");\n    }\n    return `(${size.join(\"\")})[${count.join(\"\")}]`;\n}\nexports.prefixTrackValue = prefixTrackValue;\nfunction prefixTrackValue({ gap, value }) {\n    let result = parser(value).nodes.reduce((nodes, node)=>{\n        if (node.type === \"function\" && node.value === \"repeat\") {\n            return nodes.concat({\n                type: \"word\",\n                value: transformRepeat(node, {\n                    gap\n                })\n            });\n        }\n        if (gap && node.type === \"space\") {\n            return nodes.concat({\n                type: \"space\",\n                value: \" \"\n            }, {\n                type: \"word\",\n                value: gap\n            }, node);\n        }\n        return nodes.concat(node);\n    }, []);\n    return parser.stringify(result);\n}\n// Parse grid-template-areas\nlet DOTS = /^\\.+$/;\nfunction track(start, end) {\n    return {\n        end,\n        span: end - start,\n        start\n    };\n}\nfunction getColumns(line) {\n    return line.trim().split(/\\s+/g);\n}\nexports.parseGridAreas = parseGridAreas;\nfunction parseGridAreas({ gap, rows }) {\n    return rows.reduce((areas, line, rowIndex)=>{\n        if (gap.row) rowIndex *= 2;\n        if (line.trim() === \"\") return areas;\n        getColumns(line).forEach((area, columnIndex)=>{\n            if (DOTS.test(area)) return;\n            if (gap.column) columnIndex *= 2;\n            if (typeof areas[area] === \"undefined\") {\n                areas[area] = {\n                    column: track(columnIndex + 1, columnIndex + 2),\n                    row: track(rowIndex + 1, rowIndex + 2)\n                };\n            } else {\n                let { column, row } = areas[area];\n                column.start = Math.min(column.start, columnIndex + 1);\n                column.end = Math.max(column.end, columnIndex + 2);\n                column.span = column.end - column.start;\n                row.start = Math.min(row.start, rowIndex + 1);\n                row.end = Math.max(row.end, rowIndex + 2);\n                row.span = row.end - row.start;\n            }\n        });\n        return areas;\n    }, {});\n}\n// Parse grid-template\nfunction testTrack(node) {\n    return node.type === \"word\" && /^\\[.+]$/.test(node.value);\n}\nfunction verifyRowSize(result) {\n    if (result.areas.length > result.rows.length) {\n        result.rows.push(\"auto\");\n    }\n    return result;\n}\nexports.parseTemplate = parseTemplate;\nfunction parseTemplate({ decl, gap }) {\n    let gridTemplate = parser(decl.value).nodes.reduce((result, node)=>{\n        let { type, value } = node;\n        if (testTrack(node) || type === \"space\") return result;\n        // area\n        if (type === \"string\") {\n            result = verifyRowSize(result);\n            result.areas.push(value);\n        }\n        // values and function\n        if (type === \"word\" || type === \"function\") {\n            result[result.key].push(parser.stringify(node));\n        }\n        // divider(/)\n        if (type === \"div\" && value === \"/\") {\n            result.key = \"columns\";\n            result = verifyRowSize(result);\n        }\n        return result;\n    }, {\n        areas: [],\n        columns: [],\n        key: \"rows\",\n        rows: []\n    });\n    return {\n        areas: parseGridAreas({\n            gap,\n            rows: gridTemplate.areas\n        }),\n        columns: prefixTrackValue({\n            gap: gap.column,\n            value: gridTemplate.columns.join(\" \")\n        }),\n        rows: prefixTrackValue({\n            gap: gap.row,\n            value: gridTemplate.rows.join(\" \")\n        })\n    };\n}\n// Insert parsed grid areas\n/**\n * Get an array of -ms- prefixed props and values\n * @param  {Object} [area] area object with column and row data\n * @param  {Boolean} [addRowSpan] should we add grid-column-row value?\n * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?\n * @return {Array<Object>}\n */ function getMSDecls(area, addRowSpan = false, addColumnSpan = false) {\n    let result = [\n        {\n            prop: \"-ms-grid-row\",\n            value: String(area.row.start)\n        }\n    ];\n    if (area.row.span > 1 || addRowSpan) {\n        result.push({\n            prop: \"-ms-grid-row-span\",\n            value: String(area.row.span)\n        });\n    }\n    result.push({\n        prop: \"-ms-grid-column\",\n        value: String(area.column.start)\n    });\n    if (area.column.span > 1 || addColumnSpan) {\n        result.push({\n            prop: \"-ms-grid-column-span\",\n            value: String(area.column.span)\n        });\n    }\n    return result;\n}\nfunction getParentMedia(parent) {\n    if (parent.type === \"atrule\" && parent.name === \"media\") {\n        return parent;\n    }\n    if (!parent.parent) {\n        return false;\n    }\n    return getParentMedia(parent.parent);\n}\n/**\n * change selectors for rules with duplicate grid-areas.\n * @param  {Array<Rule>} rules\n * @param  {Array<String>} templateSelectors\n * @return {Array<Rule>} rules with changed selectors\n */ function changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {\n    ruleSelectors = ruleSelectors.map((selector)=>{\n        let selectorBySpace = list.space(selector);\n        let selectorByComma = list.comma(selector);\n        if (selectorBySpace.length > selectorByComma.length) {\n            selector = selectorBySpace.slice(-1).join(\"\");\n        }\n        return selector;\n    });\n    return ruleSelectors.map((ruleSelector)=>{\n        let newSelector = templateSelectors.map((tplSelector, index)=>{\n            let space = index === 0 ? \"\" : \" \";\n            return `${space}${tplSelector} > ${ruleSelector}`;\n        });\n        return newSelector;\n    });\n}\n/**\n * check if selector of rules are equal\n * @param  {Rule} ruleA\n * @param  {Rule} ruleB\n * @return {Boolean}\n */ function selectorsEqual(ruleA, ruleB) {\n    return ruleA.selectors.some((sel)=>{\n        return ruleB.selectors.includes(sel);\n    });\n}\n/**\n * Parse data from all grid-template(-areas) declarations\n * @param  {Root} css css root\n * @return {Object} parsed data\n */ function parseGridTemplatesData(css) {\n    let parsed = [];\n    // we walk through every grid-template(-areas) declaration and store\n    // data with the same area names inside the item\n    css.walkDecls(/grid-template(-areas)?$/, (d)=>{\n        let rule = d.parent;\n        let media = getParentMedia(rule);\n        let gap = getGridGap(d);\n        let inheritedGap = inheritGridGap(d, gap);\n        let { areas } = parseTemplate({\n            decl: d,\n            gap: inheritedGap || gap\n        });\n        let areaNames = Object.keys(areas);\n        // skip node if it doesn't have areas\n        if (areaNames.length === 0) {\n            return true;\n        }\n        // check parsed array for item that include the same area names\n        // return index of that item\n        let index = parsed.reduce((acc, { allAreas }, idx)=>{\n            let hasAreas = allAreas && areaNames.some((area)=>allAreas.includes(area));\n            return hasAreas ? idx : acc;\n        }, null);\n        if (index !== null) {\n            // index is found, add the grid-template data to that item\n            let { allAreas, rules } = parsed[index];\n            // check if rule has no duplicate area names\n            let hasNoDuplicates = rules.some((r)=>{\n                return r.hasDuplicates === false && selectorsEqual(r, rule);\n            });\n            let duplicatesFound = false;\n            // check need to gather all duplicate area names\n            let duplicateAreaNames = rules.reduce((acc, r)=>{\n                if (!r.params && selectorsEqual(r, rule)) {\n                    duplicatesFound = true;\n                    return r.duplicateAreaNames;\n                }\n                if (!duplicatesFound) {\n                    areaNames.forEach((name)=>{\n                        if (r.areas[name]) {\n                            acc.push(name);\n                        }\n                    });\n                }\n                return uniq(acc);\n            }, []);\n            // update grid-row/column-span values for areas with duplicate\n            // area names. @see #1084 and #1146\n            rules.forEach((r)=>{\n                areaNames.forEach((name)=>{\n                    let area = r.areas[name];\n                    if (area && area.row.span !== areas[name].row.span) {\n                        areas[name].row.updateSpan = true;\n                    }\n                    if (area && area.column.span !== areas[name].column.span) {\n                        areas[name].column.updateSpan = true;\n                    }\n                });\n            });\n            parsed[index].allAreas = uniq([\n                ...allAreas,\n                ...areaNames\n            ]);\n            parsed[index].rules.push({\n                areas,\n                duplicateAreaNames,\n                hasDuplicates: !hasNoDuplicates,\n                node: rule,\n                params: media.params,\n                selectors: rule.selectors\n            });\n        } else {\n            // index is NOT found, push the new item to the parsed array\n            parsed.push({\n                allAreas: areaNames,\n                areasCount: 0,\n                rules: [\n                    {\n                        areas,\n                        duplicateAreaNames: [],\n                        duplicateRules: [],\n                        hasDuplicates: false,\n                        node: rule,\n                        params: media.params,\n                        selectors: rule.selectors\n                    }\n                ]\n            });\n        }\n        return undefined;\n    });\n    return parsed;\n}\n/**\n * insert prefixed grid-area declarations\n * @param  {Root}  css css root\n * @param  {Function} isDisabled check if the rule is disabled\n * @return {void}\n */ exports.insertAreas = insertAreas;\nfunction insertAreas(css, isDisabled) {\n    // parse grid-template declarations\n    let gridTemplatesData = parseGridTemplatesData(css);\n    // return undefined if no declarations found\n    if (gridTemplatesData.length === 0) {\n        return undefined;\n    }\n    // we need to store the rules that we will insert later\n    let rulesToInsert = {};\n    css.walkDecls(\"grid-area\", (gridArea)=>{\n        let gridAreaRule = gridArea.parent;\n        let hasPrefixedRow = gridAreaRule.first.prop === \"-ms-grid-row\";\n        let gridAreaMedia = getParentMedia(gridAreaRule);\n        if (isDisabled(gridArea)) {\n            return undefined;\n        }\n        let gridAreaRuleIndex = css.index(gridAreaMedia || gridAreaRule);\n        let value = gridArea.value;\n        // found the data that matches grid-area identifier\n        let data = gridTemplatesData.filter((d)=>d.allAreas.includes(value))[0];\n        if (!data) {\n            return true;\n        }\n        let lastArea = data.allAreas[data.allAreas.length - 1];\n        let selectorBySpace = list.space(gridAreaRule.selector);\n        let selectorByComma = list.comma(gridAreaRule.selector);\n        let selectorIsComplex = selectorBySpace.length > 1 && selectorBySpace.length > selectorByComma.length;\n        // prevent doubling of prefixes\n        if (hasPrefixedRow) {\n            return false;\n        }\n        // create the empty object with the key as the last area name\n        // e.g if we have templates with \"a b c\" values, \"c\" will be the last area\n        if (!rulesToInsert[lastArea]) {\n            rulesToInsert[lastArea] = {};\n        }\n        let lastRuleIsSet = false;\n        // walk through every grid-template rule data\n        for (let rule of data.rules){\n            let area = rule.areas[value];\n            let hasDuplicateName = rule.duplicateAreaNames.includes(value);\n            // if we can't find the area name, update lastRule and continue\n            if (!area) {\n                let lastRule = rulesToInsert[lastArea].lastRule;\n                let lastRuleIndex;\n                if (lastRule) {\n                    lastRuleIndex = css.index(lastRule);\n                } else {\n                    /* c8 ignore next 2 */ lastRuleIndex = -1;\n                }\n                if (gridAreaRuleIndex > lastRuleIndex) {\n                    rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;\n                }\n                continue;\n            }\n            // for grid-templates inside media rule we need to create empty\n            // array to push prefixed grid-area rules later\n            if (rule.params && !rulesToInsert[lastArea][rule.params]) {\n                rulesToInsert[lastArea][rule.params] = [];\n            }\n            if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {\n                // grid-template has no duplicates and not inside media rule\n                getMSDecls(area, false, false).reverse().forEach((i)=>gridAreaRule.prepend(Object.assign(i, {\n                        raws: {\n                            between: gridArea.raws.between\n                        }\n                    })));\n                rulesToInsert[lastArea].lastRule = gridAreaRule;\n                lastRuleIsSet = true;\n            } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {\n                // grid-template has duplicates and not inside media rule\n                let cloned = gridAreaRule.clone();\n                cloned.removeAll();\n                getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach((i)=>cloned.prepend(Object.assign(i, {\n                        raws: {\n                            between: gridArea.raws.between\n                        }\n                    })));\n                cloned.selectors = changeDuplicateAreaSelectors(cloned.selectors, rule.selectors);\n                if (rulesToInsert[lastArea].lastRule) {\n                    rulesToInsert[lastArea].lastRule.after(cloned);\n                }\n                rulesToInsert[lastArea].lastRule = cloned;\n                lastRuleIsSet = true;\n            } else if (rule.hasDuplicates && !rule.params && selectorIsComplex && gridAreaRule.selector.includes(rule.selectors[0])) {\n                // grid-template has duplicates and not inside media rule\n                // and the selector is complex\n                gridAreaRule.walkDecls(/-ms-grid-(row|column)/, (d)=>d.remove());\n                getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach((i)=>gridAreaRule.prepend(Object.assign(i, {\n                        raws: {\n                            between: gridArea.raws.between\n                        }\n                    })));\n            } else if (rule.params) {\n                // grid-template is inside media rule\n                // if we're inside media rule, we need to store prefixed rules\n                // inside rulesToInsert object to be able to preserve the order of media\n                // rules and merge them easily\n                let cloned = gridAreaRule.clone();\n                cloned.removeAll();\n                getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach((i)=>cloned.prepend(Object.assign(i, {\n                        raws: {\n                            between: gridArea.raws.between\n                        }\n                    })));\n                if (rule.hasDuplicates && hasDuplicateName) {\n                    cloned.selectors = changeDuplicateAreaSelectors(cloned.selectors, rule.selectors);\n                }\n                cloned.raws = rule.node.raws;\n                if (css.index(rule.node.parent) > gridAreaRuleIndex) {\n                    // append the prefixed rules right inside media rule\n                    // with grid-template\n                    rule.node.parent.append(cloned);\n                } else {\n                    // store the rule to insert later\n                    rulesToInsert[lastArea][rule.params].push(cloned);\n                }\n                // set new rule as last rule ONLY if we didn't set lastRule for\n                // this grid-area before\n                if (!lastRuleIsSet) {\n                    rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;\n                }\n            }\n        }\n        return undefined;\n    });\n    // append stored rules inside the media rules\n    Object.keys(rulesToInsert).forEach((area)=>{\n        let data = rulesToInsert[area];\n        let lastRule = data.lastRule;\n        Object.keys(data).reverse().filter((p)=>p !== \"lastRule\").forEach((params)=>{\n            if (data[params].length > 0 && lastRule) {\n                lastRule.after({\n                    name: \"media\",\n                    params\n                });\n                lastRule.next().append(data[params]);\n            }\n        });\n    });\n    return undefined;\n}\n/**\n * Warn user if grid area identifiers are not found\n * @param  {Object} areas\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */ exports.warnMissedAreas = warnMissedAreas;\nfunction warnMissedAreas(areas, decl, result) {\n    let missed = Object.keys(areas);\n    decl.root().walkDecls(\"grid-area\", (gridArea)=>{\n        missed = missed.filter((e)=>e !== gridArea.value);\n    });\n    if (missed.length > 0) {\n        decl.warn(result, \"Can not find grid areas: \" + missed.join(\", \"));\n    }\n    return undefined;\n}\n/**\n * compare selectors with grid-area rule and grid-template rule\n * show warning if grid-template selector is not found\n * (this function used for grid-area rule)\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */ exports.warnTemplateSelectorNotFound = warnTemplateSelectorNotFound;\nfunction warnTemplateSelectorNotFound(decl, result) {\n    let rule = decl.parent;\n    let root = decl.root();\n    let duplicatesFound = false;\n    // slice selector array. Remove the last part (for comparison)\n    let slicedSelectorArr = list.space(rule.selector).filter((str)=>str !== \">\").slice(0, -1);\n    // we need to compare only if selector is complex.\n    // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex\n    if (slicedSelectorArr.length > 0) {\n        let gridTemplateFound = false;\n        let foundAreaSelector = null;\n        root.walkDecls(/grid-template(-areas)?$/, (d)=>{\n            let parent = d.parent;\n            let templateSelectors = parent.selectors;\n            let { areas } = parseTemplate({\n                decl: d,\n                gap: getGridGap(d)\n            });\n            let hasArea = areas[decl.value];\n            // find the the matching selectors\n            for (let tplSelector of templateSelectors){\n                if (gridTemplateFound) {\n                    break;\n                }\n                let tplSelectorArr = list.space(tplSelector).filter((str)=>str !== \">\");\n                gridTemplateFound = tplSelectorArr.every((item, idx)=>item === slicedSelectorArr[idx]);\n            }\n            if (gridTemplateFound || !hasArea) {\n                return true;\n            }\n            if (!foundAreaSelector) {\n                foundAreaSelector = parent.selector;\n            }\n            // if we found the duplicate area with different selector\n            if (foundAreaSelector && foundAreaSelector !== parent.selector) {\n                duplicatesFound = true;\n            }\n            return undefined;\n        });\n        // warn user if we didn't find template\n        if (!gridTemplateFound && duplicatesFound) {\n            decl.warn(result, \"Autoprefixer cannot find a grid-template \" + `containing the duplicate grid-area \"${decl.value}\" ` + `with full selector matching: ${slicedSelectorArr.join(\" \")}`);\n        }\n    }\n}\n/**\n * warn user if both grid-area and grid-(row|column)\n * declarations are present in the same rule\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */ exports.warnIfGridRowColumnExists = warnIfGridRowColumnExists;\nfunction warnIfGridRowColumnExists(decl, result) {\n    let rule = decl.parent;\n    let decls = [];\n    rule.walkDecls(/^grid-(row|column)/, (d)=>{\n        if (!d.prop.endsWith(\"-end\") && !d.value.startsWith(\"span\") && !d.prop.endsWith(\"-gap\")) {\n            decls.push(d);\n        }\n    });\n    if (decls.length > 0) {\n        decls.forEach((d)=>{\n            d.warn(result, \"You already have a grid-area declaration present in the rule. \" + `You should use either grid-area or ${d.prop}, not both`);\n        });\n    }\n    return undefined;\n}\n// Gap utils\nexports.getGridGap = getGridGap;\nfunction getGridGap(decl) {\n    let gap = {};\n    // try to find gap\n    let testGap = /^(grid-)?((row|column)-)?gap$/;\n    decl.parent.walkDecls(testGap, ({ prop, value })=>{\n        if (/^(grid-)?gap$/.test(prop)) {\n            let [row, , column] = parser(value).nodes;\n            gap.row = row && parser.stringify(row);\n            gap.column = column ? parser.stringify(column) : gap.row;\n        }\n        if (/^(grid-)?row-gap$/.test(prop)) gap.row = value;\n        if (/^(grid-)?column-gap$/.test(prop)) gap.column = value;\n    });\n    return gap;\n}\n/**\n * parse media parameters (for example 'min-width: 500px')\n * @param  {String} params parameter to parse\n * @return {}\n */ function parseMediaParams(params) {\n    if (!params) {\n        return [];\n    }\n    let parsed = parser(params);\n    let prop;\n    let value;\n    parsed.walk((node)=>{\n        if (node.type === \"word\" && /min|max/g.test(node.value)) {\n            prop = node.value;\n        } else if (node.value.includes(\"px\")) {\n            value = parseInt(node.value.replace(/\\D/g, \"\"));\n        }\n    });\n    return [\n        prop,\n        value\n    ];\n}\n/**\n * Compare the selectors and decide if we\n * need to inherit gap from compared selector or not.\n * @type {String} selA\n * @type {String} selB\n * @return {Boolean}\n */ function shouldInheritGap(selA, selB) {\n    let result;\n    // get arrays of selector split in 3-deep array\n    let splitSelectorArrA = splitSelector(selA);\n    let splitSelectorArrB = splitSelector(selB);\n    if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {\n        // abort if selectorA has lower descendant specificity then selectorB\n        // (e.g '.grid' and '.hello .world .grid')\n        return false;\n    } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {\n        // if selectorA has higher descendant specificity then selectorB\n        // (e.g '.foo .bar .grid' and '.grid')\n        let idx = splitSelectorArrA[0].reduce((res, [item], index)=>{\n            let firstSelectorPart = splitSelectorArrB[0][0][0];\n            if (item === firstSelectorPart) {\n                return index;\n            }\n            return false;\n        }, false);\n        if (idx) {\n            result = splitSelectorArrB[0].every((arr, index)=>{\n                return arr.every((part, innerIndex)=>// because selectorA has more space elements, we need to slice\n                    // selectorA array by 'idx' number to compare them\n                    splitSelectorArrA[0].slice(idx)[index][innerIndex] === part);\n            });\n        }\n    } else {\n        // if selectorA has the same descendant specificity as selectorB\n        // this condition covers cases such as: '.grid.foo.bar' and '.grid'\n        result = splitSelectorArrB.some((byCommaArr)=>{\n            return byCommaArr.every((bySpaceArr, index)=>{\n                return bySpaceArr.every((part, innerIndex)=>splitSelectorArrA[0][index][innerIndex] === part);\n            });\n        });\n    }\n    return result;\n}\n/**\n * inherit grid gap values from the closest rule above\n * with the same selector\n * @param  {Declaration} decl\n * @param  {Object} gap gap values\n * @return {Object | Boolean} return gap values or false (if not found)\n */ exports.inheritGridGap = inheritGridGap;\nfunction inheritGridGap(decl, gap) {\n    let rule = decl.parent;\n    let mediaRule = getParentMedia(rule);\n    let root = rule.root();\n    // get an array of selector split in 3-deep array\n    let splitSelectorArr = splitSelector(rule.selector);\n    // abort if the rule already has gaps\n    if (Object.keys(gap).length > 0) {\n        return false;\n    }\n    // e.g ['min-width']\n    let [prop] = parseMediaParams(mediaRule.params);\n    let lastBySpace = splitSelectorArr[0];\n    // get escaped value from the selector\n    // if we have '.grid-2.foo.bar' selector, will be '\\.grid\\-2'\n    let escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0]);\n    let regexp = new RegExp(`(${escaped}$)|(${escaped}[,.])`);\n    // find the closest rule with the same selector\n    let closestRuleGap;\n    root.walkRules(regexp, (r)=>{\n        let gridGap;\n        // abort if are checking the same rule\n        if (rule.toString() === r.toString()) {\n            return false;\n        }\n        // find grid-gap values\n        r.walkDecls(\"grid-gap\", (d)=>gridGap = getGridGap(d));\n        // skip rule without gaps\n        if (!gridGap || Object.keys(gridGap).length === 0) {\n            return true;\n        }\n        // skip rules that should not be inherited from\n        if (!shouldInheritGap(rule.selector, r.selector)) {\n            return true;\n        }\n        let media = getParentMedia(r);\n        if (media) {\n            // if we are inside media, we need to check that media props match\n            // e.g ('min-width' === 'min-width')\n            let propToCompare = parseMediaParams(media.params)[0];\n            if (propToCompare === prop) {\n                closestRuleGap = gridGap;\n                return true;\n            }\n        } else {\n            closestRuleGap = gridGap;\n            return true;\n        }\n        return undefined;\n    });\n    // if we find the closest gap object\n    if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {\n        return closestRuleGap;\n    }\n    return false;\n}\nexports.warnGridGap = warnGridGap;\nfunction warnGridGap({ decl, gap, hasColumns, result }) {\n    let hasBothGaps = gap.row && gap.column;\n    if (!hasColumns && (hasBothGaps || gap.column && !gap.row)) {\n        delete gap.column;\n        decl.warn(result, \"Can not implement grid-gap without grid-template-columns\");\n    }\n}\n/**\n * normalize the grid-template-rows/columns values\n * @param  {String} str grid-template-rows/columns value\n * @return {Array} normalized array with values\n * @example\n * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')\n * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']\n */ function normalizeRowColumn(str) {\n    let normalized = parser(str).nodes.reduce((result, node)=>{\n        if (node.type === \"function\" && node.value === \"repeat\") {\n            let key = \"count\";\n            let [count, value] = node.nodes.reduce((acc, n)=>{\n                if (n.type === \"word\" && key === \"count\") {\n                    acc[0] = Math.abs(parseInt(n.value));\n                    return acc;\n                }\n                if (n.type === \"div\" && n.value === \",\") {\n                    key = \"value\";\n                    return acc;\n                }\n                if (key === \"value\") {\n                    acc[1] += parser.stringify(n);\n                }\n                return acc;\n            }, [\n                0,\n                \"\"\n            ]);\n            if (count) {\n                for(let i = 0; i < count; i++){\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        if (node.type === \"space\") {\n            return result;\n        }\n        return result.concat(parser.stringify(node));\n    }, []);\n    return normalized;\n}\nexports.autoplaceGridItems = autoplaceGridItems;\n/**\n * Autoplace grid items\n * @param {Declaration} decl\n * @param {Result} result\n * @param {Object} gap gap values\n * @param {String} autoflowValue grid-auto-flow value\n * @return {void}\n * @see https://github.com/postcss/autoprefixer/issues/1148\n */ function autoplaceGridItems(decl, result, gap, autoflowValue = \"row\") {\n    let { parent } = decl;\n    let rowDecl = parent.nodes.find((i)=>i.prop === \"grid-template-rows\");\n    let rows = normalizeRowColumn(rowDecl.value);\n    let columns = normalizeRowColumn(decl.value);\n    // Build array of area names with dummy values. If we have 3 columns and\n    // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']\n    let filledRows = rows.map((_, rowIndex)=>{\n        return Array.from({\n            length: columns.length\n        }, (v, k)=>k + rowIndex * columns.length + 1).join(\" \");\n    });\n    let areas = parseGridAreas({\n        gap,\n        rows: filledRows\n    });\n    let keys = Object.keys(areas);\n    let items = keys.map((i)=>areas[i]);\n    // Change the order of cells if grid-auto-flow value is 'column'\n    if (autoflowValue.includes(\"column\")) {\n        items = items.sort((a, b)=>a.column.start - b.column.start);\n    }\n    // Insert new rules\n    items.reverse().forEach((item, index)=>{\n        let { column, row } = item;\n        let nodeSelector = parent.selectors.map((sel)=>sel + ` > *:nth-child(${keys.length - index})`).join(\", \");\n        // create new rule\n        let node = parent.clone().removeAll();\n        // change rule selector\n        node.selector = nodeSelector;\n        // insert prefixed row/column values\n        node.append({\n            prop: \"-ms-grid-row\",\n            value: row.start\n        });\n        node.append({\n            prop: \"-ms-grid-column\",\n            value: column.start\n        });\n        // insert rule\n        parent.after(node);\n    });\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/image-rendering.js":
/*!****************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/image-rendering.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass ImageRendering extends Declaration {\n    /**\n   * Add hack only for crisp-edges\n   */ check(decl) {\n        return decl.value === \"pixelated\";\n    }\n    /**\n   * Return property name by spec\n   */ normalize() {\n        return \"image-rendering\";\n    }\n    /**\n   * Change property name for IE\n   */ prefixed(prop, prefix) {\n        if (prefix === \"-ms-\") {\n            return \"-ms-interpolation-mode\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Warn on old value\n   */ process(node, result) {\n        return super.process(node, result);\n    }\n    /**\n   * Change property and value for IE\n   */ set(decl, prefix) {\n        if (prefix !== \"-ms-\") return super.set(decl, prefix);\n        decl.prop = \"-ms-interpolation-mode\";\n        decl.value = \"nearest-neighbor\";\n        return decl;\n    }\n}\nImageRendering.names = [\n    \"image-rendering\",\n    \"interpolation-mode\"\n];\nmodule.exports = ImageRendering;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9pbWFnZS1yZW5kZXJpbmcuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLHVCQUF1QkY7SUFDM0I7O0dBRUMsR0FDREcsTUFBTUMsSUFBSSxFQUFFO1FBQ1YsT0FBT0EsS0FBS0MsS0FBSyxLQUFLO0lBQ3hCO0lBRUE7O0dBRUMsR0FDREMsWUFBWTtRQUNWLE9BQU87SUFDVDtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLElBQUksRUFBRUMsTUFBTSxFQUFFO1FBQ3JCLElBQUlBLFdBQVcsUUFBUTtZQUNyQixPQUFPO1FBQ1Q7UUFDQSxPQUFPLEtBQUssQ0FBQ0YsU0FBU0MsTUFBTUM7SUFDOUI7SUFFQTs7R0FFQyxHQUNEQyxRQUFRQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNwQixPQUFPLEtBQUssQ0FBQ0YsUUFBUUMsTUFBTUM7SUFDN0I7SUFFQTs7R0FFQyxHQUNEQyxJQUFJVCxJQUFJLEVBQUVLLE1BQU0sRUFBRTtRQUNoQixJQUFJQSxXQUFXLFFBQVEsT0FBTyxLQUFLLENBQUNJLElBQUlULE1BQU1LO1FBQzlDTCxLQUFLSSxJQUFJLEdBQUc7UUFDWkosS0FBS0MsS0FBSyxHQUFHO1FBQ2IsT0FBT0Q7SUFDVDtBQUNGO0FBRUFGLGVBQWVZLEtBQUssR0FBRztJQUFDO0lBQW1CO0NBQXFCO0FBRWhFQyxPQUFPQyxPQUFPLEdBQUdkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvaW1hZ2UtcmVuZGVyaW5nLmpzP2ViMDIiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBJbWFnZVJlbmRlcmluZyBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIEFkZCBoYWNrIG9ubHkgZm9yIGNyaXNwLWVkZ2VzXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgcmV0dXJuIGRlY2wudmFsdWUgPT09ICdwaXhlbGF0ZWQnXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnaW1hZ2UtcmVuZGVyaW5nJ1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciBJRVxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICByZXR1cm4gJy1tcy1pbnRlcnBvbGF0aW9uLW1vZGUnXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogV2FybiBvbiBvbGQgdmFsdWVcbiAgICovXG4gIHByb2Nlc3Mobm9kZSwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHN1cGVyLnByb2Nlc3Mobm9kZSwgcmVzdWx0KVxuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBhbmQgdmFsdWUgZm9yIElFXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICBkZWNsLnByb3AgPSAnLW1zLWludGVycG9sYXRpb24tbW9kZSdcbiAgICBkZWNsLnZhbHVlID0gJ25lYXJlc3QtbmVpZ2hib3InXG4gICAgcmV0dXJuIGRlY2xcbiAgfVxufVxuXG5JbWFnZVJlbmRlcmluZy5uYW1lcyA9IFsnaW1hZ2UtcmVuZGVyaW5nJywgJ2ludGVycG9sYXRpb24tbW9kZSddXG5cbm1vZHVsZS5leHBvcnRzID0gSW1hZ2VSZW5kZXJpbmdcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJJbWFnZVJlbmRlcmluZyIsImNoZWNrIiwiZGVjbCIsInZhbHVlIiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4IiwicHJvY2VzcyIsIm5vZGUiLCJyZXN1bHQiLCJzZXQiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/image-rendering.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/image-set.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/image-set.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nclass ImageSet extends Value {\n    /**\n   * Use non-standard name for WebKit and Firefox\n   */ replace(string, prefix) {\n        let fixed = super.replace(string, prefix);\n        if (prefix === \"-webkit-\") {\n            fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, \"url($1)$2\");\n        }\n        return fixed;\n    }\n}\nImageSet.names = [\n    \"image-set\"\n];\nmodule.exports = ImageSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9pbWFnZS1zZXQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1DLGlCQUFpQkY7SUFDckI7O0dBRUMsR0FDREcsUUFBUUMsTUFBTSxFQUFFQyxNQUFNLEVBQUU7UUFDdEIsSUFBSUMsUUFBUSxLQUFLLENBQUNILFFBQVFDLFFBQVFDO1FBQ2xDLElBQUlBLFdBQVcsWUFBWTtZQUN6QkMsUUFBUUEsTUFBTUgsT0FBTyxDQUFDLGlDQUFpQztRQUN6RDtRQUNBLE9BQU9HO0lBQ1Q7QUFDRjtBQUVBSixTQUFTSyxLQUFLLEdBQUc7SUFBQztDQUFZO0FBRTlCQyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvaW1hZ2Utc2V0LmpzP2ZiM2QiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxuXG5jbGFzcyBJbWFnZVNldCBleHRlbmRzIFZhbHVlIHtcbiAgLyoqXG4gICAqIFVzZSBub24tc3RhbmRhcmQgbmFtZSBmb3IgV2ViS2l0IGFuZCBGaXJlZm94XG4gICAqL1xuICByZXBsYWNlKHN0cmluZywgcHJlZml4KSB7XG4gICAgbGV0IGZpeGVkID0gc3VwZXIucmVwbGFjZShzdHJpbmcsIHByZWZpeClcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICBmaXhlZCA9IGZpeGVkLnJlcGxhY2UoLyhcIlteXCJdK1wifCdbXiddKycpKFxccytcXGQrXFx3KS9naSwgJ3VybCgkMSkkMicpXG4gICAgfVxuICAgIHJldHVybiBmaXhlZFxuICB9XG59XG5cbkltYWdlU2V0Lm5hbWVzID0gWydpbWFnZS1zZXQnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEltYWdlU2V0XG4iXSwibmFtZXMiOlsiVmFsdWUiLCJyZXF1aXJlIiwiSW1hZ2VTZXQiLCJyZXBsYWNlIiwic3RyaW5nIiwicHJlZml4IiwiZml4ZWQiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/image-set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/inline-logical.js":
/*!***************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/inline-logical.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass InlineLogical extends Declaration {\n    /**\n   * Return property name by spec\n   */ normalize(prop) {\n        return prop.replace(/(margin|padding|border)-(start|end)/, \"$1-inline-$2\");\n    }\n    /**\n   * Use old syntax for -moz- and -webkit-\n   */ prefixed(prop, prefix) {\n        return prefix + prop.replace(\"-inline\", \"\");\n    }\n}\nInlineLogical.names = [\n    \"border-inline-start\",\n    \"border-inline-end\",\n    \"margin-inline-start\",\n    \"margin-inline-end\",\n    \"padding-inline-start\",\n    \"padding-inline-end\",\n    \"border-start\",\n    \"border-end\",\n    \"margin-start\",\n    \"margin-end\",\n    \"padding-start\",\n    \"padding-end\"\n];\nmodule.exports = InlineLogical;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9pbmxpbmUtbG9naWNhbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsc0JBQXNCRjtJQUMxQjs7R0FFQyxHQUNERyxVQUFVQyxJQUFJLEVBQUU7UUFDZCxPQUFPQSxLQUFLQyxPQUFPLENBQUMsdUNBQXVDO0lBQzdEO0lBRUE7O0dBRUMsR0FDREMsU0FBU0YsSUFBSSxFQUFFRyxNQUFNLEVBQUU7UUFDckIsT0FBT0EsU0FBU0gsS0FBS0MsT0FBTyxDQUFDLFdBQVc7SUFDMUM7QUFDRjtBQUVBSCxjQUFjTSxLQUFLLEdBQUc7SUFDcEI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFREMsT0FBT0MsT0FBTyxHQUFHUiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2lubGluZS1sb2dpY2FsLmpzP2Y4NjEiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBJbmxpbmVMb2dpY2FsIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcC5yZXBsYWNlKC8obWFyZ2lufHBhZGRpbmd8Ym9yZGVyKS0oc3RhcnR8ZW5kKS8sICckMS1pbmxpbmUtJDInKVxuICB9XG5cbiAgLyoqXG4gICAqIFVzZSBvbGQgc3ludGF4IGZvciAtbW96LSBhbmQgLXdlYmtpdC1cbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIHJldHVybiBwcmVmaXggKyBwcm9wLnJlcGxhY2UoJy1pbmxpbmUnLCAnJylcbiAgfVxufVxuXG5JbmxpbmVMb2dpY2FsLm5hbWVzID0gW1xuICAnYm9yZGVyLWlubGluZS1zdGFydCcsXG4gICdib3JkZXItaW5saW5lLWVuZCcsXG4gICdtYXJnaW4taW5saW5lLXN0YXJ0JyxcbiAgJ21hcmdpbi1pbmxpbmUtZW5kJyxcbiAgJ3BhZGRpbmctaW5saW5lLXN0YXJ0JyxcbiAgJ3BhZGRpbmctaW5saW5lLWVuZCcsXG4gICdib3JkZXItc3RhcnQnLFxuICAnYm9yZGVyLWVuZCcsXG4gICdtYXJnaW4tc3RhcnQnLFxuICAnbWFyZ2luLWVuZCcsXG4gICdwYWRkaW5nLXN0YXJ0JyxcbiAgJ3BhZGRpbmctZW5kJ1xuXVxuXG5tb2R1bGUuZXhwb3J0cyA9IElubGluZUxvZ2ljYWxcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJJbmxpbmVMb2dpY2FsIiwibm9ybWFsaXplIiwicHJvcCIsInJlcGxhY2UiLCJwcmVmaXhlZCIsInByZWZpeCIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/inline-logical.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/intrinsic.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/intrinsic.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet OldValue = __webpack_require__(/*! ../old-value */ \"(ssr)/./node_modules/autoprefixer/lib/old-value.js\");\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nfunction regexp(name) {\n    return new RegExp(`(^|[\\\\s,(])(${name}($|[\\\\s),]))`, \"gi\");\n}\nclass Intrinsic extends Value {\n    add(decl, prefix) {\n        if (decl.prop.includes(\"grid\") && prefix !== \"-webkit-\") {\n            return undefined;\n        }\n        return super.add(decl, prefix);\n    }\n    isStretch() {\n        return this.name === \"stretch\" || this.name === \"fill\" || this.name === \"fill-available\";\n    }\n    old(prefix) {\n        let prefixed = prefix + this.name;\n        if (this.isStretch()) {\n            if (prefix === \"-moz-\") {\n                prefixed = \"-moz-available\";\n            } else if (prefix === \"-webkit-\") {\n                prefixed = \"-webkit-fill-available\";\n            }\n        }\n        return new OldValue(this.name, prefixed, prefixed, regexp(prefixed));\n    }\n    regexp() {\n        if (!this.regexpCache) this.regexpCache = regexp(this.name);\n        return this.regexpCache;\n    }\n    replace(string, prefix) {\n        if (prefix === \"-moz-\" && this.isStretch()) {\n            return string.replace(this.regexp(), \"$1-moz-available$3\");\n        }\n        if (prefix === \"-webkit-\" && this.isStretch()) {\n            return string.replace(this.regexp(), \"$1-webkit-fill-available$3\");\n        }\n        return super.replace(string, prefix);\n    }\n}\nIntrinsic.names = [\n    \"max-content\",\n    \"min-content\",\n    \"fit-content\",\n    \"fill\",\n    \"fill-available\",\n    \"stretch\"\n];\nmodule.exports = Intrinsic;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9pbnRyaW5zaWMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlDLFFBQVFELG1CQUFPQSxDQUFDO0FBRXBCLFNBQVNFLE9BQU9DLElBQUk7SUFDbEIsT0FBTyxJQUFJQyxPQUFPLENBQUMsWUFBWSxFQUFFRCxLQUFLLFlBQVksQ0FBQyxFQUFFO0FBQ3ZEO0FBRUEsTUFBTUUsa0JBQWtCSjtJQUN0QkssSUFBSUMsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDaEIsSUFBSUQsS0FBS0UsSUFBSSxDQUFDQyxRQUFRLENBQUMsV0FBV0YsV0FBVyxZQUFZO1lBQ3ZELE9BQU9HO1FBQ1Q7UUFDQSxPQUFPLEtBQUssQ0FBQ0wsSUFBSUMsTUFBTUM7SUFDekI7SUFFQUksWUFBWTtRQUNWLE9BQ0UsSUFBSSxDQUFDVCxJQUFJLEtBQUssYUFDZCxJQUFJLENBQUNBLElBQUksS0FBSyxVQUNkLElBQUksQ0FBQ0EsSUFBSSxLQUFLO0lBRWxCO0lBRUFVLElBQUlMLE1BQU0sRUFBRTtRQUNWLElBQUlNLFdBQVdOLFNBQVMsSUFBSSxDQUFDTCxJQUFJO1FBQ2pDLElBQUksSUFBSSxDQUFDUyxTQUFTLElBQUk7WUFDcEIsSUFBSUosV0FBVyxTQUFTO2dCQUN0Qk0sV0FBVztZQUNiLE9BQU8sSUFBSU4sV0FBVyxZQUFZO2dCQUNoQ00sV0FBVztZQUNiO1FBQ0Y7UUFDQSxPQUFPLElBQUlmLFNBQVMsSUFBSSxDQUFDSSxJQUFJLEVBQUVXLFVBQVVBLFVBQVVaLE9BQU9ZO0lBQzVEO0lBRUFaLFNBQVM7UUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDYSxXQUFXLEVBQUUsSUFBSSxDQUFDQSxXQUFXLEdBQUdiLE9BQU8sSUFBSSxDQUFDQyxJQUFJO1FBQzFELE9BQU8sSUFBSSxDQUFDWSxXQUFXO0lBQ3pCO0lBRUFDLFFBQVFDLE1BQU0sRUFBRVQsTUFBTSxFQUFFO1FBQ3RCLElBQUlBLFdBQVcsV0FBVyxJQUFJLENBQUNJLFNBQVMsSUFBSTtZQUMxQyxPQUFPSyxPQUFPRCxPQUFPLENBQUMsSUFBSSxDQUFDZCxNQUFNLElBQUk7UUFDdkM7UUFDQSxJQUFJTSxXQUFXLGNBQWMsSUFBSSxDQUFDSSxTQUFTLElBQUk7WUFDN0MsT0FBT0ssT0FBT0QsT0FBTyxDQUFDLElBQUksQ0FBQ2QsTUFBTSxJQUFJO1FBQ3ZDO1FBQ0EsT0FBTyxLQUFLLENBQUNjLFFBQVFDLFFBQVFUO0lBQy9CO0FBQ0Y7QUFFQUgsVUFBVWEsS0FBSyxHQUFHO0lBQ2hCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNEO0FBRURDLE9BQU9DLE9BQU8sR0FBR2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9pbnRyaW5zaWMuanM/NGU1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgT2xkVmFsdWUgPSByZXF1aXJlKCcuLi9vbGQtdmFsdWUnKVxubGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxuXG5mdW5jdGlvbiByZWdleHAobmFtZSkge1xuICByZXR1cm4gbmV3IFJlZ0V4cChgKF58W1xcXFxzLChdKSgke25hbWV9KCR8W1xcXFxzKSxdKSlgLCAnZ2knKVxufVxuXG5jbGFzcyBJbnRyaW5zaWMgZXh0ZW5kcyBWYWx1ZSB7XG4gIGFkZChkZWNsLCBwcmVmaXgpIHtcbiAgICBpZiAoZGVjbC5wcm9wLmluY2x1ZGVzKCdncmlkJykgJiYgcHJlZml4ICE9PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5hZGQoZGVjbCwgcHJlZml4KVxuICB9XG5cbiAgaXNTdHJldGNoKCkge1xuICAgIHJldHVybiAoXG4gICAgICB0aGlzLm5hbWUgPT09ICdzdHJldGNoJyB8fFxuICAgICAgdGhpcy5uYW1lID09PSAnZmlsbCcgfHxcbiAgICAgIHRoaXMubmFtZSA9PT0gJ2ZpbGwtYXZhaWxhYmxlJ1xuICAgIClcbiAgfVxuXG4gIG9sZChwcmVmaXgpIHtcbiAgICBsZXQgcHJlZml4ZWQgPSBwcmVmaXggKyB0aGlzLm5hbWVcbiAgICBpZiAodGhpcy5pc1N0cmV0Y2goKSkge1xuICAgICAgaWYgKHByZWZpeCA9PT0gJy1tb3otJykge1xuICAgICAgICBwcmVmaXhlZCA9ICctbW96LWF2YWlsYWJsZSdcbiAgICAgIH0gZWxzZSBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICAgIHByZWZpeGVkID0gJy13ZWJraXQtZmlsbC1hdmFpbGFibGUnXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgT2xkVmFsdWUodGhpcy5uYW1lLCBwcmVmaXhlZCwgcHJlZml4ZWQsIHJlZ2V4cChwcmVmaXhlZCkpXG4gIH1cblxuICByZWdleHAoKSB7XG4gICAgaWYgKCF0aGlzLnJlZ2V4cENhY2hlKSB0aGlzLnJlZ2V4cENhY2hlID0gcmVnZXhwKHRoaXMubmFtZSlcbiAgICByZXR1cm4gdGhpcy5yZWdleHBDYWNoZVxuICB9XG5cbiAgcmVwbGFjZShzdHJpbmcsIHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctbW96LScgJiYgdGhpcy5pc1N0cmV0Y2goKSkge1xuICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHRoaXMucmVnZXhwKCksICckMS1tb3otYXZhaWxhYmxlJDMnKVxuICAgIH1cbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nICYmIHRoaXMuaXNTdHJldGNoKCkpIHtcbiAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSh0aGlzLnJlZ2V4cCgpLCAnJDEtd2Via2l0LWZpbGwtYXZhaWxhYmxlJDMnKVxuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucmVwbGFjZShzdHJpbmcsIHByZWZpeClcbiAgfVxufVxuXG5JbnRyaW5zaWMubmFtZXMgPSBbXG4gICdtYXgtY29udGVudCcsXG4gICdtaW4tY29udGVudCcsXG4gICdmaXQtY29udGVudCcsXG4gICdmaWxsJyxcbiAgJ2ZpbGwtYXZhaWxhYmxlJyxcbiAgJ3N0cmV0Y2gnXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gSW50cmluc2ljXG4iXSwibmFtZXMiOlsiT2xkVmFsdWUiLCJyZXF1aXJlIiwiVmFsdWUiLCJyZWdleHAiLCJuYW1lIiwiUmVnRXhwIiwiSW50cmluc2ljIiwiYWRkIiwiZGVjbCIsInByZWZpeCIsInByb3AiLCJpbmNsdWRlcyIsInVuZGVmaW5lZCIsImlzU3RyZXRjaCIsIm9sZCIsInByZWZpeGVkIiwicmVnZXhwQ2FjaGUiLCJyZXBsYWNlIiwic3RyaW5nIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/intrinsic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/justify-content.js":
/*!****************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/justify-content.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass JustifyContent extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"justify-content\";\n    }\n    /**\n   * Change property name for 2009 and 2012 specs\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2009) {\n            return prefix + \"box-pack\";\n        }\n        if (spec === 2012) {\n            return prefix + \"flex-pack\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Change value for 2009 and 2012 specs\n   */ set(decl, prefix) {\n        let spec = flexSpec(prefix)[0];\n        if (spec === 2009 || spec === 2012) {\n            let value = JustifyContent.oldValues[decl.value] || decl.value;\n            decl.value = value;\n            if (spec !== 2009 || value !== \"distribute\") {\n                return super.set(decl, prefix);\n            }\n        } else if (spec === \"final\") {\n            return super.set(decl, prefix);\n        }\n        return undefined;\n    }\n}\nJustifyContent.names = [\n    \"justify-content\",\n    \"flex-pack\",\n    \"box-pack\"\n];\nJustifyContent.oldValues = {\n    \"flex-end\": \"end\",\n    \"flex-start\": \"start\",\n    \"space-around\": \"distribute\",\n    \"space-between\": \"justify\"\n};\nmodule.exports = JustifyContent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9qdXN0aWZ5LWNvbnRlbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlDLGNBQWNELG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1FLHVCQUF1QkQ7SUFDM0I7O0dBRUMsR0FDREUsWUFBWTtRQUNWLE9BQU87SUFDVDtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLElBQUksRUFBRUMsTUFBTSxFQUFFO1FBQ3JCLElBQUlDO1FBQ0gsQ0FBQ0EsTUFBTUQsT0FBTyxHQUFHUCxTQUFTTztRQUMzQixJQUFJQyxTQUFTLE1BQU07WUFDakIsT0FBT0QsU0FBUztRQUNsQjtRQUNBLElBQUlDLFNBQVMsTUFBTTtZQUNqQixPQUFPRCxTQUFTO1FBQ2xCO1FBQ0EsT0FBTyxLQUFLLENBQUNGLFNBQVNDLE1BQU1DO0lBQzlCO0lBRUE7O0dBRUMsR0FDREUsSUFBSUMsSUFBSSxFQUFFSCxNQUFNLEVBQUU7UUFDaEIsSUFBSUMsT0FBT1IsU0FBU08sT0FBTyxDQUFDLEVBQUU7UUFDOUIsSUFBSUMsU0FBUyxRQUFRQSxTQUFTLE1BQU07WUFDbEMsSUFBSUcsUUFBUVIsZUFBZVMsU0FBUyxDQUFDRixLQUFLQyxLQUFLLENBQUMsSUFBSUQsS0FBS0MsS0FBSztZQUM5REQsS0FBS0MsS0FBSyxHQUFHQTtZQUNiLElBQUlILFNBQVMsUUFBUUcsVUFBVSxjQUFjO2dCQUMzQyxPQUFPLEtBQUssQ0FBQ0YsSUFBSUMsTUFBTUg7WUFDekI7UUFDRixPQUFPLElBQUlDLFNBQVMsU0FBUztZQUMzQixPQUFPLEtBQUssQ0FBQ0MsSUFBSUMsTUFBTUg7UUFDekI7UUFDQSxPQUFPTTtJQUNUO0FBQ0Y7QUFFQVYsZUFBZVcsS0FBSyxHQUFHO0lBQUM7SUFBbUI7SUFBYTtDQUFXO0FBRW5FWCxlQUFlUyxTQUFTLEdBQUc7SUFDekIsWUFBWTtJQUNaLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ25CO0FBRUFHLE9BQU9DLE9BQU8sR0FBR2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9qdXN0aWZ5LWNvbnRlbnQuanM/NmE0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEp1c3RpZnlDb250ZW50IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnanVzdGlmeS1jb250ZW50J1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciAyMDA5IGFuZCAyMDEyIHNwZWNzXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAwOSkge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdib3gtcGFjaydcbiAgICB9XG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1wYWNrJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSB2YWx1ZSBmb3IgMjAwOSBhbmQgMjAxMiBzcGVjc1xuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGxldCBzcGVjID0gZmxleFNwZWMocHJlZml4KVswXVxuICAgIGlmIChzcGVjID09PSAyMDA5IHx8IHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIGxldCB2YWx1ZSA9IEp1c3RpZnlDb250ZW50Lm9sZFZhbHVlc1tkZWNsLnZhbHVlXSB8fCBkZWNsLnZhbHVlXG4gICAgICBkZWNsLnZhbHVlID0gdmFsdWVcbiAgICAgIGlmIChzcGVjICE9PSAyMDA5IHx8IHZhbHVlICE9PSAnZGlzdHJpYnV0ZScpIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChzcGVjID09PSAnZmluYWwnKSB7XG4gICAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbkp1c3RpZnlDb250ZW50Lm5hbWVzID0gWydqdXN0aWZ5LWNvbnRlbnQnLCAnZmxleC1wYWNrJywgJ2JveC1wYWNrJ11cblxuSnVzdGlmeUNvbnRlbnQub2xkVmFsdWVzID0ge1xuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnc3BhY2UtYXJvdW5kJzogJ2Rpc3RyaWJ1dGUnLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5J1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEp1c3RpZnlDb250ZW50XG4iXSwibmFtZXMiOlsiZmxleFNwZWMiLCJyZXF1aXJlIiwiRGVjbGFyYXRpb24iLCJKdXN0aWZ5Q29udGVudCIsIm5vcm1hbGl6ZSIsInByZWZpeGVkIiwicHJvcCIsInByZWZpeCIsInNwZWMiLCJzZXQiLCJkZWNsIiwidmFsdWUiLCJvbGRWYWx1ZXMiLCJ1bmRlZmluZWQiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/justify-content.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/mask-border.js":
/*!************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/mask-border.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass MaskBorder extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return this.name.replace(\"box-image\", \"border\");\n    }\n    /**\n   * Return flex property for 2012 spec\n   */ prefixed(prop, prefix) {\n        let result = super.prefixed(prop, prefix);\n        if (prefix === \"-webkit-\") {\n            result = result.replace(\"border\", \"box-image\");\n        }\n        return result;\n    }\n}\nMaskBorder.names = [\n    \"mask-border\",\n    \"mask-border-source\",\n    \"mask-border-slice\",\n    \"mask-border-width\",\n    \"mask-border-outset\",\n    \"mask-border-repeat\",\n    \"mask-box-image\",\n    \"mask-box-image-source\",\n    \"mask-box-image-slice\",\n    \"mask-box-image-width\",\n    \"mask-box-image-outset\",\n    \"mask-box-image-repeat\"\n];\nmodule.exports = MaskBorder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9tYXNrLWJvcmRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsbUJBQW1CRjtJQUN2Qjs7R0FFQyxHQUNERyxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUNDLElBQUksQ0FBQ0MsT0FBTyxDQUFDLGFBQWE7SUFDeEM7SUFFQTs7R0FFQyxHQUNEQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNyQixJQUFJQyxTQUFTLEtBQUssQ0FBQ0gsU0FBU0MsTUFBTUM7UUFDbEMsSUFBSUEsV0FBVyxZQUFZO1lBQ3pCQyxTQUFTQSxPQUFPSixPQUFPLENBQUMsVUFBVTtRQUNwQztRQUNBLE9BQU9JO0lBQ1Q7QUFDRjtBQUVBUCxXQUFXUSxLQUFLLEdBQUc7SUFDakI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFREMsT0FBT0MsT0FBTyxHQUFHViIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL21hc2stYm9yZGVyLmpzPzM0ZWEiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBNYXNrQm9yZGVyIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiB0aGlzLm5hbWUucmVwbGFjZSgnYm94LWltYWdlJywgJ2JvcmRlcicpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGZsZXggcHJvcGVydHkgZm9yIDIwMTIgc3BlY1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHJlc3VsdCA9IHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgnYm9yZGVyJywgJ2JveC1pbWFnZScpXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuXG5NYXNrQm9yZGVyLm5hbWVzID0gW1xuICAnbWFzay1ib3JkZXInLFxuICAnbWFzay1ib3JkZXItc291cmNlJyxcbiAgJ21hc2stYm9yZGVyLXNsaWNlJyxcbiAgJ21hc2stYm9yZGVyLXdpZHRoJyxcbiAgJ21hc2stYm9yZGVyLW91dHNldCcsXG4gICdtYXNrLWJvcmRlci1yZXBlYXQnLFxuICAnbWFzay1ib3gtaW1hZ2UnLFxuICAnbWFzay1ib3gtaW1hZ2Utc291cmNlJyxcbiAgJ21hc2stYm94LWltYWdlLXNsaWNlJyxcbiAgJ21hc2stYm94LWltYWdlLXdpZHRoJyxcbiAgJ21hc2stYm94LWltYWdlLW91dHNldCcsXG4gICdtYXNrLWJveC1pbWFnZS1yZXBlYXQnXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gTWFza0JvcmRlclxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsIk1hc2tCb3JkZXIiLCJub3JtYWxpemUiLCJuYW1lIiwicmVwbGFjZSIsInByZWZpeGVkIiwicHJvcCIsInByZWZpeCIsInJlc3VsdCIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/mask-border.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/mask-composite.js":
/*!***************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/mask-composite.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass MaskComposite extends Declaration {\n    /**\n   * Prefix mask-composite for webkit\n   */ insert(decl, prefix, prefixes) {\n        let isCompositeProp = decl.prop === \"mask-composite\";\n        let compositeValues;\n        if (isCompositeProp) {\n            compositeValues = decl.value.split(\",\");\n        } else {\n            compositeValues = decl.value.match(MaskComposite.regexp) || [];\n        }\n        compositeValues = compositeValues.map((el)=>el.trim()).filter((el)=>el);\n        let hasCompositeValues = compositeValues.length;\n        let compositeDecl;\n        if (hasCompositeValues) {\n            compositeDecl = this.clone(decl);\n            compositeDecl.value = compositeValues.map((value)=>MaskComposite.oldValues[value] || value).join(\", \");\n            if (compositeValues.includes(\"intersect\")) {\n                compositeDecl.value += \", xor\";\n            }\n            compositeDecl.prop = prefix + \"mask-composite\";\n        }\n        if (isCompositeProp) {\n            if (!hasCompositeValues) {\n                return undefined;\n            }\n            if (this.needCascade(decl)) {\n                compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n            }\n            return decl.parent.insertBefore(decl, compositeDecl);\n        }\n        let cloned = this.clone(decl);\n        cloned.prop = prefix + cloned.prop;\n        if (hasCompositeValues) {\n            cloned.value = cloned.value.replace(MaskComposite.regexp, \"\");\n        }\n        if (this.needCascade(decl)) {\n            cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        decl.parent.insertBefore(decl, cloned);\n        if (!hasCompositeValues) {\n            return decl;\n        }\n        if (this.needCascade(decl)) {\n            compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, compositeDecl);\n    }\n}\nMaskComposite.names = [\n    \"mask\",\n    \"mask-composite\"\n];\nMaskComposite.oldValues = {\n    add: \"source-over\",\n    exclude: \"xor\",\n    intersect: \"source-in\",\n    subtract: \"source-out\"\n};\nMaskComposite.regexp = new RegExp(`\\\\s+(${Object.keys(MaskComposite.oldValues).join(\"|\")})\\\\b(?!\\\\))\\\\s*(?=[,])`, \"ig\");\nmodule.exports = MaskComposite;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9tYXNrLWNvbXBvc2l0ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsc0JBQXNCRjtJQUMxQjs7R0FFQyxHQUNERyxPQUFPQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFO1FBQzdCLElBQUlDLGtCQUFrQkgsS0FBS0ksSUFBSSxLQUFLO1FBRXBDLElBQUlDO1FBRUosSUFBSUYsaUJBQWlCO1lBQ25CRSxrQkFBa0JMLEtBQUtNLEtBQUssQ0FBQ0MsS0FBSyxDQUFDO1FBQ3JDLE9BQU87WUFDTEYsa0JBQWtCTCxLQUFLTSxLQUFLLENBQUNFLEtBQUssQ0FBQ1YsY0FBY1csTUFBTSxLQUFLLEVBQUU7UUFDaEU7UUFFQUosa0JBQWtCQSxnQkFBZ0JLLEdBQUcsQ0FBQ0MsQ0FBQUEsS0FBTUEsR0FBR0MsSUFBSSxJQUFJQyxNQUFNLENBQUNGLENBQUFBLEtBQU1BO1FBQ3BFLElBQUlHLHFCQUFxQlQsZ0JBQWdCVSxNQUFNO1FBRS9DLElBQUlDO1FBRUosSUFBSUYsb0JBQW9CO1lBQ3RCRSxnQkFBZ0IsSUFBSSxDQUFDQyxLQUFLLENBQUNqQjtZQUMzQmdCLGNBQWNWLEtBQUssR0FBR0QsZ0JBQ25CSyxHQUFHLENBQUNKLENBQUFBLFFBQVNSLGNBQWNvQixTQUFTLENBQUNaLE1BQU0sSUFBSUEsT0FDL0NhLElBQUksQ0FBQztZQUVSLElBQUlkLGdCQUFnQmUsUUFBUSxDQUFDLGNBQWM7Z0JBQ3pDSixjQUFjVixLQUFLLElBQUk7WUFDekI7WUFFQVUsY0FBY1osSUFBSSxHQUFHSCxTQUFTO1FBQ2hDO1FBRUEsSUFBSUUsaUJBQWlCO1lBQ25CLElBQUksQ0FBQ1csb0JBQW9CO2dCQUN2QixPQUFPTztZQUNUO1lBRUEsSUFBSSxJQUFJLENBQUNDLFdBQVcsQ0FBQ3RCLE9BQU87Z0JBQzFCZ0IsY0FBY08sSUFBSSxDQUFDQyxNQUFNLEdBQUcsSUFBSSxDQUFDQyxVQUFVLENBQUN2QixVQUFVRixNQUFNQztZQUM5RDtZQUVBLE9BQU9ELEtBQUswQixNQUFNLENBQUNDLFlBQVksQ0FBQzNCLE1BQU1nQjtRQUN4QztRQUVBLElBQUlZLFNBQVMsSUFBSSxDQUFDWCxLQUFLLENBQUNqQjtRQUN4QjRCLE9BQU94QixJQUFJLEdBQUdILFNBQVMyQixPQUFPeEIsSUFBSTtRQUVsQyxJQUFJVSxvQkFBb0I7WUFDdEJjLE9BQU90QixLQUFLLEdBQUdzQixPQUFPdEIsS0FBSyxDQUFDdUIsT0FBTyxDQUFDL0IsY0FBY1csTUFBTSxFQUFFO1FBQzVEO1FBRUEsSUFBSSxJQUFJLENBQUNhLFdBQVcsQ0FBQ3RCLE9BQU87WUFDMUI0QixPQUFPTCxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJLENBQUNDLFVBQVUsQ0FBQ3ZCLFVBQVVGLE1BQU1DO1FBQ3ZEO1FBRUFELEtBQUswQixNQUFNLENBQUNDLFlBQVksQ0FBQzNCLE1BQU00QjtRQUUvQixJQUFJLENBQUNkLG9CQUFvQjtZQUN2QixPQUFPZDtRQUNUO1FBRUEsSUFBSSxJQUFJLENBQUNzQixXQUFXLENBQUN0QixPQUFPO1lBQzFCZ0IsY0FBY08sSUFBSSxDQUFDQyxNQUFNLEdBQUcsSUFBSSxDQUFDQyxVQUFVLENBQUN2QixVQUFVRixNQUFNQztRQUM5RDtRQUNBLE9BQU9ELEtBQUswQixNQUFNLENBQUNDLFlBQVksQ0FBQzNCLE1BQU1nQjtJQUN4QztBQUNGO0FBRUFsQixjQUFjZ0MsS0FBSyxHQUFHO0lBQUM7SUFBUTtDQUFpQjtBQUVoRGhDLGNBQWNvQixTQUFTLEdBQUc7SUFDeEJhLEtBQUs7SUFDTEMsU0FBUztJQUNUQyxXQUFXO0lBQ1hDLFVBQVU7QUFDWjtBQUVBcEMsY0FBY1csTUFBTSxHQUFHLElBQUkwQixPQUN6QixDQUFDLEtBQUssRUFBRUMsT0FBT0MsSUFBSSxDQUFDdkMsY0FBY29CLFNBQVMsRUFBRUMsSUFBSSxDQUMvQyxLQUNBLHNCQUFzQixDQUFDLEVBQ3pCO0FBR0ZtQixPQUFPQyxPQUFPLEdBQUd6QyIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL21hc2stY29tcG9zaXRlLmpzP2U5MTciXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBNYXNrQ29tcG9zaXRlIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUHJlZml4IG1hc2stY29tcG9zaXRlIGZvciB3ZWJraXRcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgbGV0IGlzQ29tcG9zaXRlUHJvcCA9IGRlY2wucHJvcCA9PT0gJ21hc2stY29tcG9zaXRlJ1xuXG4gICAgbGV0IGNvbXBvc2l0ZVZhbHVlc1xuXG4gICAgaWYgKGlzQ29tcG9zaXRlUHJvcCkge1xuICAgICAgY29tcG9zaXRlVmFsdWVzID0gZGVjbC52YWx1ZS5zcGxpdCgnLCcpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbXBvc2l0ZVZhbHVlcyA9IGRlY2wudmFsdWUubWF0Y2goTWFza0NvbXBvc2l0ZS5yZWdleHApIHx8IFtdXG4gICAgfVxuXG4gICAgY29tcG9zaXRlVmFsdWVzID0gY29tcG9zaXRlVmFsdWVzLm1hcChlbCA9PiBlbC50cmltKCkpLmZpbHRlcihlbCA9PiBlbClcbiAgICBsZXQgaGFzQ29tcG9zaXRlVmFsdWVzID0gY29tcG9zaXRlVmFsdWVzLmxlbmd0aFxuXG4gICAgbGV0IGNvbXBvc2l0ZURlY2xcblxuICAgIGlmIChoYXNDb21wb3NpdGVWYWx1ZXMpIHtcbiAgICAgIGNvbXBvc2l0ZURlY2wgPSB0aGlzLmNsb25lKGRlY2wpXG4gICAgICBjb21wb3NpdGVEZWNsLnZhbHVlID0gY29tcG9zaXRlVmFsdWVzXG4gICAgICAgIC5tYXAodmFsdWUgPT4gTWFza0NvbXBvc2l0ZS5vbGRWYWx1ZXNbdmFsdWVdIHx8IHZhbHVlKVxuICAgICAgICAuam9pbignLCAnKVxuXG4gICAgICBpZiAoY29tcG9zaXRlVmFsdWVzLmluY2x1ZGVzKCdpbnRlcnNlY3QnKSkge1xuICAgICAgICBjb21wb3NpdGVEZWNsLnZhbHVlICs9ICcsIHhvcidcbiAgICAgIH1cblxuICAgICAgY29tcG9zaXRlRGVjbC5wcm9wID0gcHJlZml4ICsgJ21hc2stY29tcG9zaXRlJ1xuICAgIH1cblxuICAgIGlmIChpc0NvbXBvc2l0ZVByb3ApIHtcbiAgICAgIGlmICghaGFzQ29tcG9zaXRlVmFsdWVzKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMubmVlZENhc2NhZGUoZGVjbCkpIHtcbiAgICAgICAgY29tcG9zaXRlRGVjbC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVjbC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGRlY2wsIGNvbXBvc2l0ZURlY2wpXG4gICAgfVxuXG4gICAgbGV0IGNsb25lZCA9IHRoaXMuY2xvbmUoZGVjbClcbiAgICBjbG9uZWQucHJvcCA9IHByZWZpeCArIGNsb25lZC5wcm9wXG5cbiAgICBpZiAoaGFzQ29tcG9zaXRlVmFsdWVzKSB7XG4gICAgICBjbG9uZWQudmFsdWUgPSBjbG9uZWQudmFsdWUucmVwbGFjZShNYXNrQ29tcG9zaXRlLnJlZ2V4cCwgJycpXG4gICAgfVxuXG4gICAgaWYgKHRoaXMubmVlZENhc2NhZGUoZGVjbCkpIHtcbiAgICAgIGNsb25lZC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgIH1cblxuICAgIGRlY2wucGFyZW50Lmluc2VydEJlZm9yZShkZWNsLCBjbG9uZWQpXG5cbiAgICBpZiAoIWhhc0NvbXBvc2l0ZVZhbHVlcykge1xuICAgICAgcmV0dXJuIGRlY2xcbiAgICB9XG5cbiAgICBpZiAodGhpcy5uZWVkQ2FzY2FkZShkZWNsKSkge1xuICAgICAgY29tcG9zaXRlRGVjbC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gZGVjbC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGRlY2wsIGNvbXBvc2l0ZURlY2wpXG4gIH1cbn1cblxuTWFza0NvbXBvc2l0ZS5uYW1lcyA9IFsnbWFzaycsICdtYXNrLWNvbXBvc2l0ZSddXG5cbk1hc2tDb21wb3NpdGUub2xkVmFsdWVzID0ge1xuICBhZGQ6ICdzb3VyY2Utb3ZlcicsXG4gIGV4Y2x1ZGU6ICd4b3InLFxuICBpbnRlcnNlY3Q6ICdzb3VyY2UtaW4nLFxuICBzdWJ0cmFjdDogJ3NvdXJjZS1vdXQnXG59XG5cbk1hc2tDb21wb3NpdGUucmVnZXhwID0gbmV3IFJlZ0V4cChcbiAgYFxcXFxzKygke09iamVjdC5rZXlzKE1hc2tDb21wb3NpdGUub2xkVmFsdWVzKS5qb2luKFxuICAgICd8J1xuICApfSlcXFxcYig/IVxcXFwpKVxcXFxzKig/PVssXSlgLFxuICAnaWcnXG4pXG5cbm1vZHVsZS5leHBvcnRzID0gTWFza0NvbXBvc2l0ZVxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsIk1hc2tDb21wb3NpdGUiLCJpbnNlcnQiLCJkZWNsIiwicHJlZml4IiwicHJlZml4ZXMiLCJpc0NvbXBvc2l0ZVByb3AiLCJwcm9wIiwiY29tcG9zaXRlVmFsdWVzIiwidmFsdWUiLCJzcGxpdCIsIm1hdGNoIiwicmVnZXhwIiwibWFwIiwiZWwiLCJ0cmltIiwiZmlsdGVyIiwiaGFzQ29tcG9zaXRlVmFsdWVzIiwibGVuZ3RoIiwiY29tcG9zaXRlRGVjbCIsImNsb25lIiwib2xkVmFsdWVzIiwiam9pbiIsImluY2x1ZGVzIiwidW5kZWZpbmVkIiwibmVlZENhc2NhZGUiLCJyYXdzIiwiYmVmb3JlIiwiY2FsY0JlZm9yZSIsInBhcmVudCIsImluc2VydEJlZm9yZSIsImNsb25lZCIsInJlcGxhY2UiLCJuYW1lcyIsImFkZCIsImV4Y2x1ZGUiLCJpbnRlcnNlY3QiLCJzdWJ0cmFjdCIsIlJlZ0V4cCIsIk9iamVjdCIsImtleXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/mask-composite.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/order.js":
/*!******************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/order.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet flexSpec = __webpack_require__(/*! ./flex-spec */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-spec.js\");\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass Order extends Declaration {\n    /**\n   * Return property name by final spec\n   */ normalize() {\n        return \"order\";\n    }\n    /**\n   * Change property name for 2009 and 2012 specs\n   */ prefixed(prop, prefix) {\n        let spec;\n        [spec, prefix] = flexSpec(prefix);\n        if (spec === 2009) {\n            return prefix + \"box-ordinal-group\";\n        }\n        if (spec === 2012) {\n            return prefix + \"flex-order\";\n        }\n        return super.prefixed(prop, prefix);\n    }\n    /**\n   * Fix value for 2009 spec\n   */ set(decl, prefix) {\n        let spec = flexSpec(prefix)[0];\n        if (spec === 2009 && /\\d/.test(decl.value)) {\n            decl.value = (parseInt(decl.value) + 1).toString();\n            return super.set(decl, prefix);\n        }\n        return super.set(decl, prefix);\n    }\n}\nOrder.names = [\n    \"order\",\n    \"flex-order\",\n    \"box-ordinal-group\"\n];\nmodule.exports = Order;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9vcmRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUUsY0FBY0Q7SUFDbEI7O0dBRUMsR0FDREUsWUFBWTtRQUNWLE9BQU87SUFDVDtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLElBQUksRUFBRUMsTUFBTSxFQUFFO1FBQ3JCLElBQUlDO1FBQ0gsQ0FBQ0EsTUFBTUQsT0FBTyxHQUFHUCxTQUFTTztRQUMzQixJQUFJQyxTQUFTLE1BQU07WUFDakIsT0FBT0QsU0FBUztRQUNsQjtRQUNBLElBQUlDLFNBQVMsTUFBTTtZQUNqQixPQUFPRCxTQUFTO1FBQ2xCO1FBQ0EsT0FBTyxLQUFLLENBQUNGLFNBQVNDLE1BQU1DO0lBQzlCO0lBRUE7O0dBRUMsR0FDREUsSUFBSUMsSUFBSSxFQUFFSCxNQUFNLEVBQUU7UUFDaEIsSUFBSUMsT0FBT1IsU0FBU08sT0FBTyxDQUFDLEVBQUU7UUFDOUIsSUFBSUMsU0FBUyxRQUFRLEtBQUtHLElBQUksQ0FBQ0QsS0FBS0UsS0FBSyxHQUFHO1lBQzFDRixLQUFLRSxLQUFLLEdBQUcsQ0FBQ0MsU0FBU0gsS0FBS0UsS0FBSyxJQUFJLEdBQUdFLFFBQVE7WUFDaEQsT0FBTyxLQUFLLENBQUNMLElBQUlDLE1BQU1IO1FBQ3pCO1FBQ0EsT0FBTyxLQUFLLENBQUNFLElBQUlDLE1BQU1IO0lBQ3pCO0FBQ0Y7QUFFQUosTUFBTVksS0FBSyxHQUFHO0lBQUM7SUFBUztJQUFjO0NBQW9CO0FBRTFEQyxPQUFPQyxPQUFPLEdBQUdkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3Mvb3JkZXIuanM/M2Q3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIE9yZGVyIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnb3JkZXInXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIDIwMDkgYW5kIDIwMTIgc3BlY3NcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjID09PSAyMDA5KSB7XG4gICAgICByZXR1cm4gcHJlZml4ICsgJ2JveC1vcmRpbmFsLWdyb3VwJ1xuICAgIH1cbiAgICBpZiAoc3BlYyA9PT0gMjAxMikge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdmbGV4LW9yZGVyJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIEZpeCB2YWx1ZSBmb3IgMjAwOSBzcGVjXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWMgPSBmbGV4U3BlYyhwcmVmaXgpWzBdXG4gICAgaWYgKHNwZWMgPT09IDIwMDkgJiYgL1xcZC8udGVzdChkZWNsLnZhbHVlKSkge1xuICAgICAgZGVjbC52YWx1ZSA9IChwYXJzZUludChkZWNsLnZhbHVlKSArIDEpLnRvU3RyaW5nKClcbiAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgfVxufVxuXG5PcmRlci5uYW1lcyA9IFsnb3JkZXInLCAnZmxleC1vcmRlcicsICdib3gtb3JkaW5hbC1ncm91cCddXG5cbm1vZHVsZS5leHBvcnRzID0gT3JkZXJcbiJdLCJuYW1lcyI6WyJmbGV4U3BlYyIsInJlcXVpcmUiLCJEZWNsYXJhdGlvbiIsIk9yZGVyIiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4Iiwic3BlYyIsInNldCIsImRlY2wiLCJ0ZXN0IiwidmFsdWUiLCJwYXJzZUludCIsInRvU3RyaW5nIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/order.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/overscroll-behavior.js":
/*!********************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/overscroll-behavior.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass OverscrollBehavior extends Declaration {\n    /**\n   * Return property name by spec\n   */ normalize() {\n        return \"overscroll-behavior\";\n    }\n    /**\n   * Change property name for IE\n   */ prefixed(prop, prefix) {\n        return prefix + \"scroll-chaining\";\n    }\n    /**\n   * Change value for IE\n   */ set(decl, prefix) {\n        if (decl.value === \"auto\") {\n            decl.value = \"chained\";\n        } else if (decl.value === \"none\" || decl.value === \"contain\") {\n            decl.value = \"none\";\n        }\n        return super.set(decl, prefix);\n    }\n}\nOverscrollBehavior.names = [\n    \"overscroll-behavior\",\n    \"scroll-chaining\"\n];\nmodule.exports = OverscrollBehavior;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9vdmVyc2Nyb2xsLWJlaGF2aW9yLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixNQUFNQywyQkFBMkJGO0lBQy9COztHQUVDLEdBQ0RHLFlBQVk7UUFDVixPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNyQixPQUFPQSxTQUFTO0lBQ2xCO0lBRUE7O0dBRUMsR0FDREMsSUFBSUMsSUFBSSxFQUFFRixNQUFNLEVBQUU7UUFDaEIsSUFBSUUsS0FBS0MsS0FBSyxLQUFLLFFBQVE7WUFDekJELEtBQUtDLEtBQUssR0FBRztRQUNmLE9BQU8sSUFBSUQsS0FBS0MsS0FBSyxLQUFLLFVBQVVELEtBQUtDLEtBQUssS0FBSyxXQUFXO1lBQzVERCxLQUFLQyxLQUFLLEdBQUc7UUFDZjtRQUNBLE9BQU8sS0FBSyxDQUFDRixJQUFJQyxNQUFNRjtJQUN6QjtBQUNGO0FBRUFKLG1CQUFtQlEsS0FBSyxHQUFHO0lBQUM7SUFBdUI7Q0FBa0I7QUFFckVDLE9BQU9DLE9BQU8sR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9vdmVyc2Nyb2xsLWJlaGF2aW9yLmpzP2U4ZmUiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBPdmVyc2Nyb2xsQmVoYXZpb3IgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdvdmVyc2Nyb2xsLWJlaGF2aW9yJ1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciBJRVxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgcmV0dXJuIHByZWZpeCArICdzY3JvbGwtY2hhaW5pbmcnXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHZhbHVlIGZvciBJRVxuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGlmIChkZWNsLnZhbHVlID09PSAnYXV0bycpIHtcbiAgICAgIGRlY2wudmFsdWUgPSAnY2hhaW5lZCdcbiAgICB9IGVsc2UgaWYgKGRlY2wudmFsdWUgPT09ICdub25lJyB8fCBkZWNsLnZhbHVlID09PSAnY29udGFpbicpIHtcbiAgICAgIGRlY2wudmFsdWUgPSAnbm9uZSdcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cbn1cblxuT3ZlcnNjcm9sbEJlaGF2aW9yLm5hbWVzID0gWydvdmVyc2Nyb2xsLWJlaGF2aW9yJywgJ3Njcm9sbC1jaGFpbmluZyddXG5cbm1vZHVsZS5leHBvcnRzID0gT3ZlcnNjcm9sbEJlaGF2aW9yXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiT3ZlcnNjcm9sbEJlaGF2aW9yIiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4Iiwic2V0IiwiZGVjbCIsInZhbHVlIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/overscroll-behavior.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/pixelated.js":
/*!**********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/pixelated.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet OldValue = __webpack_require__(/*! ../old-value */ \"(ssr)/./node_modules/autoprefixer/lib/old-value.js\");\nlet Value = __webpack_require__(/*! ../value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nclass Pixelated extends Value {\n    /**\n   * Different name for WebKit and Firefox\n   */ old(prefix) {\n        if (prefix === \"-webkit-\") {\n            return new OldValue(this.name, \"-webkit-optimize-contrast\");\n        }\n        if (prefix === \"-moz-\") {\n            return new OldValue(this.name, \"-moz-crisp-edges\");\n        }\n        return super.old(prefix);\n    }\n    /**\n   * Use non-standard name for WebKit and Firefox\n   */ replace(string, prefix) {\n        if (prefix === \"-webkit-\") {\n            return string.replace(this.regexp(), \"$1-webkit-optimize-contrast\");\n        }\n        if (prefix === \"-moz-\") {\n            return string.replace(this.regexp(), \"$1-moz-crisp-edges\");\n        }\n        return super.replace(string, prefix);\n    }\n}\nPixelated.names = [\n    \"pixelated\"\n];\nmodule.exports = Pixelated;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9waXhlbGF0ZWQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDO0FBQ3ZCLElBQUlDLFFBQVFELG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1FLGtCQUFrQkQ7SUFDdEI7O0dBRUMsR0FDREUsSUFBSUMsTUFBTSxFQUFFO1FBQ1YsSUFBSUEsV0FBVyxZQUFZO1lBQ3pCLE9BQU8sSUFBSUwsU0FBUyxJQUFJLENBQUNNLElBQUksRUFBRTtRQUNqQztRQUNBLElBQUlELFdBQVcsU0FBUztZQUN0QixPQUFPLElBQUlMLFNBQVMsSUFBSSxDQUFDTSxJQUFJLEVBQUU7UUFDakM7UUFDQSxPQUFPLEtBQUssQ0FBQ0YsSUFBSUM7SUFDbkI7SUFFQTs7R0FFQyxHQUNERSxRQUFRQyxNQUFNLEVBQUVILE1BQU0sRUFBRTtRQUN0QixJQUFJQSxXQUFXLFlBQVk7WUFDekIsT0FBT0csT0FBT0QsT0FBTyxDQUFDLElBQUksQ0FBQ0UsTUFBTSxJQUFJO1FBQ3ZDO1FBQ0EsSUFBSUosV0FBVyxTQUFTO1lBQ3RCLE9BQU9HLE9BQU9ELE9BQU8sQ0FBQyxJQUFJLENBQUNFLE1BQU0sSUFBSTtRQUN2QztRQUNBLE9BQU8sS0FBSyxDQUFDRixRQUFRQyxRQUFRSDtJQUMvQjtBQUNGO0FBRUFGLFVBQVVPLEtBQUssR0FBRztJQUFDO0NBQVk7QUFFL0JDLE9BQU9DLE9BQU8sR0FBR1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9waXhlbGF0ZWQuanM/NWNjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgT2xkVmFsdWUgPSByZXF1aXJlKCcuLi9vbGQtdmFsdWUnKVxubGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxuXG5jbGFzcyBQaXhlbGF0ZWQgZXh0ZW5kcyBWYWx1ZSB7XG4gIC8qKlxuICAgKiBEaWZmZXJlbnQgbmFtZSBmb3IgV2ViS2l0IGFuZCBGaXJlZm94XG4gICAqL1xuICBvbGQocHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJykge1xuICAgICAgcmV0dXJuIG5ldyBPbGRWYWx1ZSh0aGlzLm5hbWUsICctd2Via2l0LW9wdGltaXplLWNvbnRyYXN0JylcbiAgICB9XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tb3otJykge1xuICAgICAgcmV0dXJuIG5ldyBPbGRWYWx1ZSh0aGlzLm5hbWUsICctbW96LWNyaXNwLWVkZ2VzJylcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLm9sZChwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogVXNlIG5vbi1zdGFuZGFyZCBuYW1lIGZvciBXZWJLaXQgYW5kIEZpcmVmb3hcbiAgICovXG4gIHJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodGhpcy5yZWdleHAoKSwgJyQxLXdlYmtpdC1vcHRpbWl6ZS1jb250cmFzdCcpXG4gICAgfVxuICAgIGlmIChwcmVmaXggPT09ICctbW96LScpIHtcbiAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSh0aGlzLnJlZ2V4cCgpLCAnJDEtbW96LWNyaXNwLWVkZ2VzJylcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpXG4gIH1cbn1cblxuUGl4ZWxhdGVkLm5hbWVzID0gWydwaXhlbGF0ZWQnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBpeGVsYXRlZFxuIl0sIm5hbWVzIjpbIk9sZFZhbHVlIiwicmVxdWlyZSIsIlZhbHVlIiwiUGl4ZWxhdGVkIiwib2xkIiwicHJlZml4IiwibmFtZSIsInJlcGxhY2UiLCJzdHJpbmciLCJyZWdleHAiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/pixelated.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/place-self.js":
/*!***********************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/place-self.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet utils = __webpack_require__(/*! ./grid-utils */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\");\nclass PlaceSelf extends Declaration {\n    /**\n   * Translate place-self to separate -ms- prefixed properties\n   */ insert(decl, prefix, prefixes) {\n        if (prefix !== \"-ms-\") return super.insert(decl, prefix, prefixes);\n        // prevent doubling of prefixes\n        if (decl.parent.some((i)=>i.prop === \"-ms-grid-row-align\")) {\n            return undefined;\n        }\n        let [[first, second]] = utils.parse(decl);\n        if (second) {\n            utils.insertDecl(decl, \"grid-row-align\", first);\n            utils.insertDecl(decl, \"grid-column-align\", second);\n        } else {\n            utils.insertDecl(decl, \"grid-row-align\", first);\n            utils.insertDecl(decl, \"grid-column-align\", first);\n        }\n        return undefined;\n    }\n}\nPlaceSelf.names = [\n    \"place-self\"\n];\nmodule.exports = PlaceSelf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9wbGFjZS1zZWxmLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUMxQixJQUFJQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUVwQixNQUFNRSxrQkFBa0JIO0lBQ3RCOztHQUVDLEdBQ0RJLE9BQU9DLElBQUksRUFBRUMsTUFBTSxFQUFFQyxRQUFRLEVBQUU7UUFDN0IsSUFBSUQsV0FBVyxRQUFRLE9BQU8sS0FBSyxDQUFDRixPQUFPQyxNQUFNQyxRQUFRQztRQUV6RCwrQkFBK0I7UUFDL0IsSUFBSUYsS0FBS0csTUFBTSxDQUFDQyxJQUFJLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUksS0FBSyx1QkFBdUI7WUFDMUQsT0FBT0M7UUFDVDtRQUVBLElBQUksQ0FBQyxDQUFDQyxPQUFPQyxPQUFPLENBQUMsR0FBR1osTUFBTWEsS0FBSyxDQUFDVjtRQUVwQyxJQUFJUyxRQUFRO1lBQ1ZaLE1BQU1jLFVBQVUsQ0FBQ1gsTUFBTSxrQkFBa0JRO1lBQ3pDWCxNQUFNYyxVQUFVLENBQUNYLE1BQU0scUJBQXFCUztRQUM5QyxPQUFPO1lBQ0xaLE1BQU1jLFVBQVUsQ0FBQ1gsTUFBTSxrQkFBa0JRO1lBQ3pDWCxNQUFNYyxVQUFVLENBQUNYLE1BQU0scUJBQXFCUTtRQUM5QztRQUVBLE9BQU9EO0lBQ1Q7QUFDRjtBQUVBVCxVQUFVYyxLQUFLLEdBQUc7SUFBQztDQUFhO0FBRWhDQyxPQUFPQyxPQUFPLEdBQUdoQiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL3BsYWNlLXNlbGYuanM/OTEwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuL2dyaWQtdXRpbHMnKVxuXG5jbGFzcyBQbGFjZVNlbGYgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBUcmFuc2xhdGUgcGxhY2Utc2VsZiB0byBzZXBhcmF0ZSAtbXMtIHByZWZpeGVkIHByb3BlcnRpZXNcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICAvLyBwcmV2ZW50IGRvdWJsaW5nIG9mIHByZWZpeGVzXG4gICAgaWYgKGRlY2wucGFyZW50LnNvbWUoaSA9PiBpLnByb3AgPT09ICctbXMtZ3JpZC1yb3ctYWxpZ24nKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCBbW2ZpcnN0LCBzZWNvbmRdXSA9IHV0aWxzLnBhcnNlKGRlY2wpXG5cbiAgICBpZiAoc2Vjb25kKSB7XG4gICAgICB1dGlscy5pbnNlcnREZWNsKGRlY2wsICdncmlkLXJvdy1hbGlnbicsIGZpcnN0KVxuICAgICAgdXRpbHMuaW5zZXJ0RGVjbChkZWNsLCAnZ3JpZC1jb2x1bW4tYWxpZ24nLCBzZWNvbmQpXG4gICAgfSBlbHNlIHtcbiAgICAgIHV0aWxzLmluc2VydERlY2woZGVjbCwgJ2dyaWQtcm93LWFsaWduJywgZmlyc3QpXG4gICAgICB1dGlscy5pbnNlcnREZWNsKGRlY2wsICdncmlkLWNvbHVtbi1hbGlnbicsIGZpcnN0KVxuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5QbGFjZVNlbGYubmFtZXMgPSBbJ3BsYWNlLXNlbGYnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYWNlU2VsZlxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsInV0aWxzIiwiUGxhY2VTZWxmIiwiaW5zZXJ0IiwiZGVjbCIsInByZWZpeCIsInByZWZpeGVzIiwicGFyZW50Iiwic29tZSIsImkiLCJwcm9wIiwidW5kZWZpbmVkIiwiZmlyc3QiLCJzZWNvbmQiLCJwYXJzZSIsImluc2VydERlY2wiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/place-self.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/placeholder-shown.js":
/*!******************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/placeholder-shown.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Selector = __webpack_require__(/*! ../selector */ \"(ssr)/./node_modules/autoprefixer/lib/selector.js\");\nclass PlaceholderShown extends Selector {\n    /**\n   * Return different selectors depend on prefix\n   */ prefixed(prefix) {\n        if (prefix === \"-ms-\") {\n            return \":-ms-input-placeholder\";\n        }\n        return `:${prefix}placeholder-shown`;\n    }\n}\nPlaceholderShown.names = [\n    \":placeholder-shown\"\n];\nmodule.exports = PlaceholderShown;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9wbGFjZWhvbGRlci1zaG93bi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUMseUJBQXlCRjtJQUM3Qjs7R0FFQyxHQUNERyxTQUFTQyxNQUFNLEVBQUU7UUFDZixJQUFJQSxXQUFXLFFBQVE7WUFDckIsT0FBTztRQUNUO1FBQ0EsT0FBTyxDQUFDLENBQUMsRUFBRUEsT0FBTyxpQkFBaUIsQ0FBQztJQUN0QztBQUNGO0FBRUFGLGlCQUFpQkcsS0FBSyxHQUFHO0lBQUM7Q0FBcUI7QUFFL0NDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9wbGFjZWhvbGRlci1zaG93bi5qcz9iNjk4Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBTZWxlY3RvciA9IHJlcXVpcmUoJy4uL3NlbGVjdG9yJylcblxuY2xhc3MgUGxhY2Vob2xkZXJTaG93biBleHRlbmRzIFNlbGVjdG9yIHtcbiAgLyoqXG4gICAqIFJldHVybiBkaWZmZXJlbnQgc2VsZWN0b3JzIGRlcGVuZCBvbiBwcmVmaXhcbiAgICovXG4gIHByZWZpeGVkKHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctbXMtJykge1xuICAgICAgcmV0dXJuICc6LW1zLWlucHV0LXBsYWNlaG9sZGVyJ1xuICAgIH1cbiAgICByZXR1cm4gYDoke3ByZWZpeH1wbGFjZWhvbGRlci1zaG93bmBcbiAgfVxufVxuXG5QbGFjZWhvbGRlclNob3duLm5hbWVzID0gWyc6cGxhY2Vob2xkZXItc2hvd24nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYWNlaG9sZGVyU2hvd25cbiJdLCJuYW1lcyI6WyJTZWxlY3RvciIsInJlcXVpcmUiLCJQbGFjZWhvbGRlclNob3duIiwicHJlZml4ZWQiLCJwcmVmaXgiLCJuYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/placeholder-shown.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/placeholder.js":
/*!************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/placeholder.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Selector = __webpack_require__(/*! ../selector */ \"(ssr)/./node_modules/autoprefixer/lib/selector.js\");\nclass Placeholder extends Selector {\n    /**\n   * Add old mozilla to possible prefixes\n   */ possible() {\n        return super.possible().concat([\n            \"-moz- old\",\n            \"-ms- old\"\n        ]);\n    }\n    /**\n   * Return different selectors depend on prefix\n   */ prefixed(prefix) {\n        if (prefix === \"-webkit-\") {\n            return \"::-webkit-input-placeholder\";\n        }\n        if (prefix === \"-ms-\") {\n            return \"::-ms-input-placeholder\";\n        }\n        if (prefix === \"-ms- old\") {\n            return \":-ms-input-placeholder\";\n        }\n        if (prefix === \"-moz- old\") {\n            return \":-moz-placeholder\";\n        }\n        return `::${prefix}placeholder`;\n    }\n}\nPlaceholder.names = [\n    \"::placeholder\"\n];\nmodule.exports = Placeholder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9wbGFjZWhvbGRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUMsb0JBQW9CRjtJQUN4Qjs7R0FFQyxHQUNERyxXQUFXO1FBQ1QsT0FBTyxLQUFLLENBQUNBLFdBQVdDLE1BQU0sQ0FBQztZQUFDO1lBQWE7U0FBVztJQUMxRDtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLE1BQU0sRUFBRTtRQUNmLElBQUlBLFdBQVcsWUFBWTtZQUN6QixPQUFPO1FBQ1Q7UUFDQSxJQUFJQSxXQUFXLFFBQVE7WUFDckIsT0FBTztRQUNUO1FBQ0EsSUFBSUEsV0FBVyxZQUFZO1lBQ3pCLE9BQU87UUFDVDtRQUNBLElBQUlBLFdBQVcsYUFBYTtZQUMxQixPQUFPO1FBQ1Q7UUFDQSxPQUFPLENBQUMsRUFBRSxFQUFFQSxPQUFPLFdBQVcsQ0FBQztJQUNqQztBQUNGO0FBRUFKLFlBQVlLLEtBQUssR0FBRztJQUFDO0NBQWdCO0FBRXJDQyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvcGxhY2Vob2xkZXIuanM/ZTVmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgU2VsZWN0b3IgPSByZXF1aXJlKCcuLi9zZWxlY3RvcicpXG5cbmNsYXNzIFBsYWNlaG9sZGVyIGV4dGVuZHMgU2VsZWN0b3Ige1xuICAvKipcbiAgICogQWRkIG9sZCBtb3ppbGxhIHRvIHBvc3NpYmxlIHByZWZpeGVzXG4gICAqL1xuICBwb3NzaWJsZSgpIHtcbiAgICByZXR1cm4gc3VwZXIucG9zc2libGUoKS5jb25jYXQoWyctbW96LSBvbGQnLCAnLW1zLSBvbGQnXSlcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZGlmZmVyZW50IHNlbGVjdG9ycyBkZXBlbmQgb24gcHJlZml4XG4gICAqL1xuICBwcmVmaXhlZChwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXR1cm4gJzo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcidcbiAgICB9XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICByZXR1cm4gJzo6LW1zLWlucHV0LXBsYWNlaG9sZGVyJ1xuICAgIH1cbiAgICBpZiAocHJlZml4ID09PSAnLW1zLSBvbGQnKSB7XG4gICAgICByZXR1cm4gJzotbXMtaW5wdXQtcGxhY2Vob2xkZXInXG4gICAgfVxuICAgIGlmIChwcmVmaXggPT09ICctbW96LSBvbGQnKSB7XG4gICAgICByZXR1cm4gJzotbW96LXBsYWNlaG9sZGVyJ1xuICAgIH1cbiAgICByZXR1cm4gYDo6JHtwcmVmaXh9cGxhY2Vob2xkZXJgXG4gIH1cbn1cblxuUGxhY2Vob2xkZXIubmFtZXMgPSBbJzo6cGxhY2Vob2xkZXInXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYWNlaG9sZGVyXG4iXSwibmFtZXMiOlsiU2VsZWN0b3IiLCJyZXF1aXJlIiwiUGxhY2Vob2xkZXIiLCJwb3NzaWJsZSIsImNvbmNhdCIsInByZWZpeGVkIiwicHJlZml4IiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/placeholder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/print-color-adjust.js":
/*!*******************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/print-color-adjust.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass PrintColorAdjust extends Declaration {\n    /**\n   * Return property name by spec\n   */ normalize() {\n        return \"print-color-adjust\";\n    }\n    /**\n   * Change property name for WebKit-based browsers\n   */ prefixed(prop, prefix) {\n        if (prefix === \"-moz-\") {\n            return \"color-adjust\";\n        } else {\n            return prefix + \"print-color-adjust\";\n        }\n    }\n}\nPrintColorAdjust.names = [\n    \"print-color-adjust\",\n    \"color-adjust\"\n];\nmodule.exports = PrintColorAdjust;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9wcmludC1jb2xvci1hZGp1c3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLHlCQUF5QkY7SUFDN0I7O0dBRUMsR0FDREcsWUFBWTtRQUNWLE9BQU87SUFDVDtJQUVBOztHQUVDLEdBQ0RDLFNBQVNDLElBQUksRUFBRUMsTUFBTSxFQUFFO1FBQ3JCLElBQUlBLFdBQVcsU0FBUztZQUN0QixPQUFPO1FBQ1QsT0FBTztZQUNMLE9BQU9BLFNBQVM7UUFDbEI7SUFDRjtBQUNGO0FBRUFKLGlCQUFpQkssS0FBSyxHQUFHO0lBQUM7SUFBc0I7Q0FBZTtBQUUvREMsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL3ByaW50LWNvbG9yLWFkanVzdC5qcz81OWE5Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgUHJpbnRDb2xvckFkanVzdCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFJldHVybiBwcm9wZXJ0eSBuYW1lIGJ5IHNwZWNcbiAgICovXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICByZXR1cm4gJ3ByaW50LWNvbG9yLWFkanVzdCdcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgV2ViS2l0LWJhc2VkIGJyb3dzZXJzXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLW1vei0nKSB7XG4gICAgICByZXR1cm4gJ2NvbG9yLWFkanVzdCdcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdwcmludC1jb2xvci1hZGp1c3QnXG4gICAgfVxuICB9XG59XG5cblByaW50Q29sb3JBZGp1c3QubmFtZXMgPSBbJ3ByaW50LWNvbG9yLWFkanVzdCcsICdjb2xvci1hZGp1c3QnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByaW50Q29sb3JBZGp1c3RcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJQcmludENvbG9yQWRqdXN0Iiwibm9ybWFsaXplIiwicHJlZml4ZWQiLCJwcm9wIiwicHJlZml4IiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/print-color-adjust.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js":
/*!*************************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass TextDecorationSkipInk extends Declaration {\n    /**\n   * Change prefix for ink value\n   */ set(decl, prefix) {\n        if (decl.prop === \"text-decoration-skip-ink\" && decl.value === \"auto\") {\n            decl.prop = prefix + \"text-decoration-skip\";\n            decl.value = \"ink\";\n            return decl;\n        } else {\n            return super.set(decl, prefix);\n        }\n    }\n}\nTextDecorationSkipInk.names = [\n    \"text-decoration-skip-ink\",\n    \"text-decoration-skip\"\n];\nmodule.exports = TextDecorationSkipInk;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90ZXh0LWRlY29yYXRpb24tc2tpcC1pbmsuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLDhCQUE4QkY7SUFDbEM7O0dBRUMsR0FDREcsSUFBSUMsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDaEIsSUFBSUQsS0FBS0UsSUFBSSxLQUFLLDhCQUE4QkYsS0FBS0csS0FBSyxLQUFLLFFBQVE7WUFDckVILEtBQUtFLElBQUksR0FBR0QsU0FBUztZQUNyQkQsS0FBS0csS0FBSyxHQUFHO1lBQ2IsT0FBT0g7UUFDVCxPQUFPO1lBQ0wsT0FBTyxLQUFLLENBQUNELElBQUlDLE1BQU1DO1FBQ3pCO0lBQ0Y7QUFDRjtBQUVBSCxzQkFBc0JNLEtBQUssR0FBRztJQUM1QjtJQUNBO0NBQ0Q7QUFFREMsT0FBT0MsT0FBTyxHQUFHUiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL3RleHQtZGVjb3JhdGlvbi1za2lwLWluay5qcz8xMjNkIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgVGV4dERlY29yYXRpb25Ta2lwSW5rIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQ2hhbmdlIHByZWZpeCBmb3IgaW5rIHZhbHVlXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgaWYgKGRlY2wucHJvcCA9PT0gJ3RleHQtZGVjb3JhdGlvbi1za2lwLWluaycgJiYgZGVjbC52YWx1ZSA9PT0gJ2F1dG8nKSB7XG4gICAgICBkZWNsLnByb3AgPSBwcmVmaXggKyAndGV4dC1kZWNvcmF0aW9uLXNraXAnXG4gICAgICBkZWNsLnZhbHVlID0gJ2luaydcbiAgICAgIHJldHVybiBkZWNsXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgfVxufVxuXG5UZXh0RGVjb3JhdGlvblNraXBJbmsubmFtZXMgPSBbXG4gICd0ZXh0LWRlY29yYXRpb24tc2tpcC1pbmsnLFxuICAndGV4dC1kZWNvcmF0aW9uLXNraXAnXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gVGV4dERlY29yYXRpb25Ta2lwSW5rXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiVGV4dERlY29yYXRpb25Ta2lwSW5rIiwic2V0IiwiZGVjbCIsInByZWZpeCIsInByb3AiLCJ2YWx1ZSIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/text-decoration.js":
/*!****************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/text-decoration.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nconst BASIC = [\n    \"none\",\n    \"underline\",\n    \"overline\",\n    \"line-through\",\n    \"blink\",\n    \"inherit\",\n    \"initial\",\n    \"unset\"\n];\nclass TextDecoration extends Declaration {\n    /**\n   * Do not add prefixes for basic values.\n   */ check(decl) {\n        return decl.value.split(/\\s+/).some((i)=>!BASIC.includes(i));\n    }\n}\nTextDecoration.names = [\n    \"text-decoration\"\n];\nmodule.exports = TextDecoration;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90ZXh0LWRlY29yYXRpb24uanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLFFBQVE7SUFDWjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFRCxNQUFNQyx1QkFBdUJIO0lBQzNCOztHQUVDLEdBQ0RJLE1BQU1DLElBQUksRUFBRTtRQUNWLE9BQU9BLEtBQUtDLEtBQUssQ0FBQ0MsS0FBSyxDQUFDLE9BQU9DLElBQUksQ0FBQ0MsQ0FBQUEsSUFBSyxDQUFDUCxNQUFNUSxRQUFRLENBQUNEO0lBQzNEO0FBQ0Y7QUFFQU4sZUFBZVEsS0FBSyxHQUFHO0lBQUM7Q0FBa0I7QUFFMUNDLE9BQU9DLE9BQU8sR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90ZXh0LWRlY29yYXRpb24uanM/MWM0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNvbnN0IEJBU0lDID0gW1xuICAnbm9uZScsXG4gICd1bmRlcmxpbmUnLFxuICAnb3ZlcmxpbmUnLFxuICAnbGluZS10aHJvdWdoJyxcbiAgJ2JsaW5rJyxcbiAgJ2luaGVyaXQnLFxuICAnaW5pdGlhbCcsXG4gICd1bnNldCdcbl1cblxuY2xhc3MgVGV4dERlY29yYXRpb24gZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBEbyBub3QgYWRkIHByZWZpeGVzIGZvciBiYXNpYyB2YWx1ZXMuXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgcmV0dXJuIGRlY2wudmFsdWUuc3BsaXQoL1xccysvKS5zb21lKGkgPT4gIUJBU0lDLmluY2x1ZGVzKGkpKVxuICB9XG59XG5cblRleHREZWNvcmF0aW9uLm5hbWVzID0gWyd0ZXh0LWRlY29yYXRpb24nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFRleHREZWNvcmF0aW9uXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiQkFTSUMiLCJUZXh0RGVjb3JhdGlvbiIsImNoZWNrIiwiZGVjbCIsInZhbHVlIiwic3BsaXQiLCJzb21lIiwiaSIsImluY2x1ZGVzIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/text-decoration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/text-emphasis-position.js":
/*!***********************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/text-emphasis-position.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass TextEmphasisPosition extends Declaration {\n    set(decl, prefix) {\n        if (prefix === \"-webkit-\") {\n            decl.value = decl.value.replace(/\\s*(right|left)\\s*/i, \"\");\n        }\n        return super.set(decl, prefix);\n    }\n}\nTextEmphasisPosition.names = [\n    \"text-emphasis-position\"\n];\nmodule.exports = TextEmphasisPosition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90ZXh0LWVtcGhhc2lzLXBvc2l0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixNQUFNQyw2QkFBNkJGO0lBQ2pDRyxJQUFJQyxJQUFJLEVBQUVDLE1BQU0sRUFBRTtRQUNoQixJQUFJQSxXQUFXLFlBQVk7WUFDekJELEtBQUtFLEtBQUssR0FBR0YsS0FBS0UsS0FBSyxDQUFDQyxPQUFPLENBQUMsdUJBQXVCO1FBQ3pEO1FBQ0EsT0FBTyxLQUFLLENBQUNKLElBQUlDLE1BQU1DO0lBQ3pCO0FBQ0Y7QUFFQUgscUJBQXFCTSxLQUFLLEdBQUc7SUFBQztDQUF5QjtBQUV2REMsT0FBT0MsT0FBTyxHQUFHUiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL3RleHQtZW1waGFzaXMtcG9zaXRpb24uanM/N2QzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIFRleHRFbXBoYXNpc1Bvc2l0aW9uIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJykge1xuICAgICAgZGVjbC52YWx1ZSA9IGRlY2wudmFsdWUucmVwbGFjZSgvXFxzKihyaWdodHxsZWZ0KVxccyovaSwgJycpXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICB9XG59XG5cblRleHRFbXBoYXNpc1Bvc2l0aW9uLm5hbWVzID0gWyd0ZXh0LWVtcGhhc2lzLXBvc2l0aW9uJ11cblxubW9kdWxlLmV4cG9ydHMgPSBUZXh0RW1waGFzaXNQb3NpdGlvblxuIl0sIm5hbWVzIjpbIkRlY2xhcmF0aW9uIiwicmVxdWlyZSIsIlRleHRFbXBoYXNpc1Bvc2l0aW9uIiwic2V0IiwiZGVjbCIsInByZWZpeCIsInZhbHVlIiwicmVwbGFjZSIsIm5hbWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/text-emphasis-position.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/transform-decl.js":
/*!***************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/transform-decl.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass TransformDecl extends Declaration {\n    /**\n   * Is transform contain 3D commands\n   */ contain3d(decl) {\n        if (decl.prop === \"transform-origin\") {\n            return false;\n        }\n        for (let func of TransformDecl.functions3d){\n            if (decl.value.includes(`${func}(`)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * Don't add prefix for IE in keyframes\n   */ insert(decl, prefix, prefixes) {\n        if (prefix === \"-ms-\") {\n            if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n                return super.insert(decl, prefix, prefixes);\n            }\n        } else if (prefix === \"-o-\") {\n            if (!this.contain3d(decl)) {\n                return super.insert(decl, prefix, prefixes);\n            }\n        } else {\n            return super.insert(decl, prefix, prefixes);\n        }\n        return undefined;\n    }\n    /**\n   * Recursively check all parents for @keyframes\n   */ keyframeParents(decl) {\n        let { parent } = decl;\n        while(parent){\n            if (parent.type === \"atrule\" && parent.name === \"keyframes\") {\n                return true;\n            }\n            ;\n            ({ parent } = parent);\n        }\n        return false;\n    }\n    /**\n   * Replace rotateZ to rotate for IE 9\n   */ set(decl, prefix) {\n        decl = super.set(decl, prefix);\n        if (prefix === \"-ms-\") {\n            decl.value = decl.value.replace(/rotatez/gi, \"rotate\");\n        }\n        return decl;\n    }\n}\nTransformDecl.names = [\n    \"transform\",\n    \"transform-origin\"\n];\nTransformDecl.functions3d = [\n    \"matrix3d\",\n    \"translate3d\",\n    \"translateZ\",\n    \"scale3d\",\n    \"scaleZ\",\n    \"rotate3d\",\n    \"rotateX\",\n    \"rotateY\",\n    \"perspective\"\n];\nmodule.exports = TransformDecl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90cmFuc2Zvcm0tZGVjbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsc0JBQXNCRjtJQUMxQjs7R0FFQyxHQUNERyxVQUFVQyxJQUFJLEVBQUU7UUFDZCxJQUFJQSxLQUFLQyxJQUFJLEtBQUssb0JBQW9CO1lBQ3BDLE9BQU87UUFDVDtRQUVBLEtBQUssSUFBSUMsUUFBUUosY0FBY0ssV0FBVyxDQUFFO1lBQzFDLElBQUlILEtBQUtJLEtBQUssQ0FBQ0MsUUFBUSxDQUFDLENBQUMsRUFBRUgsS0FBSyxDQUFDLENBQUMsR0FBRztnQkFDbkMsT0FBTztZQUNUO1FBQ0Y7UUFFQSxPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNESSxPQUFPTixJQUFJLEVBQUVPLE1BQU0sRUFBRUMsUUFBUSxFQUFFO1FBQzdCLElBQUlELFdBQVcsUUFBUTtZQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDUixTQUFTLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUNTLGVBQWUsQ0FBQ1QsT0FBTztnQkFDeEQsT0FBTyxLQUFLLENBQUNNLE9BQU9OLE1BQU1PLFFBQVFDO1lBQ3BDO1FBQ0YsT0FBTyxJQUFJRCxXQUFXLE9BQU87WUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQ1IsU0FBUyxDQUFDQyxPQUFPO2dCQUN6QixPQUFPLEtBQUssQ0FBQ00sT0FBT04sTUFBTU8sUUFBUUM7WUFDcEM7UUFDRixPQUFPO1lBQ0wsT0FBTyxLQUFLLENBQUNGLE9BQU9OLE1BQU1PLFFBQVFDO1FBQ3BDO1FBQ0EsT0FBT0U7SUFDVDtJQUVBOztHQUVDLEdBQ0RELGdCQUFnQlQsSUFBSSxFQUFFO1FBQ3BCLElBQUksRUFBRVcsTUFBTSxFQUFFLEdBQUdYO1FBQ2pCLE1BQU9XLE9BQVE7WUFDYixJQUFJQSxPQUFPQyxJQUFJLEtBQUssWUFBWUQsT0FBT0UsSUFBSSxLQUFLLGFBQWE7Z0JBQzNELE9BQU87WUFDVDs7WUFDRSxHQUFFRixNQUFNLEVBQUUsR0FBR0EsTUFBSztRQUN0QjtRQUNBLE9BQU87SUFDVDtJQUVBOztHQUVDLEdBQ0RHLElBQUlkLElBQUksRUFBRU8sTUFBTSxFQUFFO1FBQ2hCUCxPQUFPLEtBQUssQ0FBQ2MsSUFBSWQsTUFBTU87UUFDdkIsSUFBSUEsV0FBVyxRQUFRO1lBQ3JCUCxLQUFLSSxLQUFLLEdBQUdKLEtBQUtJLEtBQUssQ0FBQ1csT0FBTyxDQUFDLGFBQWE7UUFDL0M7UUFDQSxPQUFPZjtJQUNUO0FBQ0Y7QUFFQUYsY0FBY2tCLEtBQUssR0FBRztJQUFDO0lBQWE7Q0FBbUI7QUFFdkRsQixjQUFjSyxXQUFXLEdBQUc7SUFDMUI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFRGMsT0FBT0MsT0FBTyxHQUFHcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90cmFuc2Zvcm0tZGVjbC5qcz8wODRiIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgVHJhbnNmb3JtRGVjbCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIElzIHRyYW5zZm9ybSBjb250YWluIDNEIGNvbW1hbmRzXG4gICAqL1xuICBjb250YWluM2QoZGVjbCkge1xuICAgIGlmIChkZWNsLnByb3AgPT09ICd0cmFuc2Zvcm0tb3JpZ2luJykge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgZm9yIChsZXQgZnVuYyBvZiBUcmFuc2Zvcm1EZWNsLmZ1bmN0aW9uczNkKSB7XG4gICAgICBpZiAoZGVjbC52YWx1ZS5pbmNsdWRlcyhgJHtmdW5jfShgKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLyoqXG4gICAqIERvbid0IGFkZCBwcmVmaXggZm9yIElFIGluIGtleWZyYW1lc1xuICAgKi9cbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLW1zLScpIHtcbiAgICAgIGlmICghdGhpcy5jb250YWluM2QoZGVjbCkgJiYgIXRoaXMua2V5ZnJhbWVQYXJlbnRzKGRlY2wpKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5pbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcylcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHByZWZpeCA9PT0gJy1vLScpIHtcbiAgICAgIGlmICghdGhpcy5jb250YWluM2QoZGVjbCkpIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWN1cnNpdmVseSBjaGVjayBhbGwgcGFyZW50cyBmb3IgQGtleWZyYW1lc1xuICAgKi9cbiAga2V5ZnJhbWVQYXJlbnRzKGRlY2wpIHtcbiAgICBsZXQgeyBwYXJlbnQgfSA9IGRlY2xcbiAgICB3aGlsZSAocGFyZW50KSB7XG4gICAgICBpZiAocGFyZW50LnR5cGUgPT09ICdhdHJ1bGUnICYmIHBhcmVudC5uYW1lID09PSAna2V5ZnJhbWVzJykge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgICAgOyh7IHBhcmVudCB9ID0gcGFyZW50KVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBsYWNlIHJvdGF0ZVogdG8gcm90YXRlIGZvciBJRSA5XG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgZGVjbCA9IHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICBkZWNsLnZhbHVlID0gZGVjbC52YWx1ZS5yZXBsYWNlKC9yb3RhdGV6L2dpLCAncm90YXRlJylcbiAgICB9XG4gICAgcmV0dXJuIGRlY2xcbiAgfVxufVxuXG5UcmFuc2Zvcm1EZWNsLm5hbWVzID0gWyd0cmFuc2Zvcm0nLCAndHJhbnNmb3JtLW9yaWdpbiddXG5cblRyYW5zZm9ybURlY2wuZnVuY3Rpb25zM2QgPSBbXG4gICdtYXRyaXgzZCcsXG4gICd0cmFuc2xhdGUzZCcsXG4gICd0cmFuc2xhdGVaJyxcbiAgJ3NjYWxlM2QnLFxuICAnc2NhbGVaJyxcbiAgJ3JvdGF0ZTNkJyxcbiAgJ3JvdGF0ZVgnLFxuICAncm90YXRlWScsXG4gICdwZXJzcGVjdGl2ZSdcbl1cblxubW9kdWxlLmV4cG9ydHMgPSBUcmFuc2Zvcm1EZWNsXG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiVHJhbnNmb3JtRGVjbCIsImNvbnRhaW4zZCIsImRlY2wiLCJwcm9wIiwiZnVuYyIsImZ1bmN0aW9uczNkIiwidmFsdWUiLCJpbmNsdWRlcyIsImluc2VydCIsInByZWZpeCIsInByZWZpeGVzIiwia2V5ZnJhbWVQYXJlbnRzIiwidW5kZWZpbmVkIiwicGFyZW50IiwidHlwZSIsIm5hbWUiLCJzZXQiLCJyZXBsYWNlIiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/transform-decl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/user-select.js":
/*!************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/user-select.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass UserSelect extends Declaration {\n    /**\n   * Avoid prefixing all in IE\n   */ insert(decl, prefix, prefixes) {\n        if (decl.value === \"all\" && prefix === \"-ms-\") {\n            return undefined;\n        } else if (decl.value === \"contain\" && (prefix === \"-moz-\" || prefix === \"-webkit-\")) {\n            return undefined;\n        } else {\n            return super.insert(decl, prefix, prefixes);\n        }\n    }\n    /**\n   * Change prefixed value for IE\n   */ set(decl, prefix) {\n        if (prefix === \"-ms-\" && decl.value === \"contain\") {\n            decl.value = \"element\";\n        }\n        return super.set(decl, prefix);\n    }\n}\nUserSelect.names = [\n    \"user-select\"\n];\nmodule.exports = UserSelect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy91c2VyLXNlbGVjdC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUIsTUFBTUMsbUJBQW1CRjtJQUN2Qjs7R0FFQyxHQUNERyxPQUFPQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFO1FBQzdCLElBQUlGLEtBQUtHLEtBQUssS0FBSyxTQUFTRixXQUFXLFFBQVE7WUFDN0MsT0FBT0c7UUFDVCxPQUFPLElBQ0xKLEtBQUtHLEtBQUssS0FBSyxhQUNkRixDQUFBQSxXQUFXLFdBQVdBLFdBQVcsVUFBUyxHQUMzQztZQUNBLE9BQU9HO1FBQ1QsT0FBTztZQUNMLE9BQU8sS0FBSyxDQUFDTCxPQUFPQyxNQUFNQyxRQUFRQztRQUNwQztJQUNGO0lBRUE7O0dBRUMsR0FDREcsSUFBSUwsSUFBSSxFQUFFQyxNQUFNLEVBQUU7UUFDaEIsSUFBSUEsV0FBVyxVQUFVRCxLQUFLRyxLQUFLLEtBQUssV0FBVztZQUNqREgsS0FBS0csS0FBSyxHQUFHO1FBQ2Y7UUFDQSxPQUFPLEtBQUssQ0FBQ0UsSUFBSUwsTUFBTUM7SUFDekI7QUFDRjtBQUVBSCxXQUFXUSxLQUFLLEdBQUc7SUFBQztDQUFjO0FBRWxDQyxPQUFPQyxPQUFPLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvdXNlci1zZWxlY3QuanM/ZThhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIFVzZXJTZWxlY3QgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBBdm9pZCBwcmVmaXhpbmcgYWxsIGluIElFXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcykge1xuICAgIGlmIChkZWNsLnZhbHVlID09PSAnYWxsJyAmJiBwcmVmaXggPT09ICctbXMtJykge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH0gZWxzZSBpZiAoXG4gICAgICBkZWNsLnZhbHVlID09PSAnY29udGFpbicgJiZcbiAgICAgIChwcmVmaXggPT09ICctbW96LScgfHwgcHJlZml4ID09PSAnLXdlYmtpdC0nKVxuICAgICkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcmVmaXhlZCB2YWx1ZSBmb3IgSUVcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLW1zLScgJiYgZGVjbC52YWx1ZSA9PT0gJ2NvbnRhaW4nKSB7XG4gICAgICBkZWNsLnZhbHVlID0gJ2VsZW1lbnQnXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICB9XG59XG5cblVzZXJTZWxlY3QubmFtZXMgPSBbJ3VzZXItc2VsZWN0J11cblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyU2VsZWN0XG4iXSwibmFtZXMiOlsiRGVjbGFyYXRpb24iLCJyZXF1aXJlIiwiVXNlclNlbGVjdCIsImluc2VydCIsImRlY2wiLCJwcmVmaXgiLCJwcmVmaXhlcyIsInZhbHVlIiwidW5kZWZpbmVkIiwic2V0IiwibmFtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/user-select.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/hacks/writing-mode.js":
/*!*************************************************************!*\
  !*** ./node_modules/autoprefixer/lib/hacks/writing-mode.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Declaration = __webpack_require__(/*! ../declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nclass WritingMode extends Declaration {\n    insert(decl, prefix, prefixes) {\n        if (prefix === \"-ms-\") {\n            let cloned = this.set(this.clone(decl), prefix);\n            if (this.needCascade(decl)) {\n                cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n            }\n            let direction = \"ltr\";\n            decl.parent.nodes.forEach((i)=>{\n                if (i.prop === \"direction\") {\n                    if (i.value === \"rtl\" || i.value === \"ltr\") direction = i.value;\n                }\n            });\n            cloned.value = WritingMode.msValues[direction][decl.value] || decl.value;\n            return decl.parent.insertBefore(decl, cloned);\n        }\n        return super.insert(decl, prefix, prefixes);\n    }\n}\nWritingMode.names = [\n    \"writing-mode\"\n];\nWritingMode.msValues = {\n    ltr: {\n        \"horizontal-tb\": \"lr-tb\",\n        \"vertical-lr\": \"tb-lr\",\n        \"vertical-rl\": \"tb-rl\"\n    },\n    rtl: {\n        \"horizontal-tb\": \"rl-tb\",\n        \"vertical-lr\": \"bt-lr\",\n        \"vertical-rl\": \"bt-rl\"\n    }\n};\nmodule.exports = WritingMode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy93cml0aW5nLW1vZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1DLG9CQUFvQkY7SUFDeEJHLE9BQU9DLElBQUksRUFBRUMsTUFBTSxFQUFFQyxRQUFRLEVBQUU7UUFDN0IsSUFBSUQsV0FBVyxRQUFRO1lBQ3JCLElBQUlFLFNBQVMsSUFBSSxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDQyxLQUFLLENBQUNMLE9BQU9DO1lBRXhDLElBQUksSUFBSSxDQUFDSyxXQUFXLENBQUNOLE9BQU87Z0JBQzFCRyxPQUFPSSxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJLENBQUNDLFVBQVUsQ0FBQ1AsVUFBVUYsTUFBTUM7WUFDdkQ7WUFDQSxJQUFJUyxZQUFZO1lBRWhCVixLQUFLVyxNQUFNLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDQyxDQUFBQTtnQkFDeEIsSUFBSUEsRUFBRUMsSUFBSSxLQUFLLGFBQWE7b0JBQzFCLElBQUlELEVBQUVFLEtBQUssS0FBSyxTQUFTRixFQUFFRSxLQUFLLEtBQUssT0FBT04sWUFBWUksRUFBRUUsS0FBSztnQkFDakU7WUFDRjtZQUVBYixPQUFPYSxLQUFLLEdBQUdsQixZQUFZbUIsUUFBUSxDQUFDUCxVQUFVLENBQUNWLEtBQUtnQixLQUFLLENBQUMsSUFBSWhCLEtBQUtnQixLQUFLO1lBQ3hFLE9BQU9oQixLQUFLVyxNQUFNLENBQUNPLFlBQVksQ0FBQ2xCLE1BQU1HO1FBQ3hDO1FBRUEsT0FBTyxLQUFLLENBQUNKLE9BQU9DLE1BQU1DLFFBQVFDO0lBQ3BDO0FBQ0Y7QUFFQUosWUFBWXFCLEtBQUssR0FBRztJQUFDO0NBQWU7QUFFcENyQixZQUFZbUIsUUFBUSxHQUFHO0lBQ3JCRyxLQUFLO1FBQ0gsaUJBQWlCO1FBQ2pCLGVBQWU7UUFDZixlQUFlO0lBQ2pCO0lBQ0FDLEtBQUs7UUFDSCxpQkFBaUI7UUFDakIsZUFBZTtRQUNmLGVBQWU7SUFDakI7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUd6QiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL3dyaXRpbmctbW9kZS5qcz9lMTE1Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgV3JpdGluZ01vZGUgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICBsZXQgY2xvbmVkID0gdGhpcy5zZXQodGhpcy5jbG9uZShkZWNsKSwgcHJlZml4KVxuXG4gICAgICBpZiAodGhpcy5uZWVkQ2FzY2FkZShkZWNsKSkge1xuICAgICAgICBjbG9uZWQucmF3cy5iZWZvcmUgPSB0aGlzLmNhbGNCZWZvcmUocHJlZml4ZXMsIGRlY2wsIHByZWZpeClcbiAgICAgIH1cbiAgICAgIGxldCBkaXJlY3Rpb24gPSAnbHRyJ1xuXG4gICAgICBkZWNsLnBhcmVudC5ub2Rlcy5mb3JFYWNoKGkgPT4ge1xuICAgICAgICBpZiAoaS5wcm9wID09PSAnZGlyZWN0aW9uJykge1xuICAgICAgICAgIGlmIChpLnZhbHVlID09PSAncnRsJyB8fCBpLnZhbHVlID09PSAnbHRyJykgZGlyZWN0aW9uID0gaS52YWx1ZVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBjbG9uZWQudmFsdWUgPSBXcml0aW5nTW9kZS5tc1ZhbHVlc1tkaXJlY3Rpb25dW2RlY2wudmFsdWVdIHx8IGRlY2wudmFsdWVcbiAgICAgIHJldHVybiBkZWNsLnBhcmVudC5pbnNlcnRCZWZvcmUoZGVjbCwgY2xvbmVkKVxuICAgIH1cblxuICAgIHJldHVybiBzdXBlci5pbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcylcbiAgfVxufVxuXG5Xcml0aW5nTW9kZS5uYW1lcyA9IFsnd3JpdGluZy1tb2RlJ11cblxuV3JpdGluZ01vZGUubXNWYWx1ZXMgPSB7XG4gIGx0cjoge1xuICAgICdob3Jpem9udGFsLXRiJzogJ2xyLXRiJyxcbiAgICAndmVydGljYWwtbHInOiAndGItbHInLFxuICAgICd2ZXJ0aWNhbC1ybCc6ICd0Yi1ybCdcbiAgfSxcbiAgcnRsOiB7XG4gICAgJ2hvcml6b250YWwtdGInOiAncmwtdGInLFxuICAgICd2ZXJ0aWNhbC1scic6ICdidC1scicsXG4gICAgJ3ZlcnRpY2FsLXJsJzogJ2J0LXJsJ1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gV3JpdGluZ01vZGVcbiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsInJlcXVpcmUiLCJXcml0aW5nTW9kZSIsImluc2VydCIsImRlY2wiLCJwcmVmaXgiLCJwcmVmaXhlcyIsImNsb25lZCIsInNldCIsImNsb25lIiwibmVlZENhc2NhZGUiLCJyYXdzIiwiYmVmb3JlIiwiY2FsY0JlZm9yZSIsImRpcmVjdGlvbiIsInBhcmVudCIsIm5vZGVzIiwiZm9yRWFjaCIsImkiLCJwcm9wIiwidmFsdWUiLCJtc1ZhbHVlcyIsImluc2VydEJlZm9yZSIsIm5hbWVzIiwibHRyIiwicnRsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/hacks/writing-mode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/info.js":
/*!***********************************************!*\
  !*** ./node_modules/autoprefixer/lib/info.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet browserslist = __webpack_require__(/*! browserslist */ \"(ssr)/./node_modules/browserslist/index.js\");\nfunction capitalize(str) {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\nconst NAMES = {\n    and_chr: \"Chrome for Android\",\n    and_ff: \"Firefox for Android\",\n    and_qq: \"QQ Browser\",\n    and_uc: \"UC for Android\",\n    baidu: \"Baidu Browser\",\n    ie: \"IE\",\n    ie_mob: \"IE Mobile\",\n    ios_saf: \"iOS Safari\",\n    kaios: \"KaiOS Browser\",\n    op_mini: \"Opera Mini\",\n    op_mob: \"Opera Mobile\",\n    samsung: \"Samsung Internet\"\n};\nfunction prefix(name, prefixes, note) {\n    let out = `  ${name}`;\n    if (note) out += \" *\";\n    out += \": \";\n    out += prefixes.map((i)=>i.replace(/^-(.*)-$/g, \"$1\")).join(\", \");\n    out += \"\\n\";\n    return out;\n}\nmodule.exports = function(prefixes) {\n    if (prefixes.browsers.selected.length === 0) {\n        return \"No browsers selected\";\n    }\n    let versions = {};\n    for (let browser of prefixes.browsers.selected){\n        let parts = browser.split(\" \");\n        let name = parts[0];\n        let version = parts[1];\n        name = NAMES[name] || capitalize(name);\n        if (versions[name]) {\n            versions[name].push(version);\n        } else {\n            versions[name] = [\n                version\n            ];\n        }\n    }\n    let out = \"Browsers:\\n\";\n    for(let browser in versions){\n        let list = versions[browser];\n        list = list.sort((a, b)=>parseFloat(b) - parseFloat(a));\n        out += `  ${browser}: ${list.join(\", \")}\\n`;\n    }\n    let coverage = browserslist.coverage(prefixes.browsers.selected);\n    let round = Math.round(coverage * 100) / 100.0;\n    out += `\\nThese browsers account for ${round}% of all users globally\\n`;\n    let atrules = [];\n    for(let name in prefixes.add){\n        let data = prefixes.add[name];\n        if (name[0] === \"@\" && data.prefixes) {\n            atrules.push(prefix(name, data.prefixes));\n        }\n    }\n    if (atrules.length > 0) {\n        out += `\\nAt-Rules:\\n${atrules.sort().join(\"\")}`;\n    }\n    let selectors = [];\n    for (let selector of prefixes.add.selectors){\n        if (selector.prefixes) {\n            selectors.push(prefix(selector.name, selector.prefixes));\n        }\n    }\n    if (selectors.length > 0) {\n        out += `\\nSelectors:\\n${selectors.sort().join(\"\")}`;\n    }\n    let values = [];\n    let props = [];\n    let hadGrid = false;\n    for(let name in prefixes.add){\n        let data = prefixes.add[name];\n        if (name[0] !== \"@\" && data.prefixes) {\n            let grid = name.indexOf(\"grid-\") === 0;\n            if (grid) hadGrid = true;\n            props.push(prefix(name, data.prefixes, grid));\n        }\n        if (!Array.isArray(data.values)) {\n            continue;\n        }\n        for (let value of data.values){\n            let grid = value.name.includes(\"grid\");\n            if (grid) hadGrid = true;\n            let string = prefix(value.name, value.prefixes, grid);\n            if (!values.includes(string)) {\n                values.push(string);\n            }\n        }\n    }\n    if (props.length > 0) {\n        out += `\\nProperties:\\n${props.sort().join(\"\")}`;\n    }\n    if (values.length > 0) {\n        out += `\\nValues:\\n${values.sort().join(\"\")}`;\n    }\n    if (hadGrid) {\n        out += \"\\n* - Prefixes will be added only on grid: true option.\\n\";\n    }\n    if (!atrules.length && !selectors.length && !props.length && !values.length) {\n        out += \"\\nAwesome! Your browsers don't require any vendor prefixes.\" + \"\\nNow you can remove Autoprefixer from build steps.\";\n    }\n    return out;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/info.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/old-selector.js":
/*!*******************************************************!*\
  !*** ./node_modules/autoprefixer/lib/old-selector.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\nclass OldSelector {\n    constructor(selector, prefix){\n        this.prefix = prefix;\n        this.prefixed = selector.prefixed(this.prefix);\n        this.regexp = selector.regexp(this.prefix);\n        this.prefixeds = selector.possible().map((x)=>[\n                selector.prefixed(x),\n                selector.regexp(x)\n            ]);\n        this.unprefixed = selector.name;\n        this.nameRegexp = selector.regexp();\n    }\n    /**\n   * Does rule contain an unnecessary prefixed selector\n   */ check(rule) {\n        if (!rule.selector.includes(this.prefixed)) {\n            return false;\n        }\n        if (!rule.selector.match(this.regexp)) {\n            return false;\n        }\n        if (this.isHack(rule)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n   * Is rule a hack without unprefixed version bottom\n   */ isHack(rule) {\n        let index = rule.parent.index(rule) + 1;\n        let rules = rule.parent.nodes;\n        while(index < rules.length){\n            let before = rules[index].selector;\n            if (!before) {\n                return true;\n            }\n            if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {\n                return false;\n            }\n            let some = false;\n            for (let [string, regexp] of this.prefixeds){\n                if (before.includes(string) && before.match(regexp)) {\n                    some = true;\n                    break;\n                }\n            }\n            if (!some) {\n                return true;\n            }\n            index += 1;\n        }\n        return true;\n    }\n}\nmodule.exports = OldSelector;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9vbGQtc2VsZWN0b3IuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BO0lBQ0pDLFlBQVlDLFFBQVEsRUFBRUMsTUFBTSxDQUFFO1FBQzVCLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ0MsUUFBUSxHQUFHRixTQUFTRSxRQUFRLENBQUMsSUFBSSxDQUFDRCxNQUFNO1FBQzdDLElBQUksQ0FBQ0UsTUFBTSxHQUFHSCxTQUFTRyxNQUFNLENBQUMsSUFBSSxDQUFDRixNQUFNO1FBRXpDLElBQUksQ0FBQ0csU0FBUyxHQUFHSixTQUNkSyxRQUFRLEdBQ1JDLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBSztnQkFBQ1AsU0FBU0UsUUFBUSxDQUFDSztnQkFBSVAsU0FBU0csTUFBTSxDQUFDSTthQUFHO1FBRXRELElBQUksQ0FBQ0MsVUFBVSxHQUFHUixTQUFTUyxJQUFJO1FBQy9CLElBQUksQ0FBQ0MsVUFBVSxHQUFHVixTQUFTRyxNQUFNO0lBQ25DO0lBRUE7O0dBRUMsR0FDRFEsTUFBTUMsSUFBSSxFQUFFO1FBQ1YsSUFBSSxDQUFDQSxLQUFLWixRQUFRLENBQUNhLFFBQVEsQ0FBQyxJQUFJLENBQUNYLFFBQVEsR0FBRztZQUMxQyxPQUFPO1FBQ1Q7UUFDQSxJQUFJLENBQUNVLEtBQUtaLFFBQVEsQ0FBQ2MsS0FBSyxDQUFDLElBQUksQ0FBQ1gsTUFBTSxHQUFHO1lBQ3JDLE9BQU87UUFDVDtRQUNBLElBQUksSUFBSSxDQUFDWSxNQUFNLENBQUNILE9BQU87WUFDckIsT0FBTztRQUNUO1FBQ0EsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDREcsT0FBT0gsSUFBSSxFQUFFO1FBQ1gsSUFBSUksUUFBUUosS0FBS0ssTUFBTSxDQUFDRCxLQUFLLENBQUNKLFFBQVE7UUFDdEMsSUFBSU0sUUFBUU4sS0FBS0ssTUFBTSxDQUFDRSxLQUFLO1FBRTdCLE1BQU9ILFFBQVFFLE1BQU1FLE1BQU0sQ0FBRTtZQUMzQixJQUFJQyxTQUFTSCxLQUFLLENBQUNGLE1BQU0sQ0FBQ2hCLFFBQVE7WUFDbEMsSUFBSSxDQUFDcUIsUUFBUTtnQkFDWCxPQUFPO1lBQ1Q7WUFFQSxJQUFJQSxPQUFPUixRQUFRLENBQUMsSUFBSSxDQUFDTCxVQUFVLEtBQUthLE9BQU9QLEtBQUssQ0FBQyxJQUFJLENBQUNKLFVBQVUsR0FBRztnQkFDckUsT0FBTztZQUNUO1lBRUEsSUFBSVksT0FBTztZQUNYLEtBQUssSUFBSSxDQUFDQyxRQUFRcEIsT0FBTyxJQUFJLElBQUksQ0FBQ0MsU0FBUyxDQUFFO2dCQUMzQyxJQUFJaUIsT0FBT1IsUUFBUSxDQUFDVSxXQUFXRixPQUFPUCxLQUFLLENBQUNYLFNBQVM7b0JBQ25EbUIsT0FBTztvQkFDUDtnQkFDRjtZQUNGO1lBRUEsSUFBSSxDQUFDQSxNQUFNO2dCQUNULE9BQU87WUFDVDtZQUVBTixTQUFTO1FBQ1g7UUFFQSxPQUFPO0lBQ1Q7QUFDRjtBQUVBUSxPQUFPQyxPQUFPLEdBQUczQiIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL29sZC1zZWxlY3Rvci5qcz8xNTMxIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIE9sZFNlbGVjdG9yIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3IsIHByZWZpeCkge1xuICAgIHRoaXMucHJlZml4ID0gcHJlZml4XG4gICAgdGhpcy5wcmVmaXhlZCA9IHNlbGVjdG9yLnByZWZpeGVkKHRoaXMucHJlZml4KVxuICAgIHRoaXMucmVnZXhwID0gc2VsZWN0b3IucmVnZXhwKHRoaXMucHJlZml4KVxuXG4gICAgdGhpcy5wcmVmaXhlZHMgPSBzZWxlY3RvclxuICAgICAgLnBvc3NpYmxlKClcbiAgICAgIC5tYXAoeCA9PiBbc2VsZWN0b3IucHJlZml4ZWQoeCksIHNlbGVjdG9yLnJlZ2V4cCh4KV0pXG5cbiAgICB0aGlzLnVucHJlZml4ZWQgPSBzZWxlY3Rvci5uYW1lXG4gICAgdGhpcy5uYW1lUmVnZXhwID0gc2VsZWN0b3IucmVnZXhwKClcbiAgfVxuXG4gIC8qKlxuICAgKiBEb2VzIHJ1bGUgY29udGFpbiBhbiB1bm5lY2Vzc2FyeSBwcmVmaXhlZCBzZWxlY3RvclxuICAgKi9cbiAgY2hlY2socnVsZSkge1xuICAgIGlmICghcnVsZS5zZWxlY3Rvci5pbmNsdWRlcyh0aGlzLnByZWZpeGVkKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIGlmICghcnVsZS5zZWxlY3Rvci5tYXRjaCh0aGlzLnJlZ2V4cCkpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICBpZiAodGhpcy5pc0hhY2socnVsZSkpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgLyoqXG4gICAqIElzIHJ1bGUgYSBoYWNrIHdpdGhvdXQgdW5wcmVmaXhlZCB2ZXJzaW9uIGJvdHRvbVxuICAgKi9cbiAgaXNIYWNrKHJ1bGUpIHtcbiAgICBsZXQgaW5kZXggPSBydWxlLnBhcmVudC5pbmRleChydWxlKSArIDFcbiAgICBsZXQgcnVsZXMgPSBydWxlLnBhcmVudC5ub2Rlc1xuXG4gICAgd2hpbGUgKGluZGV4IDwgcnVsZXMubGVuZ3RoKSB7XG4gICAgICBsZXQgYmVmb3JlID0gcnVsZXNbaW5kZXhdLnNlbGVjdG9yXG4gICAgICBpZiAoIWJlZm9yZSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuXG4gICAgICBpZiAoYmVmb3JlLmluY2x1ZGVzKHRoaXMudW5wcmVmaXhlZCkgJiYgYmVmb3JlLm1hdGNoKHRoaXMubmFtZVJlZ2V4cCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG5cbiAgICAgIGxldCBzb21lID0gZmFsc2VcbiAgICAgIGZvciAobGV0IFtzdHJpbmcsIHJlZ2V4cF0gb2YgdGhpcy5wcmVmaXhlZHMpIHtcbiAgICAgICAgaWYgKGJlZm9yZS5pbmNsdWRlcyhzdHJpbmcpICYmIGJlZm9yZS5tYXRjaChyZWdleHApKSB7XG4gICAgICAgICAgc29tZSA9IHRydWVcbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghc29tZSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuXG4gICAgICBpbmRleCArPSAxXG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWVcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9sZFNlbGVjdG9yXG4iXSwibmFtZXMiOlsiT2xkU2VsZWN0b3IiLCJjb25zdHJ1Y3RvciIsInNlbGVjdG9yIiwicHJlZml4IiwicHJlZml4ZWQiLCJyZWdleHAiLCJwcmVmaXhlZHMiLCJwb3NzaWJsZSIsIm1hcCIsIngiLCJ1bnByZWZpeGVkIiwibmFtZSIsIm5hbWVSZWdleHAiLCJjaGVjayIsInJ1bGUiLCJpbmNsdWRlcyIsIm1hdGNoIiwiaXNIYWNrIiwiaW5kZXgiLCJwYXJlbnQiLCJydWxlcyIsIm5vZGVzIiwibGVuZ3RoIiwiYmVmb3JlIiwic29tZSIsInN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/old-selector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/old-value.js":
/*!****************************************************!*\
  !*** ./node_modules/autoprefixer/lib/old-value.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass OldValue {\n    constructor(unprefixed, prefixed, string, regexp){\n        this.unprefixed = unprefixed;\n        this.prefixed = prefixed;\n        this.string = string || prefixed;\n        this.regexp = regexp || utils.regexp(prefixed);\n    }\n    /**\n   * Check, that value contain old value\n   */ check(value) {\n        if (value.includes(this.string)) {\n            return !!value.match(this.regexp);\n        }\n        return false;\n    }\n}\nmodule.exports = OldValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9vbGQtdmFsdWUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1DO0lBQ0pDLFlBQVlDLFVBQVUsRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sQ0FBRTtRQUNoRCxJQUFJLENBQUNILFVBQVUsR0FBR0E7UUFDbEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxVQUFVRDtRQUN4QixJQUFJLENBQUNFLE1BQU0sR0FBR0EsVUFBVVAsTUFBTU8sTUFBTSxDQUFDRjtJQUN2QztJQUVBOztHQUVDLEdBQ0RHLE1BQU1DLEtBQUssRUFBRTtRQUNYLElBQUlBLE1BQU1DLFFBQVEsQ0FBQyxJQUFJLENBQUNKLE1BQU0sR0FBRztZQUMvQixPQUFPLENBQUMsQ0FBQ0csTUFBTUUsS0FBSyxDQUFDLElBQUksQ0FBQ0osTUFBTTtRQUNsQztRQUNBLE9BQU87SUFDVDtBQUNGO0FBRUFLLE9BQU9DLE9BQU8sR0FBR1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9vbGQtdmFsdWUuanM/YzBlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuY2xhc3MgT2xkVmFsdWUge1xuICBjb25zdHJ1Y3Rvcih1bnByZWZpeGVkLCBwcmVmaXhlZCwgc3RyaW5nLCByZWdleHApIHtcbiAgICB0aGlzLnVucHJlZml4ZWQgPSB1bnByZWZpeGVkXG4gICAgdGhpcy5wcmVmaXhlZCA9IHByZWZpeGVkXG4gICAgdGhpcy5zdHJpbmcgPSBzdHJpbmcgfHwgcHJlZml4ZWRcbiAgICB0aGlzLnJlZ2V4cCA9IHJlZ2V4cCB8fCB1dGlscy5yZWdleHAocHJlZml4ZWQpXG4gIH1cblxuICAvKipcbiAgICogQ2hlY2ssIHRoYXQgdmFsdWUgY29udGFpbiBvbGQgdmFsdWVcbiAgICovXG4gIGNoZWNrKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlLmluY2x1ZGVzKHRoaXMuc3RyaW5nKSkge1xuICAgICAgcmV0dXJuICEhdmFsdWUubWF0Y2godGhpcy5yZWdleHApXG4gICAgfVxuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gT2xkVmFsdWVcbiJdLCJuYW1lcyI6WyJ1dGlscyIsInJlcXVpcmUiLCJPbGRWYWx1ZSIsImNvbnN0cnVjdG9yIiwidW5wcmVmaXhlZCIsInByZWZpeGVkIiwic3RyaW5nIiwicmVnZXhwIiwiY2hlY2siLCJ2YWx1ZSIsImluY2x1ZGVzIiwibWF0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/old-value.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/prefixer.js":
/*!***************************************************!*\
  !*** ./node_modules/autoprefixer/lib/prefixer.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Browsers = __webpack_require__(/*! ./browsers */ \"(ssr)/./node_modules/autoprefixer/lib/browsers.js\");\nlet vendor = __webpack_require__(/*! ./vendor */ \"(ssr)/./node_modules/autoprefixer/lib/vendor.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\n/**\n * Recursively clone objects\n */ function clone(obj, parent) {\n    let cloned = new obj.constructor();\n    for (let i of Object.keys(obj || {})){\n        let value = obj[i];\n        if (i === \"parent\" && typeof value === \"object\") {\n            if (parent) {\n                cloned[i] = parent;\n            }\n        } else if (i === \"source\" || i === null) {\n            cloned[i] = value;\n        } else if (Array.isArray(value)) {\n            cloned[i] = value.map((x)=>clone(x, cloned));\n        } else if (i !== \"_autoprefixerPrefix\" && i !== \"_autoprefixerValues\" && i !== \"proxyCache\") {\n            if (typeof value === \"object\" && value !== null) {\n                value = clone(value, cloned);\n            }\n            cloned[i] = value;\n        }\n    }\n    return cloned;\n}\nclass Prefixer {\n    constructor(name, prefixes, all){\n        this.prefixes = prefixes;\n        this.name = name;\n        this.all = all;\n    }\n    /**\n   * Clone node and clean autprefixer custom caches\n   */ static clone(node, overrides) {\n        let cloned = clone(node);\n        for(let name in overrides){\n            cloned[name] = overrides[name];\n        }\n        return cloned;\n    }\n    /**\n   * Add hack to selected names\n   */ static hack(klass) {\n        if (!this.hacks) {\n            this.hacks = {};\n        }\n        return klass.names.map((name)=>{\n            this.hacks[name] = klass;\n            return this.hacks[name];\n        });\n    }\n    /**\n   * Load hacks for some names\n   */ static load(name, prefixes, all) {\n        let Klass = this.hacks && this.hacks[name];\n        if (Klass) {\n            return new Klass(name, prefixes, all);\n        } else {\n            return new this(name, prefixes, all);\n        }\n    }\n    /**\n   * Shortcut for Prefixer.clone\n   */ clone(node, overrides) {\n        return Prefixer.clone(node, overrides);\n    }\n    /**\n   * Find prefix in node parents\n   */ parentPrefix(node) {\n        let prefix;\n        if (typeof node._autoprefixerPrefix !== \"undefined\") {\n            prefix = node._autoprefixerPrefix;\n        } else if (node.type === \"decl\" && node.prop[0] === \"-\") {\n            prefix = vendor.prefix(node.prop);\n        } else if (node.type === \"root\") {\n            prefix = false;\n        } else if (node.type === \"rule\" && node.selector.includes(\":-\") && /:(-\\w+-)/.test(node.selector)) {\n            prefix = node.selector.match(/:(-\\w+-)/)[1];\n        } else if (node.type === \"atrule\" && node.name[0] === \"-\") {\n            prefix = vendor.prefix(node.name);\n        } else {\n            prefix = this.parentPrefix(node.parent);\n        }\n        if (!Browsers.prefixes().includes(prefix)) {\n            prefix = false;\n        }\n        node._autoprefixerPrefix = prefix;\n        return node._autoprefixerPrefix;\n    }\n    /**\n   * Clone node with prefixes\n   */ process(node, result) {\n        if (!this.check(node)) {\n            return undefined;\n        }\n        let parent = this.parentPrefix(node);\n        let prefixes = this.prefixes.filter((prefix)=>!parent || parent === utils.removeNote(prefix));\n        let added = [];\n        for (let prefix of prefixes){\n            if (this.add(node, prefix, added.concat([\n                prefix\n            ]), result)) {\n                added.push(prefix);\n            }\n        }\n        return added;\n    }\n}\nmodule.exports = Prefixer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/prefixer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/prefixes.js":
/*!***************************************************!*\
  !*** ./node_modules/autoprefixer/lib/prefixes.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet vendor = __webpack_require__(/*! ./vendor */ \"(ssr)/./node_modules/autoprefixer/lib/vendor.js\");\nlet Declaration = __webpack_require__(/*! ./declaration */ \"(ssr)/./node_modules/autoprefixer/lib/declaration.js\");\nlet Resolution = __webpack_require__(/*! ./resolution */ \"(ssr)/./node_modules/autoprefixer/lib/resolution.js\");\nlet Transition = __webpack_require__(/*! ./transition */ \"(ssr)/./node_modules/autoprefixer/lib/transition.js\");\nlet Processor = __webpack_require__(/*! ./processor */ \"(ssr)/./node_modules/autoprefixer/lib/processor.js\");\nlet Supports = __webpack_require__(/*! ./supports */ \"(ssr)/./node_modules/autoprefixer/lib/supports.js\");\nlet Browsers = __webpack_require__(/*! ./browsers */ \"(ssr)/./node_modules/autoprefixer/lib/browsers.js\");\nlet Selector = __webpack_require__(/*! ./selector */ \"(ssr)/./node_modules/autoprefixer/lib/selector.js\");\nlet AtRule = __webpack_require__(/*! ./at-rule */ \"(ssr)/./node_modules/autoprefixer/lib/at-rule.js\");\nlet Value = __webpack_require__(/*! ./value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nlet hackFullscreen = __webpack_require__(/*! ./hacks/fullscreen */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/fullscreen.js\");\nlet hackPlaceholder = __webpack_require__(/*! ./hacks/placeholder */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/placeholder.js\");\nlet hackPlaceholderShown = __webpack_require__(/*! ./hacks/placeholder-shown */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/placeholder-shown.js\");\nlet hackFileSelectorButton = __webpack_require__(/*! ./hacks/file-selector-button */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/file-selector-button.js\");\nlet hackFlex = __webpack_require__(/*! ./hacks/flex */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex.js\");\nlet hackOrder = __webpack_require__(/*! ./hacks/order */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/order.js\");\nlet hackFilter = __webpack_require__(/*! ./hacks/filter */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/filter.js\");\nlet hackGridEnd = __webpack_require__(/*! ./hacks/grid-end */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-end.js\");\nlet hackAnimation = __webpack_require__(/*! ./hacks/animation */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/animation.js\");\nlet hackFlexFlow = __webpack_require__(/*! ./hacks/flex-flow */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-flow.js\");\nlet hackFlexGrow = __webpack_require__(/*! ./hacks/flex-grow */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-grow.js\");\nlet hackFlexWrap = __webpack_require__(/*! ./hacks/flex-wrap */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-wrap.js\");\nlet hackGridArea = __webpack_require__(/*! ./hacks/grid-area */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-area.js\");\nlet hackPlaceSelf = __webpack_require__(/*! ./hacks/place-self */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/place-self.js\");\nlet hackGridStart = __webpack_require__(/*! ./hacks/grid-start */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-start.js\");\nlet hackAlignSelf = __webpack_require__(/*! ./hacks/align-self */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/align-self.js\");\nlet hackAppearance = __webpack_require__(/*! ./hacks/appearance */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/appearance.js\");\nlet hackFlexBasis = __webpack_require__(/*! ./hacks/flex-basis */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-basis.js\");\nlet hackMaskBorder = __webpack_require__(/*! ./hacks/mask-border */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/mask-border.js\");\nlet hackMaskComposite = __webpack_require__(/*! ./hacks/mask-composite */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/mask-composite.js\");\nlet hackAlignItems = __webpack_require__(/*! ./hacks/align-items */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/align-items.js\");\nlet hackUserSelect = __webpack_require__(/*! ./hacks/user-select */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/user-select.js\");\nlet hackFlexShrink = __webpack_require__(/*! ./hacks/flex-shrink */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-shrink.js\");\nlet hackBreakProps = __webpack_require__(/*! ./hacks/break-props */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/break-props.js\");\nlet hackWritingMode = __webpack_require__(/*! ./hacks/writing-mode */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/writing-mode.js\");\nlet hackBorderImage = __webpack_require__(/*! ./hacks/border-image */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/border-image.js\");\nlet hackAlignContent = __webpack_require__(/*! ./hacks/align-content */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/align-content.js\");\nlet hackBorderRadius = __webpack_require__(/*! ./hacks/border-radius */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/border-radius.js\");\nlet hackBlockLogical = __webpack_require__(/*! ./hacks/block-logical */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/block-logical.js\");\nlet hackGridTemplate = __webpack_require__(/*! ./hacks/grid-template */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-template.js\");\nlet hackInlineLogical = __webpack_require__(/*! ./hacks/inline-logical */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/inline-logical.js\");\nlet hackGridRowAlign = __webpack_require__(/*! ./hacks/grid-row-align */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-row-align.js\");\nlet hackTransformDecl = __webpack_require__(/*! ./hacks/transform-decl */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/transform-decl.js\");\nlet hackFlexDirection = __webpack_require__(/*! ./hacks/flex-direction */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/flex-direction.js\");\nlet hackImageRendering = __webpack_require__(/*! ./hacks/image-rendering */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/image-rendering.js\");\nlet hackBackdropFilter = __webpack_require__(/*! ./hacks/backdrop-filter */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/backdrop-filter.js\");\nlet hackBackgroundClip = __webpack_require__(/*! ./hacks/background-clip */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/background-clip.js\");\nlet hackTextDecoration = __webpack_require__(/*! ./hacks/text-decoration */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/text-decoration.js\");\nlet hackJustifyContent = __webpack_require__(/*! ./hacks/justify-content */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/justify-content.js\");\nlet hackBackgroundSize = __webpack_require__(/*! ./hacks/background-size */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/background-size.js\");\nlet hackGridRowColumn = __webpack_require__(/*! ./hacks/grid-row-column */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-row-column.js\");\nlet hackGridRowsColumns = __webpack_require__(/*! ./hacks/grid-rows-columns */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-rows-columns.js\");\nlet hackGridColumnAlign = __webpack_require__(/*! ./hacks/grid-column-align */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-column-align.js\");\nlet hackPrintColorAdjust = __webpack_require__(/*! ./hacks/print-color-adjust */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/print-color-adjust.js\");\nlet hackOverscrollBehavior = __webpack_require__(/*! ./hacks/overscroll-behavior */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/overscroll-behavior.js\");\nlet hackGridTemplateAreas = __webpack_require__(/*! ./hacks/grid-template-areas */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-template-areas.js\");\nlet hackTextEmphasisPosition = __webpack_require__(/*! ./hacks/text-emphasis-position */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/text-emphasis-position.js\");\nlet hackTextDecorationSkipInk = __webpack_require__(/*! ./hacks/text-decoration-skip-ink */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js\");\nlet hackGradient = __webpack_require__(/*! ./hacks/gradient */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/gradient.js\");\nlet hackIntrinsic = __webpack_require__(/*! ./hacks/intrinsic */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/intrinsic.js\");\nlet hackPixelated = __webpack_require__(/*! ./hacks/pixelated */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/pixelated.js\");\nlet hackImageSet = __webpack_require__(/*! ./hacks/image-set */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/image-set.js\");\nlet hackCrossFade = __webpack_require__(/*! ./hacks/cross-fade */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/cross-fade.js\");\nlet hackDisplayFlex = __webpack_require__(/*! ./hacks/display-flex */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/display-flex.js\");\nlet hackDisplayGrid = __webpack_require__(/*! ./hacks/display-grid */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/display-grid.js\");\nlet hackFilterValue = __webpack_require__(/*! ./hacks/filter-value */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/filter-value.js\");\nlet hackAutofill = __webpack_require__(/*! ./hacks/autofill */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/autofill.js\");\nSelector.hack(hackAutofill);\nSelector.hack(hackFullscreen);\nSelector.hack(hackPlaceholder);\nSelector.hack(hackPlaceholderShown);\nSelector.hack(hackFileSelectorButton);\nDeclaration.hack(hackFlex);\nDeclaration.hack(hackOrder);\nDeclaration.hack(hackFilter);\nDeclaration.hack(hackGridEnd);\nDeclaration.hack(hackAnimation);\nDeclaration.hack(hackFlexFlow);\nDeclaration.hack(hackFlexGrow);\nDeclaration.hack(hackFlexWrap);\nDeclaration.hack(hackGridArea);\nDeclaration.hack(hackPlaceSelf);\nDeclaration.hack(hackGridStart);\nDeclaration.hack(hackAlignSelf);\nDeclaration.hack(hackAppearance);\nDeclaration.hack(hackFlexBasis);\nDeclaration.hack(hackMaskBorder);\nDeclaration.hack(hackMaskComposite);\nDeclaration.hack(hackAlignItems);\nDeclaration.hack(hackUserSelect);\nDeclaration.hack(hackFlexShrink);\nDeclaration.hack(hackBreakProps);\nDeclaration.hack(hackWritingMode);\nDeclaration.hack(hackBorderImage);\nDeclaration.hack(hackAlignContent);\nDeclaration.hack(hackBorderRadius);\nDeclaration.hack(hackBlockLogical);\nDeclaration.hack(hackGridTemplate);\nDeclaration.hack(hackInlineLogical);\nDeclaration.hack(hackGridRowAlign);\nDeclaration.hack(hackTransformDecl);\nDeclaration.hack(hackFlexDirection);\nDeclaration.hack(hackImageRendering);\nDeclaration.hack(hackBackdropFilter);\nDeclaration.hack(hackBackgroundClip);\nDeclaration.hack(hackTextDecoration);\nDeclaration.hack(hackJustifyContent);\nDeclaration.hack(hackBackgroundSize);\nDeclaration.hack(hackGridRowColumn);\nDeclaration.hack(hackGridRowsColumns);\nDeclaration.hack(hackGridColumnAlign);\nDeclaration.hack(hackOverscrollBehavior);\nDeclaration.hack(hackGridTemplateAreas);\nDeclaration.hack(hackPrintColorAdjust);\nDeclaration.hack(hackTextEmphasisPosition);\nDeclaration.hack(hackTextDecorationSkipInk);\nValue.hack(hackGradient);\nValue.hack(hackIntrinsic);\nValue.hack(hackPixelated);\nValue.hack(hackImageSet);\nValue.hack(hackCrossFade);\nValue.hack(hackDisplayFlex);\nValue.hack(hackDisplayGrid);\nValue.hack(hackFilterValue);\nlet declsCache = new Map();\nclass Prefixes {\n    constructor(data, browsers, options = {}){\n        this.data = data;\n        this.browsers = browsers;\n        this.options = options;\n        [this.add, this.remove] = this.preprocess(this.select(this.data));\n        this.transition = new Transition(this);\n        this.processor = new Processor(this);\n    }\n    /**\n   * Return clone instance to remove all prefixes\n   */ cleaner() {\n        if (this.cleanerCache) {\n            return this.cleanerCache;\n        }\n        if (this.browsers.selected.length) {\n            let empty = new Browsers(this.browsers.data, []);\n            this.cleanerCache = new Prefixes(this.data, empty, this.options);\n        } else {\n            return this;\n        }\n        return this.cleanerCache;\n    }\n    /**\n   * Declaration loader with caching\n   */ decl(prop) {\n        if (!declsCache.has(prop)) {\n            declsCache.set(prop, Declaration.load(prop));\n        }\n        return declsCache.get(prop);\n    }\n    /**\n   * Group declaration by unprefixed property to check them\n   */ group(decl) {\n        let rule = decl.parent;\n        let index = rule.index(decl);\n        let { length } = rule.nodes;\n        let unprefixed = this.unprefixed(decl.prop);\n        let checker = (step, callback)=>{\n            index += step;\n            while(index >= 0 && index < length){\n                let other = rule.nodes[index];\n                if (other.type === \"decl\") {\n                    if (step === -1 && other.prop === unprefixed) {\n                        if (!Browsers.withPrefix(other.value)) {\n                            break;\n                        }\n                    }\n                    if (this.unprefixed(other.prop) !== unprefixed) {\n                        break;\n                    } else if (callback(other) === true) {\n                        return true;\n                    }\n                    if (step === +1 && other.prop === unprefixed) {\n                        if (!Browsers.withPrefix(other.value)) {\n                            break;\n                        }\n                    }\n                }\n                index += step;\n            }\n            return false;\n        };\n        return {\n            down (callback) {\n                return checker(+1, callback);\n            },\n            up (callback) {\n                return checker(-1, callback);\n            }\n        };\n    }\n    /**\n   * Normalize prefix for remover\n   */ normalize(prop) {\n        return this.decl(prop).normalize(prop);\n    }\n    /**\n   * Return prefixed version of property\n   */ prefixed(prop, prefix) {\n        prop = vendor.unprefixed(prop);\n        return this.decl(prop).prefixed(prop, prefix);\n    }\n    /**\n   * Cache prefixes data to fast CSS processing\n   */ preprocess(selected) {\n        let add = {\n            \"@supports\": new Supports(Prefixes, this),\n            \"selectors\": []\n        };\n        for(let name in selected.add){\n            let prefixes = selected.add[name];\n            if (name === \"@keyframes\" || name === \"@viewport\") {\n                add[name] = new AtRule(name, prefixes, this);\n            } else if (name === \"@resolution\") {\n                add[name] = new Resolution(name, prefixes, this);\n            } else if (this.data[name].selector) {\n                add.selectors.push(Selector.load(name, prefixes, this));\n            } else {\n                let props = this.data[name].props;\n                if (props) {\n                    let value = Value.load(name, prefixes, this);\n                    for (let prop of props){\n                        if (!add[prop]) {\n                            add[prop] = {\n                                values: []\n                            };\n                        }\n                        add[prop].values.push(value);\n                    }\n                } else {\n                    let values = add[name] && add[name].values || [];\n                    add[name] = Declaration.load(name, prefixes, this);\n                    add[name].values = values;\n                }\n            }\n        }\n        let remove = {\n            selectors: []\n        };\n        for(let name in selected.remove){\n            let prefixes = selected.remove[name];\n            if (this.data[name].selector) {\n                let selector = Selector.load(name, prefixes);\n                for (let prefix of prefixes){\n                    remove.selectors.push(selector.old(prefix));\n                }\n            } else if (name === \"@keyframes\" || name === \"@viewport\") {\n                for (let prefix of prefixes){\n                    let prefixed = `@${prefix}${name.slice(1)}`;\n                    remove[prefixed] = {\n                        remove: true\n                    };\n                }\n            } else if (name === \"@resolution\") {\n                remove[name] = new Resolution(name, prefixes, this);\n            } else {\n                let props = this.data[name].props;\n                if (props) {\n                    let value = Value.load(name, [], this);\n                    for (let prefix of prefixes){\n                        let old = value.old(prefix);\n                        if (old) {\n                            for (let prop of props){\n                                if (!remove[prop]) {\n                                    remove[prop] = {};\n                                }\n                                if (!remove[prop].values) {\n                                    remove[prop].values = [];\n                                }\n                                remove[prop].values.push(old);\n                            }\n                        }\n                    }\n                } else {\n                    for (let p of prefixes){\n                        let olds = this.decl(name).old(name, p);\n                        if (name === \"align-self\") {\n                            let a = add[name] && add[name].prefixes;\n                            if (a) {\n                                if (p === \"-webkit- 2009\" && a.includes(\"-webkit-\")) {\n                                    continue;\n                                } else if (p === \"-webkit-\" && a.includes(\"-webkit- 2009\")) {\n                                    continue;\n                                }\n                            }\n                        }\n                        for (let prefixed of olds){\n                            if (!remove[prefixed]) {\n                                remove[prefixed] = {};\n                            }\n                            remove[prefixed].remove = true;\n                        }\n                    }\n                }\n            }\n        }\n        return [\n            add,\n            remove\n        ];\n    }\n    /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */ select(list) {\n        let selected = {\n            add: {},\n            remove: {}\n        };\n        for(let name in list){\n            let data = list[name];\n            let add = data.browsers.map((i)=>{\n                let params = i.split(\" \");\n                return {\n                    browser: `${params[0]} ${params[1]}`,\n                    note: params[2]\n                };\n            });\n            let notes = add.filter((i)=>i.note).map((i)=>`${this.browsers.prefix(i.browser)} ${i.note}`);\n            notes = utils.uniq(notes);\n            add = add.filter((i)=>this.browsers.isSelected(i.browser)).map((i)=>{\n                let prefix = this.browsers.prefix(i.browser);\n                if (i.note) {\n                    return `${prefix} ${i.note}`;\n                } else {\n                    return prefix;\n                }\n            });\n            add = this.sort(utils.uniq(add));\n            if (this.options.flexbox === \"no-2009\") {\n                add = add.filter((i)=>!i.includes(\"2009\"));\n            }\n            let all = data.browsers.map((i)=>this.browsers.prefix(i));\n            if (data.mistakes) {\n                all = all.concat(data.mistakes);\n            }\n            all = all.concat(notes);\n            all = utils.uniq(all);\n            if (add.length) {\n                selected.add[name] = add;\n                if (add.length < all.length) {\n                    selected.remove[name] = all.filter((i)=>!add.includes(i));\n                }\n            } else {\n                selected.remove[name] = all;\n            }\n        }\n        return selected;\n    }\n    /**\n   * Sort vendor prefixes\n   */ sort(prefixes) {\n        return prefixes.sort((a, b)=>{\n            let aLength = utils.removeNote(a).length;\n            let bLength = utils.removeNote(b).length;\n            if (aLength === bLength) {\n                return b.length - a.length;\n            } else {\n                return bLength - aLength;\n            }\n        });\n    }\n    /**\n   * Return unprefixed version of property\n   */ unprefixed(prop) {\n        let value = this.normalize(vendor.unprefixed(prop));\n        if (value === \"flex-direction\") {\n            value = \"flex-flow\";\n        }\n        return value;\n    }\n    /**\n   * Return values, which must be prefixed in selected property\n   */ values(type, prop) {\n        let data = this[type];\n        let global = data[\"*\"] && data[\"*\"].values;\n        let values = data[prop] && data[prop].values;\n        if (global && values) {\n            return utils.uniq(global.concat(values));\n        } else {\n            return global || values || [];\n        }\n    }\n}\nmodule.exports = Prefixes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/prefixes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/processor.js":
/*!****************************************************!*\
  !*** ./node_modules/autoprefixer/lib/processor.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet parser = __webpack_require__(/*! postcss-value-parser */ \"(ssr)/./node_modules/postcss-value-parser/lib/index.js\");\nlet Value = __webpack_require__(/*! ./value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nlet insertAreas = (__webpack_require__(/*! ./hacks/grid-utils */ \"(ssr)/./node_modules/autoprefixer/lib/hacks/grid-utils.js\").insertAreas);\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i;\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i;\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i;\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i;\nconst SIZES = [\n    \"width\",\n    \"height\",\n    \"min-width\",\n    \"max-width\",\n    \"min-height\",\n    \"max-height\",\n    \"inline-size\",\n    \"min-inline-size\",\n    \"max-inline-size\",\n    \"block-size\",\n    \"min-block-size\",\n    \"max-block-size\"\n];\nfunction hasGridTemplate(decl) {\n    return decl.parent.some((i)=>i.prop === \"grid-template\" || i.prop === \"grid-template-areas\");\n}\nfunction hasRowsAndColumns(decl) {\n    let hasRows = decl.parent.some((i)=>i.prop === \"grid-template-rows\");\n    let hasColumns = decl.parent.some((i)=>i.prop === \"grid-template-columns\");\n    return hasRows && hasColumns;\n}\nclass Processor {\n    constructor(prefixes){\n        this.prefixes = prefixes;\n    }\n    /**\n   * Add necessary prefixes\n   */ add(css, result) {\n        // At-rules\n        let resolution = this.prefixes.add[\"@resolution\"];\n        let keyframes = this.prefixes.add[\"@keyframes\"];\n        let viewport = this.prefixes.add[\"@viewport\"];\n        let supports = this.prefixes.add[\"@supports\"];\n        css.walkAtRules((rule)=>{\n            if (rule.name === \"keyframes\") {\n                if (!this.disabled(rule, result)) {\n                    return keyframes && keyframes.process(rule);\n                }\n            } else if (rule.name === \"viewport\") {\n                if (!this.disabled(rule, result)) {\n                    return viewport && viewport.process(rule);\n                }\n            } else if (rule.name === \"supports\") {\n                if (this.prefixes.options.supports !== false && !this.disabled(rule, result)) {\n                    return supports.process(rule);\n                }\n            } else if (rule.name === \"media\" && rule.params.includes(\"-resolution\")) {\n                if (!this.disabled(rule, result)) {\n                    return resolution && resolution.process(rule);\n                }\n            }\n            return undefined;\n        });\n        // Selectors\n        css.walkRules((rule)=>{\n            if (this.disabled(rule, result)) return undefined;\n            return this.prefixes.add.selectors.map((selector)=>{\n                return selector.process(rule, result);\n            });\n        });\n        function insideGrid(decl) {\n            return decl.parent.nodes.some((node)=>{\n                if (node.type !== \"decl\") return false;\n                let displayGrid = node.prop === \"display\" && /(inline-)?grid/.test(node.value);\n                let gridTemplate = node.prop.startsWith(\"grid-template\");\n                let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop);\n                return displayGrid || gridTemplate || gridGap;\n            });\n        }\n        let gridPrefixes = this.gridStatus(css, result) && this.prefixes.add[\"grid-area\"] && this.prefixes.add[\"grid-area\"].prefixes;\n        css.walkDecls((decl)=>{\n            if (this.disabledDecl(decl, result)) return undefined;\n            let parent = decl.parent;\n            let prop = decl.prop;\n            let value = decl.value;\n            if (prop === \"color-adjust\") {\n                if (parent.every((i)=>i.prop !== \"print-color-adjust\")) {\n                    result.warn(\"Replace color-adjust to print-color-adjust. \" + \"The color-adjust shorthand is currently deprecated.\", {\n                        node: decl\n                    });\n                }\n            } else if (prop === \"grid-row-span\") {\n                result.warn(\"grid-row-span is not part of final Grid Layout. Use grid-row.\", {\n                    node: decl\n                });\n                return undefined;\n            } else if (prop === \"grid-column-span\") {\n                result.warn(\"grid-column-span is not part of final Grid Layout. Use grid-column.\", {\n                    node: decl\n                });\n                return undefined;\n            } else if (prop === \"display\" && value === \"box\") {\n                result.warn(\"You should write display: flex by final spec \" + \"instead of display: box\", {\n                    node: decl\n                });\n                return undefined;\n            } else if (prop === \"text-emphasis-position\") {\n                if (value === \"under\" || value === \"over\") {\n                    result.warn(\"You should use 2 values for text-emphasis-position \" + \"For example, `under left` instead of just `under`.\", {\n                        node: decl\n                    });\n                }\n            } else if (prop === \"text-decoration-skip\" && value === \"ink\") {\n                result.warn(\"Replace text-decoration-skip: ink to \" + \"text-decoration-skip-ink: auto, because spec had been changed\", {\n                    node: decl\n                });\n            } else {\n                if (gridPrefixes && this.gridStatus(decl, result)) {\n                    if (decl.value === \"subgrid\") {\n                        result.warn(\"IE does not support subgrid\", {\n                            node: decl\n                        });\n                    }\n                    if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n                        let fixed = prop.replace(\"-items\", \"-self\");\n                        result.warn(`IE does not support ${prop} on grid containers. ` + `Try using ${fixed} on child elements instead: ` + `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`, {\n                            node: decl\n                        });\n                    } else if (/^(align|justify|place)-content$/.test(prop) && insideGrid(decl)) {\n                        result.warn(`IE does not support ${decl.prop} on grid containers`, {\n                            node: decl\n                        });\n                    } else if (prop === \"display\" && decl.value === \"contents\") {\n                        result.warn(\"Please do not use display: contents; \" + \"if you have grid setting enabled\", {\n                            node: decl\n                        });\n                        return undefined;\n                    } else if (decl.prop === \"grid-gap\") {\n                        let status = this.gridStatus(decl, result);\n                        if (status === \"autoplace\" && !hasRowsAndColumns(decl) && !hasGridTemplate(decl)) {\n                            result.warn(\"grid-gap only works if grid-template(-areas) is being \" + \"used or both rows and columns have been declared \" + \"and cells have not been manually \" + \"placed inside the explicit grid\", {\n                                node: decl\n                            });\n                        } else if ((status === true || status === \"no-autoplace\") && !hasGridTemplate(decl)) {\n                            result.warn(\"grid-gap only works if grid-template(-areas) is being used\", {\n                                node: decl\n                            });\n                        }\n                    } else if (prop === \"grid-auto-columns\") {\n                        result.warn(\"grid-auto-columns is not supported by IE\", {\n                            node: decl\n                        });\n                        return undefined;\n                    } else if (prop === \"grid-auto-rows\") {\n                        result.warn(\"grid-auto-rows is not supported by IE\", {\n                            node: decl\n                        });\n                        return undefined;\n                    } else if (prop === \"grid-auto-flow\") {\n                        let hasRows = parent.some((i)=>i.prop === \"grid-template-rows\");\n                        let hasCols = parent.some((i)=>i.prop === \"grid-template-columns\");\n                        if (hasGridTemplate(decl)) {\n                            result.warn(\"grid-auto-flow is not supported by IE\", {\n                                node: decl\n                            });\n                        } else if (value.includes(\"dense\")) {\n                            result.warn(\"grid-auto-flow: dense is not supported by IE\", {\n                                node: decl\n                            });\n                        } else if (!hasRows && !hasCols) {\n                            result.warn(\"grid-auto-flow works only if grid-template-rows and \" + \"grid-template-columns are present in the same rule\", {\n                                node: decl\n                            });\n                        }\n                        return undefined;\n                    } else if (value.includes(\"auto-fit\")) {\n                        result.warn(\"auto-fit value is not supported by IE\", {\n                            node: decl,\n                            word: \"auto-fit\"\n                        });\n                        return undefined;\n                    } else if (value.includes(\"auto-fill\")) {\n                        result.warn(\"auto-fill value is not supported by IE\", {\n                            node: decl,\n                            word: \"auto-fill\"\n                        });\n                        return undefined;\n                    } else if (prop.startsWith(\"grid-template\") && value.includes(\"[\")) {\n                        result.warn(\"Autoprefixer currently does not support line names. \" + \"Try using grid-template-areas instead.\", {\n                            node: decl,\n                            word: \"[\"\n                        });\n                    }\n                }\n                if (value.includes(\"radial-gradient\")) {\n                    if (OLD_RADIAL.test(decl.value)) {\n                        result.warn(\"Gradient has outdated direction syntax. \" + \"New syntax is like `closest-side at 0 0` \" + \"instead of `0 0, closest-side`.\", {\n                            node: decl\n                        });\n                    } else {\n                        let ast = parser(value);\n                        for (let i of ast.nodes){\n                            if (i.type === \"function\" && i.value === \"radial-gradient\") {\n                                for (let word of i.nodes){\n                                    if (word.type === \"word\") {\n                                        if (word.value === \"cover\") {\n                                            result.warn(\"Gradient has outdated direction syntax. \" + \"Replace `cover` to `farthest-corner`.\", {\n                                                node: decl\n                                            });\n                                        } else if (word.value === \"contain\") {\n                                            result.warn(\"Gradient has outdated direction syntax. \" + \"Replace `contain` to `closest-side`.\", {\n                                                node: decl\n                                            });\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (value.includes(\"linear-gradient\")) {\n                    if (OLD_LINEAR.test(value)) {\n                        result.warn(\"Gradient has outdated direction syntax. \" + \"New syntax is like `to left` instead of `right`.\", {\n                            node: decl\n                        });\n                    }\n                }\n            }\n            if (SIZES.includes(decl.prop)) {\n                if (!decl.value.includes(\"-fill-available\")) {\n                    if (decl.value.includes(\"fill-available\")) {\n                        result.warn(\"Replace fill-available to stretch, \" + \"because spec had been changed\", {\n                            node: decl\n                        });\n                    } else if (decl.value.includes(\"fill\")) {\n                        let ast = parser(value);\n                        if (ast.nodes.some((i)=>i.type === \"word\" && i.value === \"fill\")) {\n                            result.warn(\"Replace fill to stretch, because spec had been changed\", {\n                                node: decl\n                            });\n                        }\n                    }\n                }\n            }\n            let prefixer;\n            if (decl.prop === \"transition\" || decl.prop === \"transition-property\") {\n                // Transition\n                return this.prefixes.transition.add(decl, result);\n            } else if (decl.prop === \"align-self\") {\n                // align-self flexbox or grid\n                let display = this.displayType(decl);\n                if (display !== \"grid\" && this.prefixes.options.flexbox !== false) {\n                    prefixer = this.prefixes.add[\"align-self\"];\n                    if (prefixer && prefixer.prefixes) {\n                        prefixer.process(decl);\n                    }\n                }\n                if (this.gridStatus(decl, result) !== false) {\n                    prefixer = this.prefixes.add[\"grid-row-align\"];\n                    if (prefixer && prefixer.prefixes) {\n                        return prefixer.process(decl, result);\n                    }\n                }\n            } else if (decl.prop === \"justify-self\") {\n                // justify-self flexbox or grid\n                if (this.gridStatus(decl, result) !== false) {\n                    prefixer = this.prefixes.add[\"grid-column-align\"];\n                    if (prefixer && prefixer.prefixes) {\n                        return prefixer.process(decl, result);\n                    }\n                }\n            } else if (decl.prop === \"place-self\") {\n                prefixer = this.prefixes.add[\"place-self\"];\n                if (prefixer && prefixer.prefixes && this.gridStatus(decl, result) !== false) {\n                    return prefixer.process(decl, result);\n                }\n            } else {\n                // Properties\n                prefixer = this.prefixes.add[decl.prop];\n                if (prefixer && prefixer.prefixes) {\n                    return prefixer.process(decl, result);\n                }\n            }\n            return undefined;\n        });\n        // Insert grid-area prefixes. We need to be able to store the different\n        // rules as a data and hack API is not enough for this\n        if (this.gridStatus(css, result)) {\n            insertAreas(css, this.disabled);\n        }\n        // Values\n        return css.walkDecls((decl)=>{\n            if (this.disabledValue(decl, result)) return;\n            let unprefixed = this.prefixes.unprefixed(decl.prop);\n            let list = this.prefixes.values(\"add\", unprefixed);\n            if (Array.isArray(list)) {\n                for (let value of list){\n                    if (value.process) value.process(decl, result);\n                }\n            }\n            Value.save(this.prefixes, decl);\n        });\n    }\n    /**\n   * Check for control comment and global options\n   */ disabled(node, result) {\n        if (!node) return false;\n        if (node._autoprefixerDisabled !== undefined) {\n            return node._autoprefixerDisabled;\n        }\n        if (node.parent) {\n            let p = node.prev();\n            if (p && p.type === \"comment\" && IGNORE_NEXT.test(p.text)) {\n                node._autoprefixerDisabled = true;\n                node._autoprefixerSelfDisabled = true;\n                return true;\n            }\n        }\n        let value = null;\n        if (node.nodes) {\n            let status;\n            node.each((i)=>{\n                if (i.type !== \"comment\") return;\n                if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n                    if (typeof status !== \"undefined\") {\n                        result.warn(\"Second Autoprefixer control comment \" + \"was ignored. Autoprefixer applies control \" + \"comment to whole block, not to next rules.\", {\n                            node: i\n                        });\n                    } else {\n                        status = /on/i.test(i.text);\n                    }\n                }\n            });\n            if (status !== undefined) {\n                value = !status;\n            }\n        }\n        if (!node.nodes || value === null) {\n            if (node.parent) {\n                let isParentDisabled = this.disabled(node.parent, result);\n                if (node.parent._autoprefixerSelfDisabled === true) {\n                    value = false;\n                } else {\n                    value = isParentDisabled;\n                }\n            } else {\n                value = false;\n            }\n        }\n        node._autoprefixerDisabled = value;\n        return value;\n    }\n    /**\n   * Check for grid/flexbox options.\n   */ disabledDecl(node, result) {\n        if (node.type === \"decl\" && this.gridStatus(node, result) === false) {\n            if (node.prop.includes(\"grid\") || node.prop === \"justify-items\") {\n                return true;\n            }\n        }\n        if (node.type === \"decl\" && this.prefixes.options.flexbox === false) {\n            let other = [\n                \"order\",\n                \"justify-content\",\n                \"align-items\",\n                \"align-content\"\n            ];\n            if (node.prop.includes(\"flex\") || other.includes(node.prop)) {\n                return true;\n            }\n        }\n        return this.disabled(node, result);\n    }\n    /**\n   * Check for grid/flexbox options.\n   */ disabledValue(node, result) {\n        if (this.gridStatus(node, result) === false && node.type === \"decl\") {\n            if (node.prop === \"display\" && node.value.includes(\"grid\")) {\n                return true;\n            }\n        }\n        if (this.prefixes.options.flexbox === false && node.type === \"decl\") {\n            if (node.prop === \"display\" && node.value.includes(\"flex\")) {\n                return true;\n            }\n        }\n        if (node.type === \"decl\" && node.prop === \"content\") {\n            return true;\n        }\n        return this.disabled(node, result);\n    }\n    /**\n   * Is it flebox or grid rule\n   */ displayType(decl) {\n        for (let i of decl.parent.nodes){\n            if (i.prop !== \"display\") {\n                continue;\n            }\n            if (i.value.includes(\"flex\")) {\n                return \"flex\";\n            }\n            if (i.value.includes(\"grid\")) {\n                return \"grid\";\n            }\n        }\n        return false;\n    }\n    /**\n   * Set grid option via control comment\n   */ gridStatus(node, result) {\n        if (!node) return false;\n        if (node._autoprefixerGridStatus !== undefined) {\n            return node._autoprefixerGridStatus;\n        }\n        let value = null;\n        if (node.nodes) {\n            let status;\n            node.each((i)=>{\n                if (i.type !== \"comment\") return;\n                if (GRID_REGEX.test(i.text)) {\n                    let hasAutoplace = /:\\s*autoplace/i.test(i.text);\n                    let noAutoplace = /no-autoplace/i.test(i.text);\n                    if (typeof status !== \"undefined\") {\n                        result.warn(\"Second Autoprefixer grid control comment was \" + \"ignored. Autoprefixer applies control comments to the whole \" + \"block, not to the next rules.\", {\n                            node: i\n                        });\n                    } else if (hasAutoplace) {\n                        status = \"autoplace\";\n                    } else if (noAutoplace) {\n                        status = true;\n                    } else {\n                        status = /on/i.test(i.text);\n                    }\n                }\n            });\n            if (status !== undefined) {\n                value = status;\n            }\n        }\n        if (node.type === \"atrule\" && node.name === \"supports\") {\n            let params = node.params;\n            if (params.includes(\"grid\") && params.includes(\"auto\")) {\n                value = false;\n            }\n        }\n        if (!node.nodes || value === null) {\n            if (node.parent) {\n                let isParentGrid = this.gridStatus(node.parent, result);\n                if (node.parent._autoprefixerSelfDisabled === true) {\n                    value = false;\n                } else {\n                    value = isParentGrid;\n                }\n            } else if (typeof this.prefixes.options.grid !== \"undefined\") {\n                value = this.prefixes.options.grid;\n            } else if (typeof process.env.AUTOPREFIXER_GRID !== \"undefined\") {\n                if (process.env.AUTOPREFIXER_GRID === \"autoplace\") {\n                    value = \"autoplace\";\n                } else {\n                    value = true;\n                }\n            } else {\n                value = false;\n            }\n        }\n        node._autoprefixerGridStatus = value;\n        return value;\n    }\n    /**\n   * Normalize spaces in cascade declaration group\n   */ reduceSpaces(decl) {\n        let stop = false;\n        this.prefixes.group(decl).up(()=>{\n            stop = true;\n            return true;\n        });\n        if (stop) {\n            return;\n        }\n        let parts = decl.raw(\"before\").split(\"\\n\");\n        let prevMin = parts[parts.length - 1].length;\n        let diff = false;\n        this.prefixes.group(decl).down((other)=>{\n            parts = other.raw(\"before\").split(\"\\n\");\n            let last = parts.length - 1;\n            if (parts[last].length > prevMin) {\n                if (diff === false) {\n                    diff = parts[last].length - prevMin;\n                }\n                parts[last] = parts[last].slice(0, -diff);\n                other.raws.before = parts.join(\"\\n\");\n            }\n        });\n    }\n    /**\n   * Remove unnecessary pefixes\n   */ remove(css, result) {\n        // At-rules\n        let resolution = this.prefixes.remove[\"@resolution\"];\n        css.walkAtRules((rule, i)=>{\n            if (this.prefixes.remove[`@${rule.name}`]) {\n                if (!this.disabled(rule, result)) {\n                    rule.parent.removeChild(i);\n                }\n            } else if (rule.name === \"media\" && rule.params.includes(\"-resolution\") && resolution) {\n                resolution.clean(rule);\n            }\n        });\n        // Selectors\n        css.walkRules((rule, i)=>{\n            if (this.disabled(rule, result)) return;\n            for (let checker of this.prefixes.remove.selectors){\n                if (checker.check(rule)) {\n                    rule.parent.removeChild(i);\n                    return;\n                }\n            }\n        });\n        return css.walkDecls((decl, i)=>{\n            if (this.disabled(decl, result)) return;\n            let rule = decl.parent;\n            let unprefixed = this.prefixes.unprefixed(decl.prop);\n            // Transition\n            if (decl.prop === \"transition\" || decl.prop === \"transition-property\") {\n                this.prefixes.transition.remove(decl);\n            }\n            // Properties\n            if (this.prefixes.remove[decl.prop] && this.prefixes.remove[decl.prop].remove) {\n                let notHack = this.prefixes.group(decl).down((other)=>{\n                    return this.prefixes.normalize(other.prop) === unprefixed;\n                });\n                if (unprefixed === \"flex-flow\") {\n                    notHack = true;\n                }\n                if (decl.prop === \"-webkit-box-orient\") {\n                    let hacks = {\n                        \"flex-direction\": true,\n                        \"flex-flow\": true\n                    };\n                    if (!decl.parent.some((j)=>hacks[j.prop])) return;\n                }\n                if (notHack && !this.withHackValue(decl)) {\n                    if (decl.raw(\"before\").includes(\"\\n\")) {\n                        this.reduceSpaces(decl);\n                    }\n                    rule.removeChild(i);\n                    return;\n                }\n            }\n            // Values\n            for (let checker of this.prefixes.values(\"remove\", unprefixed)){\n                if (!checker.check) continue;\n                if (!checker.check(decl.value)) continue;\n                unprefixed = checker.unprefixed;\n                let notHack = this.prefixes.group(decl).down((other)=>{\n                    return other.value.includes(unprefixed);\n                });\n                if (notHack) {\n                    rule.removeChild(i);\n                    return;\n                }\n            }\n        });\n    }\n    /**\n   * Some rare old values, which is not in standard\n   */ withHackValue(decl) {\n        return decl.prop === \"-webkit-background-clip\" && decl.value === \"text\" || // Do not remove -webkit-box-orient when -webkit-line-clamp is present.\n        // https://github.com/postcss/autoprefixer/issues/1510\n        decl.prop === \"-webkit-box-orient\" && decl.parent.some((d)=>d.prop === \"-webkit-line-clamp\");\n    }\n}\nmodule.exports = Processor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/processor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/resolution.js":
/*!*****************************************************!*\
  !*** ./node_modules/autoprefixer/lib/resolution.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet FractionJs = __webpack_require__(/*! fraction.js */ \"(ssr)/./node_modules/fraction.js/fraction.cjs\");\nlet Prefixer = __webpack_require__(/*! ./prefixer */ \"(ssr)/./node_modules/autoprefixer/lib/prefixer.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nconst REGEXP = /(min|max)-resolution\\s*:\\s*\\d*\\.?\\d+(dppx|dpcm|dpi|x)/gi;\nconst SPLIT = /(min|max)-resolution(\\s*:\\s*)(\\d*\\.?\\d+)(dppx|dpcm|dpi|x)/i;\nclass Resolution extends Prefixer {\n    /**\n   * Remove prefixed queries\n   */ clean(rule) {\n        if (!this.bad) {\n            this.bad = [];\n            for (let prefix of this.prefixes){\n                this.bad.push(this.prefixName(prefix, \"min\"));\n                this.bad.push(this.prefixName(prefix, \"max\"));\n            }\n        }\n        rule.params = utils.editList(rule.params, (queries)=>{\n            return queries.filter((query)=>this.bad.every((i)=>!query.includes(i)));\n        });\n    }\n    /**\n   * Return prefixed query name\n   */ prefixName(prefix, name) {\n        if (prefix === \"-moz-\") {\n            return name + \"--moz-device-pixel-ratio\";\n        } else {\n            return prefix + name + \"-device-pixel-ratio\";\n        }\n    }\n    /**\n   * Return prefixed query\n   */ prefixQuery(prefix, name, colon, value, units) {\n        value = new FractionJs(value);\n        // 1dpcm = 2.54dpi\n        // 1dppx = 96dpi\n        if (units === \"dpi\") {\n            value = value.div(96);\n        } else if (units === \"dpcm\") {\n            value = value.mul(2.54).div(96);\n        }\n        value = value.simplify();\n        if (prefix === \"-o-\") {\n            value = value.n + \"/\" + value.d;\n        }\n        return this.prefixName(prefix, name) + colon + value;\n    }\n    /**\n   * Add prefixed queries\n   */ process(rule) {\n        let parent = this.parentPrefix(rule);\n        let prefixes = parent ? [\n            parent\n        ] : this.prefixes;\n        rule.params = utils.editList(rule.params, (origin, prefixed)=>{\n            for (let query of origin){\n                if (!query.includes(\"min-resolution\") && !query.includes(\"max-resolution\")) {\n                    prefixed.push(query);\n                    continue;\n                }\n                for (let prefix of prefixes){\n                    let processed = query.replace(REGEXP, (str)=>{\n                        let parts = str.match(SPLIT);\n                        return this.prefixQuery(prefix, parts[1], parts[2], parts[3], parts[4]);\n                    });\n                    prefixed.push(processed);\n                }\n                prefixed.push(query);\n            }\n            return utils.uniq(prefixed);\n        });\n    }\n}\nmodule.exports = Resolution;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9yZXNvbHV0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUV6QixJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQztBQUN2QixJQUFJRSxRQUFRRixtQkFBT0EsQ0FBQztBQUVwQixNQUFNRyxTQUFTO0FBQ2YsTUFBTUMsUUFBUTtBQUVkLE1BQU1DLG1CQUFtQko7SUFDdkI7O0dBRUMsR0FDREssTUFBTUMsSUFBSSxFQUFFO1FBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQ0MsR0FBRyxFQUFFO1lBQ2IsSUFBSSxDQUFDQSxHQUFHLEdBQUcsRUFBRTtZQUNiLEtBQUssSUFBSUMsVUFBVSxJQUFJLENBQUNDLFFBQVEsQ0FBRTtnQkFDaEMsSUFBSSxDQUFDRixHQUFHLENBQUNHLElBQUksQ0FBQyxJQUFJLENBQUNDLFVBQVUsQ0FBQ0gsUUFBUTtnQkFDdEMsSUFBSSxDQUFDRCxHQUFHLENBQUNHLElBQUksQ0FBQyxJQUFJLENBQUNDLFVBQVUsQ0FBQ0gsUUFBUTtZQUN4QztRQUNGO1FBRUFGLEtBQUtNLE1BQU0sR0FBR1gsTUFBTVksUUFBUSxDQUFDUCxLQUFLTSxNQUFNLEVBQUVFLENBQUFBO1lBQ3hDLE9BQU9BLFFBQVFDLE1BQU0sQ0FBQ0MsQ0FBQUEsUUFBUyxJQUFJLENBQUNULEdBQUcsQ0FBQ1UsS0FBSyxDQUFDQyxDQUFBQSxJQUFLLENBQUNGLE1BQU1HLFFBQVEsQ0FBQ0Q7UUFDckU7SUFDRjtJQUVBOztHQUVDLEdBQ0RQLFdBQVdILE1BQU0sRUFBRVksSUFBSSxFQUFFO1FBQ3ZCLElBQUlaLFdBQVcsU0FBUztZQUN0QixPQUFPWSxPQUFPO1FBQ2hCLE9BQU87WUFDTCxPQUFPWixTQUFTWSxPQUFPO1FBQ3pCO0lBQ0Y7SUFFQTs7R0FFQyxHQUNEQyxZQUFZYixNQUFNLEVBQUVZLElBQUksRUFBRUUsS0FBSyxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRTtRQUM3Q0QsUUFBUSxJQUFJekIsV0FBV3lCO1FBRXZCLGtCQUFrQjtRQUNsQixnQkFBZ0I7UUFDaEIsSUFBSUMsVUFBVSxPQUFPO1lBQ25CRCxRQUFRQSxNQUFNRSxHQUFHLENBQUM7UUFDcEIsT0FBTyxJQUFJRCxVQUFVLFFBQVE7WUFDM0JELFFBQVFBLE1BQU1HLEdBQUcsQ0FBQyxNQUFNRCxHQUFHLENBQUM7UUFDOUI7UUFDQUYsUUFBUUEsTUFBTUksUUFBUTtRQUV0QixJQUFJbkIsV0FBVyxPQUFPO1lBQ3BCZSxRQUFRQSxNQUFNSyxDQUFDLEdBQUcsTUFBTUwsTUFBTU0sQ0FBQztRQUNqQztRQUNBLE9BQU8sSUFBSSxDQUFDbEIsVUFBVSxDQUFDSCxRQUFRWSxRQUFRRSxRQUFRQztJQUNqRDtJQUVBOztHQUVDLEdBQ0RPLFFBQVF4QixJQUFJLEVBQUU7UUFDWixJQUFJeUIsU0FBUyxJQUFJLENBQUNDLFlBQVksQ0FBQzFCO1FBQy9CLElBQUlHLFdBQVdzQixTQUFTO1lBQUNBO1NBQU8sR0FBRyxJQUFJLENBQUN0QixRQUFRO1FBRWhESCxLQUFLTSxNQUFNLEdBQUdYLE1BQU1ZLFFBQVEsQ0FBQ1AsS0FBS00sTUFBTSxFQUFFLENBQUNxQixRQUFRQztZQUNqRCxLQUFLLElBQUlsQixTQUFTaUIsT0FBUTtnQkFDeEIsSUFDRSxDQUFDakIsTUFBTUcsUUFBUSxDQUFDLHFCQUNoQixDQUFDSCxNQUFNRyxRQUFRLENBQUMsbUJBQ2hCO29CQUNBZSxTQUFTeEIsSUFBSSxDQUFDTTtvQkFDZDtnQkFDRjtnQkFFQSxLQUFLLElBQUlSLFVBQVVDLFNBQVU7b0JBQzNCLElBQUkwQixZQUFZbkIsTUFBTW9CLE9BQU8sQ0FBQ2xDLFFBQVFtQyxDQUFBQTt3QkFDcEMsSUFBSUMsUUFBUUQsSUFBSUUsS0FBSyxDQUFDcEM7d0JBQ3RCLE9BQU8sSUFBSSxDQUFDa0IsV0FBVyxDQUNyQmIsUUFDQThCLEtBQUssQ0FBQyxFQUFFLEVBQ1JBLEtBQUssQ0FBQyxFQUFFLEVBQ1JBLEtBQUssQ0FBQyxFQUFFLEVBQ1JBLEtBQUssQ0FBQyxFQUFFO29CQUVaO29CQUNBSixTQUFTeEIsSUFBSSxDQUFDeUI7Z0JBQ2hCO2dCQUNBRCxTQUFTeEIsSUFBSSxDQUFDTTtZQUNoQjtZQUVBLE9BQU9mLE1BQU11QyxJQUFJLENBQUNOO1FBQ3BCO0lBQ0Y7QUFDRjtBQUVBTyxPQUFPQyxPQUFPLEdBQUd0QyIsInNvdXJjZXMiOlsid2VicGFjazovL25vcy8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL3Jlc29sdXRpb24uanM/ODA0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgRnJhY3Rpb25KcyA9IHJlcXVpcmUoJ2ZyYWN0aW9uLmpzJylcblxubGV0IFByZWZpeGVyID0gcmVxdWlyZSgnLi9wcmVmaXhlcicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuY29uc3QgUkVHRVhQID0gLyhtaW58bWF4KS1yZXNvbHV0aW9uXFxzKjpcXHMqXFxkKlxcLj9cXGQrKGRwcHh8ZHBjbXxkcGl8eCkvZ2lcbmNvbnN0IFNQTElUID0gLyhtaW58bWF4KS1yZXNvbHV0aW9uKFxccyo6XFxzKikoXFxkKlxcLj9cXGQrKShkcHB4fGRwY218ZHBpfHgpL2lcblxuY2xhc3MgUmVzb2x1dGlvbiBleHRlbmRzIFByZWZpeGVyIHtcbiAgLyoqXG4gICAqIFJlbW92ZSBwcmVmaXhlZCBxdWVyaWVzXG4gICAqL1xuICBjbGVhbihydWxlKSB7XG4gICAgaWYgKCF0aGlzLmJhZCkge1xuICAgICAgdGhpcy5iYWQgPSBbXVxuICAgICAgZm9yIChsZXQgcHJlZml4IG9mIHRoaXMucHJlZml4ZXMpIHtcbiAgICAgICAgdGhpcy5iYWQucHVzaCh0aGlzLnByZWZpeE5hbWUocHJlZml4LCAnbWluJykpXG4gICAgICAgIHRoaXMuYmFkLnB1c2godGhpcy5wcmVmaXhOYW1lKHByZWZpeCwgJ21heCcpKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJ1bGUucGFyYW1zID0gdXRpbHMuZWRpdExpc3QocnVsZS5wYXJhbXMsIHF1ZXJpZXMgPT4ge1xuICAgICAgcmV0dXJuIHF1ZXJpZXMuZmlsdGVyKHF1ZXJ5ID0+IHRoaXMuYmFkLmV2ZXJ5KGkgPT4gIXF1ZXJ5LmluY2x1ZGVzKGkpKSlcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBwcmVmaXhlZCBxdWVyeSBuYW1lXG4gICAqL1xuICBwcmVmaXhOYW1lKHByZWZpeCwgbmFtZSkge1xuICAgIGlmIChwcmVmaXggPT09ICctbW96LScpIHtcbiAgICAgIHJldHVybiBuYW1lICsgJy0tbW96LWRldmljZS1waXhlbC1yYXRpbydcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHByZWZpeCArIG5hbWUgKyAnLWRldmljZS1waXhlbC1yYXRpbydcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByZWZpeGVkIHF1ZXJ5XG4gICAqL1xuICBwcmVmaXhRdWVyeShwcmVmaXgsIG5hbWUsIGNvbG9uLCB2YWx1ZSwgdW5pdHMpIHtcbiAgICB2YWx1ZSA9IG5ldyBGcmFjdGlvbkpzKHZhbHVlKVxuXG4gICAgLy8gMWRwY20gPSAyLjU0ZHBpXG4gICAgLy8gMWRwcHggPSA5NmRwaVxuICAgIGlmICh1bml0cyA9PT0gJ2RwaScpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUuZGl2KDk2KVxuICAgIH0gZWxzZSBpZiAodW5pdHMgPT09ICdkcGNtJykge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5tdWwoMi41NCkuZGl2KDk2KVxuICAgIH1cbiAgICB2YWx1ZSA9IHZhbHVlLnNpbXBsaWZ5KClcblxuICAgIGlmIChwcmVmaXggPT09ICctby0nKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLm4gKyAnLycgKyB2YWx1ZS5kXG4gICAgfVxuICAgIHJldHVybiB0aGlzLnByZWZpeE5hbWUocHJlZml4LCBuYW1lKSArIGNvbG9uICsgdmFsdWVcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgcHJlZml4ZWQgcXVlcmllc1xuICAgKi9cbiAgcHJvY2VzcyhydWxlKSB7XG4gICAgbGV0IHBhcmVudCA9IHRoaXMucGFyZW50UHJlZml4KHJ1bGUpXG4gICAgbGV0IHByZWZpeGVzID0gcGFyZW50ID8gW3BhcmVudF0gOiB0aGlzLnByZWZpeGVzXG5cbiAgICBydWxlLnBhcmFtcyA9IHV0aWxzLmVkaXRMaXN0KHJ1bGUucGFyYW1zLCAob3JpZ2luLCBwcmVmaXhlZCkgPT4ge1xuICAgICAgZm9yIChsZXQgcXVlcnkgb2Ygb3JpZ2luKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAhcXVlcnkuaW5jbHVkZXMoJ21pbi1yZXNvbHV0aW9uJykgJiZcbiAgICAgICAgICAhcXVlcnkuaW5jbHVkZXMoJ21heC1yZXNvbHV0aW9uJylcbiAgICAgICAgKSB7XG4gICAgICAgICAgcHJlZml4ZWQucHVzaChxdWVyeSlcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChsZXQgcHJlZml4IG9mIHByZWZpeGVzKSB7XG4gICAgICAgICAgbGV0IHByb2Nlc3NlZCA9IHF1ZXJ5LnJlcGxhY2UoUkVHRVhQLCBzdHIgPT4ge1xuICAgICAgICAgICAgbGV0IHBhcnRzID0gc3RyLm1hdGNoKFNQTElUKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJlZml4UXVlcnkoXG4gICAgICAgICAgICAgIHByZWZpeCxcbiAgICAgICAgICAgICAgcGFydHNbMV0sXG4gICAgICAgICAgICAgIHBhcnRzWzJdLFxuICAgICAgICAgICAgICBwYXJ0c1szXSxcbiAgICAgICAgICAgICAgcGFydHNbNF1cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9KVxuICAgICAgICAgIHByZWZpeGVkLnB1c2gocHJvY2Vzc2VkKVxuICAgICAgICB9XG4gICAgICAgIHByZWZpeGVkLnB1c2gocXVlcnkpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1dGlscy51bmlxKHByZWZpeGVkKVxuICAgIH0pXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZXNvbHV0aW9uXG4iXSwibmFtZXMiOlsiRnJhY3Rpb25KcyIsInJlcXVpcmUiLCJQcmVmaXhlciIsInV0aWxzIiwiUkVHRVhQIiwiU1BMSVQiLCJSZXNvbHV0aW9uIiwiY2xlYW4iLCJydWxlIiwiYmFkIiwicHJlZml4IiwicHJlZml4ZXMiLCJwdXNoIiwicHJlZml4TmFtZSIsInBhcmFtcyIsImVkaXRMaXN0IiwicXVlcmllcyIsImZpbHRlciIsInF1ZXJ5IiwiZXZlcnkiLCJpIiwiaW5jbHVkZXMiLCJuYW1lIiwicHJlZml4UXVlcnkiLCJjb2xvbiIsInZhbHVlIiwidW5pdHMiLCJkaXYiLCJtdWwiLCJzaW1wbGlmeSIsIm4iLCJkIiwicHJvY2VzcyIsInBhcmVudCIsInBhcmVudFByZWZpeCIsIm9yaWdpbiIsInByZWZpeGVkIiwicHJvY2Vzc2VkIiwicmVwbGFjZSIsInN0ciIsInBhcnRzIiwibWF0Y2giLCJ1bmlxIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/resolution.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/selector.js":
/*!***************************************************!*\
  !*** ./node_modules/autoprefixer/lib/selector.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet { list } = __webpack_require__(/*! postcss */ \"(ssr)/./node_modules/postcss/lib/postcss.js\");\nlet OldSelector = __webpack_require__(/*! ./old-selector */ \"(ssr)/./node_modules/autoprefixer/lib/old-selector.js\");\nlet Prefixer = __webpack_require__(/*! ./prefixer */ \"(ssr)/./node_modules/autoprefixer/lib/prefixer.js\");\nlet Browsers = __webpack_require__(/*! ./browsers */ \"(ssr)/./node_modules/autoprefixer/lib/browsers.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass Selector extends Prefixer {\n    constructor(name, prefixes, all){\n        super(name, prefixes, all);\n        this.regexpCache = new Map();\n    }\n    /**\n   * Clone and add prefixes for at-rule\n   */ add(rule, prefix) {\n        let prefixeds = this.prefixeds(rule);\n        if (this.already(rule, prefixeds, prefix)) {\n            return;\n        }\n        let cloned = this.clone(rule, {\n            selector: prefixeds[this.name][prefix]\n        });\n        rule.parent.insertBefore(rule, cloned);\n    }\n    /**\n   * Is rule already prefixed before\n   */ already(rule, prefixeds, prefix) {\n        let index = rule.parent.index(rule) - 1;\n        while(index >= 0){\n            let before = rule.parent.nodes[index];\n            if (before.type !== \"rule\") {\n                return false;\n            }\n            let some = false;\n            for(let key in prefixeds[this.name]){\n                let prefixed = prefixeds[this.name][key];\n                if (before.selector === prefixed) {\n                    if (prefix === key) {\n                        return true;\n                    } else {\n                        some = true;\n                        break;\n                    }\n                }\n            }\n            if (!some) {\n                return false;\n            }\n            index -= 1;\n        }\n        return false;\n    }\n    /**\n   * Is rule selectors need to be prefixed\n   */ check(rule) {\n        if (rule.selector.includes(this.name)) {\n            return !!rule.selector.match(this.regexp());\n        }\n        return false;\n    }\n    /**\n   * Return function to fast find prefixed selector\n   */ old(prefix) {\n        return new OldSelector(this, prefix);\n    }\n    /**\n   * All possible prefixes\n   */ possible() {\n        return Browsers.prefixes();\n    }\n    /**\n   * Return prefixed version of selector\n   */ prefixed(prefix) {\n        return this.name.replace(/^(\\W*)/, `$1${prefix}`);\n    }\n    /**\n   * Return all possible selector prefixes\n   */ prefixeds(rule) {\n        if (rule._autoprefixerPrefixeds) {\n            if (rule._autoprefixerPrefixeds[this.name]) {\n                return rule._autoprefixerPrefixeds;\n            }\n        } else {\n            rule._autoprefixerPrefixeds = {};\n        }\n        let prefixeds = {};\n        if (rule.selector.includes(\",\")) {\n            let ruleParts = list.comma(rule.selector);\n            let toProcess = ruleParts.filter((el)=>el.includes(this.name));\n            for (let prefix of this.possible()){\n                prefixeds[prefix] = toProcess.map((el)=>this.replace(el, prefix)).join(\", \");\n            }\n        } else {\n            for (let prefix of this.possible()){\n                prefixeds[prefix] = this.replace(rule.selector, prefix);\n            }\n        }\n        rule._autoprefixerPrefixeds[this.name] = prefixeds;\n        return rule._autoprefixerPrefixeds;\n    }\n    /**\n   * Lazy loadRegExp for name\n   */ regexp(prefix) {\n        if (!this.regexpCache.has(prefix)) {\n            let name = prefix ? this.prefixed(prefix) : this.name;\n            this.regexpCache.set(prefix, new RegExp(`(^|[^:\"'=])${utils.escapeRegexp(name)}`, \"gi\"));\n        }\n        return this.regexpCache.get(prefix);\n    }\n    /**\n   * Replace selectors by prefixed one\n   */ replace(selector, prefix) {\n        return selector.replace(this.regexp(), `$1${this.prefixed(prefix)}`);\n    }\n}\nmodule.exports = Selector;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/selector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/supports.js":
/*!***************************************************!*\
  !*** ./node_modules/autoprefixer/lib/supports.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet featureQueries = __webpack_require__(/*! caniuse-lite/data/features/css-featurequeries.js */ \"(ssr)/./node_modules/caniuse-lite/data/features/css-featurequeries.js\");\nlet feature = __webpack_require__(/*! caniuse-lite/dist/unpacker/feature */ \"(ssr)/./node_modules/caniuse-lite/dist/unpacker/feature.js\");\nlet { parse } = __webpack_require__(/*! postcss */ \"(ssr)/./node_modules/postcss/lib/postcss.js\");\nlet Browsers = __webpack_require__(/*! ./browsers */ \"(ssr)/./node_modules/autoprefixer/lib/browsers.js\");\nlet brackets = __webpack_require__(/*! ./brackets */ \"(ssr)/./node_modules/autoprefixer/lib/brackets.js\");\nlet Value = __webpack_require__(/*! ./value */ \"(ssr)/./node_modules/autoprefixer/lib/value.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nlet data = feature(featureQueries);\nlet supported = [];\nfor(let browser in data.stats){\n    let versions = data.stats[browser];\n    for(let version in versions){\n        let support = versions[version];\n        if (/y/.test(support)) {\n            supported.push(browser + \" \" + version);\n        }\n    }\n}\nclass Supports {\n    constructor(Prefixes, all){\n        this.Prefixes = Prefixes;\n        this.all = all;\n    }\n    /**\n   * Add prefixes\n   */ add(nodes, all) {\n        return nodes.map((i)=>{\n            if (this.isProp(i)) {\n                let prefixed = this.prefixed(i[0]);\n                if (prefixed.length > 1) {\n                    return this.convert(prefixed);\n                }\n                return i;\n            }\n            if (typeof i === \"object\") {\n                return this.add(i, all);\n            }\n            return i;\n        });\n    }\n    /**\n   * Clean brackets with one child\n   */ cleanBrackets(nodes) {\n        return nodes.map((i)=>{\n            if (typeof i !== \"object\") {\n                return i;\n            }\n            if (i.length === 1 && typeof i[0] === \"object\") {\n                return this.cleanBrackets(i[0]);\n            }\n            return this.cleanBrackets(i);\n        });\n    }\n    /**\n   * Add \" or \" between properties and convert it to brackets format\n   */ convert(progress) {\n        let result = [\n            \"\"\n        ];\n        for (let i of progress){\n            result.push([\n                `${i.prop}: ${i.value}`\n            ]);\n            result.push(\" or \");\n        }\n        result[result.length - 1] = \"\";\n        return result;\n    }\n    /**\n   * Check global options\n   */ disabled(node) {\n        if (!this.all.options.grid) {\n            if (node.prop === \"display\" && node.value.includes(\"grid\")) {\n                return true;\n            }\n            if (node.prop.includes(\"grid\") || node.prop === \"justify-items\") {\n                return true;\n            }\n        }\n        if (this.all.options.flexbox === false) {\n            if (node.prop === \"display\" && node.value.includes(\"flex\")) {\n                return true;\n            }\n            let other = [\n                \"order\",\n                \"justify-content\",\n                \"align-items\",\n                \"align-content\"\n            ];\n            if (node.prop.includes(\"flex\") || other.includes(node.prop)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * Return true if prefixed property has no unprefixed\n   */ isHack(all, unprefixed) {\n        let check = new RegExp(`(\\\\(|\\\\s)${utils.escapeRegexp(unprefixed)}:`);\n        return !check.test(all);\n    }\n    /**\n   * Return true if brackets node is \"not\" word\n   */ isNot(node) {\n        return typeof node === \"string\" && /not\\s*/i.test(node);\n    }\n    /**\n   * Return true if brackets node is \"or\" word\n   */ isOr(node) {\n        return typeof node === \"string\" && /\\s*or\\s*/i.test(node);\n    }\n    /**\n   * Return true if brackets node is (prop: value)\n   */ isProp(node) {\n        return typeof node === \"object\" && node.length === 1 && typeof node[0] === \"string\";\n    }\n    /**\n   * Compress value functions into a string nodes\n   */ normalize(nodes) {\n        if (typeof nodes !== \"object\") {\n            return nodes;\n        }\n        nodes = nodes.filter((i)=>i !== \"\");\n        if (typeof nodes[0] === \"string\") {\n            let firstNode = nodes[0].trim();\n            if (firstNode.includes(\":\") || firstNode === \"selector\" || firstNode === \"not selector\") {\n                return [\n                    brackets.stringify(nodes)\n                ];\n            }\n        }\n        return nodes.map((i)=>this.normalize(i));\n    }\n    /**\n   * Parse string into declaration property and value\n   */ parse(str) {\n        let parts = str.split(\":\");\n        let prop = parts[0];\n        let value = parts[1];\n        if (!value) value = \"\";\n        return [\n            prop.trim(),\n            value.trim()\n        ];\n    }\n    /**\n   * Return array of Declaration with all necessary prefixes\n   */ prefixed(str) {\n        let rule = this.virtual(str);\n        if (this.disabled(rule.first)) {\n            return rule.nodes;\n        }\n        let result = {\n            warn: ()=>null\n        };\n        let prefixer = this.prefixer().add[rule.first.prop];\n        prefixer && prefixer.process && prefixer.process(rule.first, result);\n        for (let decl of rule.nodes){\n            for (let value of this.prefixer().values(\"add\", rule.first.prop)){\n                value.process(decl);\n            }\n            Value.save(this.all, decl);\n        }\n        return rule.nodes;\n    }\n    /**\n   * Return prefixer only with @supports supported browsers\n   */ prefixer() {\n        if (this.prefixerCache) {\n            return this.prefixerCache;\n        }\n        let filtered = this.all.browsers.selected.filter((i)=>{\n            return supported.includes(i);\n        });\n        let browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n        this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n        return this.prefixerCache;\n    }\n    /**\n   * Add prefixed declaration\n   */ process(rule) {\n        let ast = brackets.parse(rule.params);\n        ast = this.normalize(ast);\n        ast = this.remove(ast, rule.params);\n        ast = this.add(ast, rule.params);\n        ast = this.cleanBrackets(ast);\n        rule.params = brackets.stringify(ast);\n    }\n    /**\n   * Remove all unnecessary prefixes\n   */ remove(nodes, all) {\n        let i = 0;\n        while(i < nodes.length){\n            if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n                if (this.toRemove(nodes[i][0], all)) {\n                    nodes.splice(i, 2);\n                    continue;\n                }\n                i += 2;\n                continue;\n            }\n            if (typeof nodes[i] === \"object\") {\n                nodes[i] = this.remove(nodes[i], all);\n            }\n            i += 1;\n        }\n        return nodes;\n    }\n    /**\n   * Return true if we need to remove node\n   */ toRemove(str, all) {\n        let [prop, value] = this.parse(str);\n        let unprefixed = this.all.unprefixed(prop);\n        let cleaner = this.all.cleaner();\n        if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {\n            return true;\n        }\n        for (let checker of cleaner.values(\"remove\", unprefixed)){\n            if (checker.check(value)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n   * Create virtual rule to process it by prefixer\n   */ virtual(str) {\n        let [prop, value] = this.parse(str);\n        let rule = parse(\"a{}\").first;\n        rule.append({\n            prop,\n            raws: {\n                before: \"\"\n            },\n            value\n        });\n        return rule;\n    }\n}\nmodule.exports = Supports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/supports.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/transition.js":
/*!*****************************************************!*\
  !*** ./node_modules/autoprefixer/lib/transition.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet { list } = __webpack_require__(/*! postcss */ \"(ssr)/./node_modules/postcss/lib/postcss.js\");\nlet parser = __webpack_require__(/*! postcss-value-parser */ \"(ssr)/./node_modules/postcss-value-parser/lib/index.js\");\nlet Browsers = __webpack_require__(/*! ./browsers */ \"(ssr)/./node_modules/autoprefixer/lib/browsers.js\");\nlet vendor = __webpack_require__(/*! ./vendor */ \"(ssr)/./node_modules/autoprefixer/lib/vendor.js\");\nclass Transition {\n    constructor(prefixes){\n        this.props = [\n            \"transition\",\n            \"transition-property\"\n        ];\n        this.prefixes = prefixes;\n    }\n    /**\n   * Process transition and add prefixes for all necessary properties\n   */ add(decl, result) {\n        let prefix, prop;\n        let add = this.prefixes.add[decl.prop];\n        let vendorPrefixes = this.ruleVendorPrefixes(decl);\n        let declPrefixes = vendorPrefixes || add && add.prefixes || [];\n        let params = this.parse(decl.value);\n        let names = params.map((i)=>this.findProp(i));\n        let added = [];\n        if (names.some((i)=>i[0] === \"-\")) {\n            return;\n        }\n        for (let param of params){\n            prop = this.findProp(param);\n            if (prop[0] === \"-\") continue;\n            let prefixer = this.prefixes.add[prop];\n            if (!prefixer || !prefixer.prefixes) continue;\n            for (prefix of prefixer.prefixes){\n                if (vendorPrefixes && !vendorPrefixes.some((p)=>prefix.includes(p))) {\n                    continue;\n                }\n                let prefixed = this.prefixes.prefixed(prop, prefix);\n                if (prefixed !== \"-ms-transform\" && !names.includes(prefixed)) {\n                    if (!this.disabled(prop, prefix)) {\n                        added.push(this.clone(prop, prefixed, param));\n                    }\n                }\n            }\n        }\n        params = params.concat(added);\n        let value = this.stringify(params);\n        let webkitClean = this.stringify(this.cleanFromUnprefixed(params, \"-webkit-\"));\n        if (declPrefixes.includes(\"-webkit-\")) {\n            this.cloneBefore(decl, `-webkit-${decl.prop}`, webkitClean);\n        }\n        this.cloneBefore(decl, decl.prop, webkitClean);\n        if (declPrefixes.includes(\"-o-\")) {\n            let operaClean = this.stringify(this.cleanFromUnprefixed(params, \"-o-\"));\n            this.cloneBefore(decl, `-o-${decl.prop}`, operaClean);\n        }\n        for (prefix of declPrefixes){\n            if (prefix !== \"-webkit-\" && prefix !== \"-o-\") {\n                let prefixValue = this.stringify(this.cleanOtherPrefixes(params, prefix));\n                this.cloneBefore(decl, prefix + decl.prop, prefixValue);\n            }\n        }\n        if (value !== decl.value && !this.already(decl, decl.prop, value)) {\n            this.checkForWarning(result, decl);\n            decl.cloneBefore();\n            decl.value = value;\n        }\n    }\n    /**\n   * Does we already have this declaration\n   */ already(decl, prop, value) {\n        return decl.parent.some((i)=>i.prop === prop && i.value === value);\n    }\n    /**\n   * Show transition-property warning\n   */ checkForWarning(result, decl) {\n        if (decl.prop !== \"transition-property\") {\n            return;\n        }\n        let isPrefixed = false;\n        let hasAssociatedProp = false;\n        decl.parent.each((i)=>{\n            if (i.type !== \"decl\") {\n                return undefined;\n            }\n            if (i.prop.indexOf(\"transition-\") !== 0) {\n                return undefined;\n            }\n            let values = list.comma(i.value);\n            // check if current Rule's transition-property comma separated value list needs prefixes\n            if (i.prop === \"transition-property\") {\n                values.forEach((value)=>{\n                    let lookup = this.prefixes.add[value];\n                    if (lookup && lookup.prefixes && lookup.prefixes.length > 0) {\n                        isPrefixed = true;\n                    }\n                });\n                return undefined;\n            }\n            // check if another transition-* prop in current Rule has comma separated value list\n            hasAssociatedProp = hasAssociatedProp || values.length > 1;\n            return false;\n        });\n        if (isPrefixed && hasAssociatedProp) {\n            decl.warn(result, \"Replace transition-property to transition, \" + \"because Autoprefixer could not support \" + \"any cases of transition-property \" + \"and other transition-*\");\n        }\n    }\n    /**\n   * Remove all non-webkit prefixes and unprefixed params if we have prefixed\n   */ cleanFromUnprefixed(params, prefix) {\n        let remove = params.map((i)=>this.findProp(i)).filter((i)=>i.slice(0, prefix.length) === prefix).map((i)=>this.prefixes.unprefixed(i));\n        let result = [];\n        for (let param of params){\n            let prop = this.findProp(param);\n            let p = vendor.prefix(prop);\n            if (!remove.includes(prop) && (p === prefix || p === \"\")) {\n                result.push(param);\n            }\n        }\n        return result;\n    }\n    cleanOtherPrefixes(params, prefix) {\n        return params.filter((param)=>{\n            let current = vendor.prefix(this.findProp(param));\n            return current === \"\" || current === prefix;\n        });\n    }\n    /**\n   * Return new param array with different name\n   */ clone(origin, name, param) {\n        let result = [];\n        let changed = false;\n        for (let i of param){\n            if (!changed && i.type === \"word\" && i.value === origin) {\n                result.push({\n                    type: \"word\",\n                    value: name\n                });\n                changed = true;\n            } else {\n                result.push(i);\n            }\n        }\n        return result;\n    }\n    /**\n   * Add declaration if it is not exist\n   */ cloneBefore(decl, prop, value) {\n        if (!this.already(decl, prop, value)) {\n            decl.cloneBefore({\n                prop,\n                value\n            });\n        }\n    }\n    /**\n   * Check property for disabled by option\n   */ disabled(prop, prefix) {\n        let other = [\n            \"order\",\n            \"justify-content\",\n            \"align-self\",\n            \"align-content\"\n        ];\n        if (prop.includes(\"flex\") || other.includes(prop)) {\n            if (this.prefixes.options.flexbox === false) {\n                return true;\n            }\n            if (this.prefixes.options.flexbox === \"no-2009\") {\n                return prefix.includes(\"2009\");\n            }\n        }\n        return undefined;\n    }\n    /**\n   * Find or create separator\n   */ div(params) {\n        for (let param of params){\n            for (let node of param){\n                if (node.type === \"div\" && node.value === \",\") {\n                    return node;\n                }\n            }\n        }\n        return {\n            after: \" \",\n            type: \"div\",\n            value: \",\"\n        };\n    }\n    /**\n   * Find property name\n   */ findProp(param) {\n        let prop = param[0].value;\n        if (/^\\d/.test(prop)) {\n            for (let [i, token] of param.entries()){\n                if (i !== 0 && token.type === \"word\") {\n                    return token.value;\n                }\n            }\n        }\n        return prop;\n    }\n    /**\n   * Parse properties list to array\n   */ parse(value) {\n        let ast = parser(value);\n        let result = [];\n        let param = [];\n        for (let node of ast.nodes){\n            param.push(node);\n            if (node.type === \"div\" && node.value === \",\") {\n                result.push(param);\n                param = [];\n            }\n        }\n        result.push(param);\n        return result.filter((i)=>i.length > 0);\n    }\n    /**\n   * Process transition and remove all unnecessary properties\n   */ remove(decl) {\n        let params = this.parse(decl.value);\n        params = params.filter((i)=>{\n            let prop = this.prefixes.remove[this.findProp(i)];\n            return !prop || !prop.remove;\n        });\n        let value = this.stringify(params);\n        if (decl.value === value) {\n            return;\n        }\n        if (params.length === 0) {\n            decl.remove();\n            return;\n        }\n        let double = decl.parent.some((i)=>{\n            return i.prop === decl.prop && i.value === value;\n        });\n        let smaller = decl.parent.some((i)=>{\n            return i !== decl && i.prop === decl.prop && i.value.length > value.length;\n        });\n        if (double || smaller) {\n            decl.remove();\n            return;\n        }\n        decl.value = value;\n    }\n    /**\n   * Check if transition prop is inside vendor specific rule\n   */ ruleVendorPrefixes(decl) {\n        let { parent } = decl;\n        if (parent.type !== \"rule\") {\n            return false;\n        } else if (!parent.selector.includes(\":-\")) {\n            return false;\n        }\n        let selectors = Browsers.prefixes().filter((s)=>parent.selector.includes(\":\" + s));\n        return selectors.length > 0 ? selectors : false;\n    }\n    /**\n   * Return properties string from array\n   */ stringify(params) {\n        if (params.length === 0) {\n            return \"\";\n        }\n        let nodes = [];\n        for (let param of params){\n            if (param[param.length - 1].type !== \"div\") {\n                param.push(this.div(params));\n            }\n            nodes = nodes.concat(param);\n        }\n        if (nodes[0].type === \"div\") {\n            nodes = nodes.slice(1);\n        }\n        if (nodes[nodes.length - 1].type === \"div\") {\n            nodes = nodes.slice(0, +-2 + 1 || 0);\n        }\n        return parser.stringify({\n            nodes\n        });\n    }\n}\nmodule.exports = Transition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/transition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/utils.js":
/*!************************************************!*\
  !*** ./node_modules/autoprefixer/lib/utils.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet { list } = __webpack_require__(/*! postcss */ \"(ssr)/./node_modules/postcss/lib/postcss.js\");\n/**\n * Throw special error, to tell beniary,\n * that this error is from Autoprefixer.\n */ module.exports.error = function(text) {\n    let err = new Error(text);\n    err.autoprefixer = true;\n    throw err;\n};\n/**\n * Return array, that doesn’t contain duplicates.\n */ module.exports.uniq = function(array) {\n    return [\n        ...new Set(array)\n    ];\n};\n/**\n * Return \"-webkit-\" on \"-webkit- old\"\n */ module.exports.removeNote = function(string) {\n    if (!string.includes(\" \")) {\n        return string;\n    }\n    return string.split(\" \")[0];\n};\n/**\n * Escape RegExp symbols\n */ module.exports.escapeRegexp = function(string) {\n    return string.replace(/[$()*+-.?[\\\\\\]^{|}]/g, \"\\\\$&\");\n};\n/**\n * Return regexp to check, that CSS string contain word\n */ module.exports.regexp = function(word, escape = true) {\n    if (escape) {\n        word = this.escapeRegexp(word);\n    }\n    return new RegExp(`(^|[\\\\s,(])(${word}($|[\\\\s(,]))`, \"gi\");\n};\n/**\n * Change comma list\n */ module.exports.editList = function(value, callback) {\n    let origin = list.comma(value);\n    let changed = callback(origin, []);\n    if (origin === changed) {\n        return value;\n    }\n    let join = value.match(/,\\s*/);\n    join = join ? join[0] : \", \";\n    return changed.join(join);\n};\n/**\n * Split the selector into parts.\n * It returns 3 level deep array because selectors can be comma\n * separated (1), space separated (2), and combined (3)\n * @param {String} selector selector string\n * @return {Array<Array<Array>>} 3 level deep array of split selector\n * @see utils.test.js for examples\n */ module.exports.splitSelector = function(selector) {\n    return list.comma(selector).map((i)=>{\n        return list.space(i).map((k)=>{\n            return k.split(/(?=\\.|#)/g);\n        });\n    });\n};\n/**\n * Return true if a given value only contains numbers.\n * @param {*} value\n * @returns {boolean}\n */ module.exports.isPureNumber = function(value) {\n    if (typeof value === \"number\") {\n        return true;\n    }\n    if (typeof value === \"string\") {\n        return /^[0-9]+$/.test(value);\n    }\n    return false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSSxFQUFFQSxJQUFJLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFFdkI7OztDQUdDLEdBQ0RDLG9CQUFvQixHQUFHLFNBQVVHLElBQUk7SUFDbkMsSUFBSUMsTUFBTSxJQUFJQyxNQUFNRjtJQUNwQkMsSUFBSUUsWUFBWSxHQUFHO0lBQ25CLE1BQU1GO0FBQ1I7QUFFQTs7Q0FFQyxHQUNESixtQkFBbUIsR0FBRyxTQUFVUSxLQUFLO0lBQ25DLE9BQU87V0FBSSxJQUFJQyxJQUFJRDtLQUFPO0FBQzVCO0FBRUE7O0NBRUMsR0FDRFIseUJBQXlCLEdBQUcsU0FBVVcsTUFBTTtJQUMxQyxJQUFJLENBQUNBLE9BQU9DLFFBQVEsQ0FBQyxNQUFNO1FBQ3pCLE9BQU9EO0lBQ1Q7SUFFQSxPQUFPQSxPQUFPRSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDN0I7QUFFQTs7Q0FFQyxHQUNEYiwyQkFBMkIsR0FBRyxTQUFVVyxNQUFNO0lBQzVDLE9BQU9BLE9BQU9JLE9BQU8sQ0FBQyx3QkFBd0I7QUFDaEQ7QUFFQTs7Q0FFQyxHQUNEZixxQkFBcUIsR0FBRyxTQUFVaUIsSUFBSSxFQUFFQyxTQUFTLElBQUk7SUFDbkQsSUFBSUEsUUFBUTtRQUNWRCxPQUFPLElBQUksQ0FBQ0gsWUFBWSxDQUFDRztJQUMzQjtJQUNBLE9BQU8sSUFBSUUsT0FBTyxDQUFDLFlBQVksRUFBRUYsS0FBSyxZQUFZLENBQUMsRUFBRTtBQUN2RDtBQUVBOztDQUVDLEdBQ0RqQix1QkFBdUIsR0FBRyxTQUFVcUIsS0FBSyxFQUFFQyxRQUFRO0lBQ2pELElBQUlDLFNBQVN6QixLQUFLMEIsS0FBSyxDQUFDSDtJQUN4QixJQUFJSSxVQUFVSCxTQUFTQyxRQUFRLEVBQUU7SUFFakMsSUFBSUEsV0FBV0UsU0FBUztRQUN0QixPQUFPSjtJQUNUO0lBRUEsSUFBSUssT0FBT0wsTUFBTU0sS0FBSyxDQUFDO0lBQ3ZCRCxPQUFPQSxPQUFPQSxJQUFJLENBQUMsRUFBRSxHQUFHO0lBQ3hCLE9BQU9ELFFBQVFDLElBQUksQ0FBQ0E7QUFDdEI7QUFFQTs7Ozs7OztDQU9DLEdBQ0QxQiw0QkFBNEIsR0FBRyxTQUFVNkIsUUFBUTtJQUMvQyxPQUFPL0IsS0FBSzBCLEtBQUssQ0FBQ0ssVUFBVUMsR0FBRyxDQUFDQyxDQUFBQTtRQUM5QixPQUFPakMsS0FBS2tDLEtBQUssQ0FBQ0QsR0FBR0QsR0FBRyxDQUFDRyxDQUFBQTtZQUN2QixPQUFPQSxFQUFFcEIsS0FBSyxDQUFDO1FBQ2pCO0lBQ0Y7QUFDRjtBQUVBOzs7O0NBSUMsR0FDRGIsMkJBQTJCLEdBQUcsU0FBVXFCLEtBQUs7SUFDM0MsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDN0IsT0FBTztJQUNUO0lBQ0EsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDN0IsT0FBTyxXQUFXYyxJQUFJLENBQUNkO0lBQ3pCO0lBQ0EsT0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9zLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvdXRpbHMuanM/NWUyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgeyBsaXN0IH0gPSByZXF1aXJlKCdwb3N0Y3NzJylcblxuLyoqXG4gKiBUaHJvdyBzcGVjaWFsIGVycm9yLCB0byB0ZWxsIGJlbmlhcnksXG4gKiB0aGF0IHRoaXMgZXJyb3IgaXMgZnJvbSBBdXRvcHJlZml4ZXIuXG4gKi9cbm1vZHVsZS5leHBvcnRzLmVycm9yID0gZnVuY3Rpb24gKHRleHQpIHtcbiAgbGV0IGVyciA9IG5ldyBFcnJvcih0ZXh0KVxuICBlcnIuYXV0b3ByZWZpeGVyID0gdHJ1ZVxuICB0aHJvdyBlcnJcbn1cblxuLyoqXG4gKiBSZXR1cm4gYXJyYXksIHRoYXQgZG9lc27igJl0IGNvbnRhaW4gZHVwbGljYXRlcy5cbiAqL1xubW9kdWxlLmV4cG9ydHMudW5pcSA9IGZ1bmN0aW9uIChhcnJheSkge1xuICByZXR1cm4gWy4uLm5ldyBTZXQoYXJyYXkpXVxufVxuXG4vKipcbiAqIFJldHVybiBcIi13ZWJraXQtXCIgb24gXCItd2Via2l0LSBvbGRcIlxuICovXG5tb2R1bGUuZXhwb3J0cy5yZW1vdmVOb3RlID0gZnVuY3Rpb24gKHN0cmluZykge1xuICBpZiAoIXN0cmluZy5pbmNsdWRlcygnICcpKSB7XG4gICAgcmV0dXJuIHN0cmluZ1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZy5zcGxpdCgnICcpWzBdXG59XG5cbi8qKlxuICogRXNjYXBlIFJlZ0V4cCBzeW1ib2xzXG4gKi9cbm1vZHVsZS5leHBvcnRzLmVzY2FwZVJlZ2V4cCA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9bJCgpKistLj9bXFxcXFxcXV57fH1dL2csICdcXFxcJCYnKVxufVxuXG4vKipcbiAqIFJldHVybiByZWdleHAgdG8gY2hlY2ssIHRoYXQgQ1NTIHN0cmluZyBjb250YWluIHdvcmRcbiAqL1xubW9kdWxlLmV4cG9ydHMucmVnZXhwID0gZnVuY3Rpb24gKHdvcmQsIGVzY2FwZSA9IHRydWUpIHtcbiAgaWYgKGVzY2FwZSkge1xuICAgIHdvcmQgPSB0aGlzLmVzY2FwZVJlZ2V4cCh3b3JkKVxuICB9XG4gIHJldHVybiBuZXcgUmVnRXhwKGAoXnxbXFxcXHMsKF0pKCR7d29yZH0oJHxbXFxcXHMoLF0pKWAsICdnaScpXG59XG5cbi8qKlxuICogQ2hhbmdlIGNvbW1hIGxpc3RcbiAqL1xubW9kdWxlLmV4cG9ydHMuZWRpdExpc3QgPSBmdW5jdGlvbiAodmFsdWUsIGNhbGxiYWNrKSB7XG4gIGxldCBvcmlnaW4gPSBsaXN0LmNvbW1hKHZhbHVlKVxuICBsZXQgY2hhbmdlZCA9IGNhbGxiYWNrKG9yaWdpbiwgW10pXG5cbiAgaWYgKG9yaWdpbiA9PT0gY2hhbmdlZCkge1xuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgbGV0IGpvaW4gPSB2YWx1ZS5tYXRjaCgvLFxccyovKVxuICBqb2luID0gam9pbiA/IGpvaW5bMF0gOiAnLCAnXG4gIHJldHVybiBjaGFuZ2VkLmpvaW4oam9pbilcbn1cblxuLyoqXG4gKiBTcGxpdCB0aGUgc2VsZWN0b3IgaW50byBwYXJ0cy5cbiAqIEl0IHJldHVybnMgMyBsZXZlbCBkZWVwIGFycmF5IGJlY2F1c2Ugc2VsZWN0b3JzIGNhbiBiZSBjb21tYVxuICogc2VwYXJhdGVkICgxKSwgc3BhY2Ugc2VwYXJhdGVkICgyKSwgYW5kIGNvbWJpbmVkICgzKVxuICogQHBhcmFtIHtTdHJpbmd9IHNlbGVjdG9yIHNlbGVjdG9yIHN0cmluZ1xuICogQHJldHVybiB7QXJyYXk8QXJyYXk8QXJyYXk+Pn0gMyBsZXZlbCBkZWVwIGFycmF5IG9mIHNwbGl0IHNlbGVjdG9yXG4gKiBAc2VlIHV0aWxzLnRlc3QuanMgZm9yIGV4YW1wbGVzXG4gKi9cbm1vZHVsZS5leHBvcnRzLnNwbGl0U2VsZWN0b3IgPSBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgcmV0dXJuIGxpc3QuY29tbWEoc2VsZWN0b3IpLm1hcChpID0+IHtcbiAgICByZXR1cm4gbGlzdC5zcGFjZShpKS5tYXAoayA9PiB7XG4gICAgICByZXR1cm4gay5zcGxpdCgvKD89XFwufCMpL2cpXG4gICAgfSlcbiAgfSlcbn1cblxuLyoqXG4gKiBSZXR1cm4gdHJ1ZSBpZiBhIGdpdmVuIHZhbHVlIG9ubHkgY29udGFpbnMgbnVtYmVycy5cbiAqIEBwYXJhbSB7Kn0gdmFsdWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5tb2R1bGUuZXhwb3J0cy5pc1B1cmVOdW1iZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIC9eWzAtOV0rJC8udGVzdCh2YWx1ZSlcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cbiJdLCJuYW1lcyI6WyJsaXN0IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJlcnJvciIsInRleHQiLCJlcnIiLCJFcnJvciIsImF1dG9wcmVmaXhlciIsInVuaXEiLCJhcnJheSIsIlNldCIsInJlbW92ZU5vdGUiLCJzdHJpbmciLCJpbmNsdWRlcyIsInNwbGl0IiwiZXNjYXBlUmVnZXhwIiwicmVwbGFjZSIsInJlZ2V4cCIsIndvcmQiLCJlc2NhcGUiLCJSZWdFeHAiLCJlZGl0TGlzdCIsInZhbHVlIiwiY2FsbGJhY2siLCJvcmlnaW4iLCJjb21tYSIsImNoYW5nZWQiLCJqb2luIiwibWF0Y2giLCJzcGxpdFNlbGVjdG9yIiwic2VsZWN0b3IiLCJtYXAiLCJpIiwic3BhY2UiLCJrIiwiaXNQdXJlTnVtYmVyIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/value.js":
/*!************************************************!*\
  !*** ./node_modules/autoprefixer/lib/value.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nlet Prefixer = __webpack_require__(/*! ./prefixer */ \"(ssr)/./node_modules/autoprefixer/lib/prefixer.js\");\nlet OldValue = __webpack_require__(/*! ./old-value */ \"(ssr)/./node_modules/autoprefixer/lib/old-value.js\");\nlet vendor = __webpack_require__(/*! ./vendor */ \"(ssr)/./node_modules/autoprefixer/lib/vendor.js\");\nlet utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/autoprefixer/lib/utils.js\");\nclass Value extends Prefixer {\n    /**\n   * Clone decl for each prefixed values\n   */ static save(prefixes, decl) {\n        let prop = decl.prop;\n        let result = [];\n        for(let prefix in decl._autoprefixerValues){\n            let value = decl._autoprefixerValues[prefix];\n            if (value === decl.value) {\n                continue;\n            }\n            let item;\n            let propPrefix = vendor.prefix(prop);\n            if (propPrefix === \"-pie-\") {\n                continue;\n            }\n            if (propPrefix === prefix) {\n                item = decl.value = value;\n                result.push(item);\n                continue;\n            }\n            let prefixed = prefixes.prefixed(prop, prefix);\n            let rule = decl.parent;\n            if (!rule.every((i)=>i.prop !== prefixed)) {\n                result.push(item);\n                continue;\n            }\n            let trimmed = value.replace(/\\s+/, \" \");\n            let already = rule.some((i)=>i.prop === decl.prop && i.value.replace(/\\s+/, \" \") === trimmed);\n            if (already) {\n                result.push(item);\n                continue;\n            }\n            let cloned = this.clone(decl, {\n                value\n            });\n            item = decl.parent.insertBefore(decl, cloned);\n            result.push(item);\n        }\n        return result;\n    }\n    /**\n   * Save values with next prefixed token\n   */ add(decl, prefix) {\n        if (!decl._autoprefixerValues) {\n            decl._autoprefixerValues = {};\n        }\n        let value = decl._autoprefixerValues[prefix] || this.value(decl);\n        let before;\n        do {\n            before = value;\n            value = this.replace(value, prefix);\n            if (value === false) return;\n        }while (value !== before);\n        decl._autoprefixerValues[prefix] = value;\n    }\n    /**\n   * Is declaration need to be prefixed\n   */ check(decl) {\n        let value = decl.value;\n        if (!value.includes(this.name)) {\n            return false;\n        }\n        return !!value.match(this.regexp());\n    }\n    /**\n   * Return function to fast find prefixed value\n   */ old(prefix) {\n        return new OldValue(this.name, prefix + this.name);\n    }\n    /**\n   * Lazy regexp loading\n   */ regexp() {\n        return this.regexpCache || (this.regexpCache = utils.regexp(this.name));\n    }\n    /**\n   * Add prefix to values in string\n   */ replace(string, prefix) {\n        return string.replace(this.regexp(), `$1${prefix}$2`);\n    }\n    /**\n   * Get value with comments if it was not changed\n   */ value(decl) {\n        if (decl.raws.value && decl.raws.value.value === decl.value) {\n            return decl.raws.value.raw;\n        } else {\n            return decl.value;\n        }\n    }\n}\nmodule.exports = Value;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi92YWx1ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsV0FBV0QsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUUsU0FBU0YsbUJBQU9BLENBQUM7QUFDckIsSUFBSUcsUUFBUUgsbUJBQU9BLENBQUM7QUFFcEIsTUFBTUksY0FBY0w7SUFDbEI7O0dBRUMsR0FDRCxPQUFPTSxLQUFLQyxRQUFRLEVBQUVDLElBQUksRUFBRTtRQUMxQixJQUFJQyxPQUFPRCxLQUFLQyxJQUFJO1FBQ3BCLElBQUlDLFNBQVMsRUFBRTtRQUVmLElBQUssSUFBSUMsVUFBVUgsS0FBS0ksbUJBQW1CLENBQUU7WUFDM0MsSUFBSUMsUUFBUUwsS0FBS0ksbUJBQW1CLENBQUNELE9BQU87WUFFNUMsSUFBSUUsVUFBVUwsS0FBS0ssS0FBSyxFQUFFO2dCQUN4QjtZQUNGO1lBRUEsSUFBSUM7WUFDSixJQUFJQyxhQUFhWixPQUFPUSxNQUFNLENBQUNGO1lBRS9CLElBQUlNLGVBQWUsU0FBUztnQkFDMUI7WUFDRjtZQUVBLElBQUlBLGVBQWVKLFFBQVE7Z0JBQ3pCRyxPQUFPTixLQUFLSyxLQUFLLEdBQUdBO2dCQUNwQkgsT0FBT00sSUFBSSxDQUFDRjtnQkFDWjtZQUNGO1lBRUEsSUFBSUcsV0FBV1YsU0FBU1UsUUFBUSxDQUFDUixNQUFNRTtZQUN2QyxJQUFJTyxPQUFPVixLQUFLVyxNQUFNO1lBRXRCLElBQUksQ0FBQ0QsS0FBS0UsS0FBSyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFWixJQUFJLEtBQUtRLFdBQVc7Z0JBQ3pDUCxPQUFPTSxJQUFJLENBQUNGO2dCQUNaO1lBQ0Y7WUFFQSxJQUFJUSxVQUFVVCxNQUFNVSxPQUFPLENBQUMsT0FBTztZQUNuQyxJQUFJQyxVQUFVTixLQUFLTyxJQUFJLENBQ3JCSixDQUFBQSxJQUFLQSxFQUFFWixJQUFJLEtBQUtELEtBQUtDLElBQUksSUFBSVksRUFBRVIsS0FBSyxDQUFDVSxPQUFPLENBQUMsT0FBTyxTQUFTRDtZQUcvRCxJQUFJRSxTQUFTO2dCQUNYZCxPQUFPTSxJQUFJLENBQUNGO2dCQUNaO1lBQ0Y7WUFFQSxJQUFJWSxTQUFTLElBQUksQ0FBQ0MsS0FBSyxDQUFDbkIsTUFBTTtnQkFBRUs7WUFBTTtZQUN0Q0MsT0FBT04sS0FBS1csTUFBTSxDQUFDUyxZQUFZLENBQUNwQixNQUFNa0I7WUFFdENoQixPQUFPTSxJQUFJLENBQUNGO1FBQ2Q7UUFFQSxPQUFPSjtJQUNUO0lBRUE7O0dBRUMsR0FDRG1CLElBQUlyQixJQUFJLEVBQUVHLE1BQU0sRUFBRTtRQUNoQixJQUFJLENBQUNILEtBQUtJLG1CQUFtQixFQUFFO1lBQzdCSixLQUFLSSxtQkFBbUIsR0FBRyxDQUFDO1FBQzlCO1FBQ0EsSUFBSUMsUUFBUUwsS0FBS0ksbUJBQW1CLENBQUNELE9BQU8sSUFBSSxJQUFJLENBQUNFLEtBQUssQ0FBQ0w7UUFFM0QsSUFBSXNCO1FBQ0osR0FBRztZQUNEQSxTQUFTakI7WUFDVEEsUUFBUSxJQUFJLENBQUNVLE9BQU8sQ0FBQ1YsT0FBT0Y7WUFDNUIsSUFBSUUsVUFBVSxPQUFPO1FBQ3ZCLFFBQVNBLFVBQVVpQixRQUFPO1FBRTFCdEIsS0FBS0ksbUJBQW1CLENBQUNELE9BQU8sR0FBR0U7SUFDckM7SUFFQTs7R0FFQyxHQUNEa0IsTUFBTXZCLElBQUksRUFBRTtRQUNWLElBQUlLLFFBQVFMLEtBQUtLLEtBQUs7UUFDdEIsSUFBSSxDQUFDQSxNQUFNbUIsUUFBUSxDQUFDLElBQUksQ0FBQ0MsSUFBSSxHQUFHO1lBQzlCLE9BQU87UUFDVDtRQUVBLE9BQU8sQ0FBQyxDQUFDcEIsTUFBTXFCLEtBQUssQ0FBQyxJQUFJLENBQUNDLE1BQU07SUFDbEM7SUFFQTs7R0FFQyxHQUNEQyxJQUFJekIsTUFBTSxFQUFFO1FBQ1YsT0FBTyxJQUFJVCxTQUFTLElBQUksQ0FBQytCLElBQUksRUFBRXRCLFNBQVMsSUFBSSxDQUFDc0IsSUFBSTtJQUNuRDtJQUVBOztHQUVDLEdBQ0RFLFNBQVM7UUFDUCxPQUFPLElBQUksQ0FBQ0UsV0FBVyxJQUFLLEtBQUksQ0FBQ0EsV0FBVyxHQUFHakMsTUFBTStCLE1BQU0sQ0FBQyxJQUFJLENBQUNGLElBQUk7SUFDdkU7SUFFQTs7R0FFQyxHQUNEVixRQUFRZSxNQUFNLEVBQUUzQixNQUFNLEVBQUU7UUFDdEIsT0FBTzJCLE9BQU9mLE9BQU8sQ0FBQyxJQUFJLENBQUNZLE1BQU0sSUFBSSxDQUFDLEVBQUUsRUFBRXhCLE9BQU8sRUFBRSxDQUFDO0lBQ3REO0lBRUE7O0dBRUMsR0FDREUsTUFBTUwsSUFBSSxFQUFFO1FBQ1YsSUFBSUEsS0FBSytCLElBQUksQ0FBQzFCLEtBQUssSUFBSUwsS0FBSytCLElBQUksQ0FBQzFCLEtBQUssQ0FBQ0EsS0FBSyxLQUFLTCxLQUFLSyxLQUFLLEVBQUU7WUFDM0QsT0FBT0wsS0FBSytCLElBQUksQ0FBQzFCLEtBQUssQ0FBQzJCLEdBQUc7UUFDNUIsT0FBTztZQUNMLE9BQU9oQyxLQUFLSyxLQUFLO1FBQ25CO0lBQ0Y7QUFDRjtBQUVBNEIsT0FBT0MsT0FBTyxHQUFHckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi92YWx1ZS5qcz8yMzdlIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBQcmVmaXhlciA9IHJlcXVpcmUoJy4vcHJlZml4ZXInKVxubGV0IE9sZFZhbHVlID0gcmVxdWlyZSgnLi9vbGQtdmFsdWUnKVxubGV0IHZlbmRvciA9IHJlcXVpcmUoJy4vdmVuZG9yJylcbmxldCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5jbGFzcyBWYWx1ZSBleHRlbmRzIFByZWZpeGVyIHtcbiAgLyoqXG4gICAqIENsb25lIGRlY2wgZm9yIGVhY2ggcHJlZml4ZWQgdmFsdWVzXG4gICAqL1xuICBzdGF0aWMgc2F2ZShwcmVmaXhlcywgZGVjbCkge1xuICAgIGxldCBwcm9wID0gZGVjbC5wcm9wXG4gICAgbGV0IHJlc3VsdCA9IFtdXG5cbiAgICBmb3IgKGxldCBwcmVmaXggaW4gZGVjbC5fYXV0b3ByZWZpeGVyVmFsdWVzKSB7XG4gICAgICBsZXQgdmFsdWUgPSBkZWNsLl9hdXRvcHJlZml4ZXJWYWx1ZXNbcHJlZml4XVxuXG4gICAgICBpZiAodmFsdWUgPT09IGRlY2wudmFsdWUpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgbGV0IGl0ZW1cbiAgICAgIGxldCBwcm9wUHJlZml4ID0gdmVuZG9yLnByZWZpeChwcm9wKVxuXG4gICAgICBpZiAocHJvcFByZWZpeCA9PT0gJy1waWUtJykge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBpZiAocHJvcFByZWZpeCA9PT0gcHJlZml4KSB7XG4gICAgICAgIGl0ZW0gPSBkZWNsLnZhbHVlID0gdmFsdWVcbiAgICAgICAgcmVzdWx0LnB1c2goaXRlbSlcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgbGV0IHByZWZpeGVkID0gcHJlZml4ZXMucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICAgICAgbGV0IHJ1bGUgPSBkZWNsLnBhcmVudFxuXG4gICAgICBpZiAoIXJ1bGUuZXZlcnkoaSA9PiBpLnByb3AgIT09IHByZWZpeGVkKSkge1xuICAgICAgICByZXN1bHQucHVzaChpdGVtKVxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBsZXQgdHJpbW1lZCA9IHZhbHVlLnJlcGxhY2UoL1xccysvLCAnICcpXG4gICAgICBsZXQgYWxyZWFkeSA9IHJ1bGUuc29tZShcbiAgICAgICAgaSA9PiBpLnByb3AgPT09IGRlY2wucHJvcCAmJiBpLnZhbHVlLnJlcGxhY2UoL1xccysvLCAnICcpID09PSB0cmltbWVkXG4gICAgICApXG5cbiAgICAgIGlmIChhbHJlYWR5KSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKGRlY2wsIHsgdmFsdWUgfSlcbiAgICAgIGl0ZW0gPSBkZWNsLnBhcmVudC5pbnNlcnRCZWZvcmUoZGVjbCwgY2xvbmVkKVxuXG4gICAgICByZXN1bHQucHVzaChpdGVtKVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8qKlxuICAgKiBTYXZlIHZhbHVlcyB3aXRoIG5leHQgcHJlZml4ZWQgdG9rZW5cbiAgICovXG4gIGFkZChkZWNsLCBwcmVmaXgpIHtcbiAgICBpZiAoIWRlY2wuX2F1dG9wcmVmaXhlclZhbHVlcykge1xuICAgICAgZGVjbC5fYXV0b3ByZWZpeGVyVmFsdWVzID0ge31cbiAgICB9XG4gICAgbGV0IHZhbHVlID0gZGVjbC5fYXV0b3ByZWZpeGVyVmFsdWVzW3ByZWZpeF0gfHwgdGhpcy52YWx1ZShkZWNsKVxuXG4gICAgbGV0IGJlZm9yZVxuICAgIGRvIHtcbiAgICAgIGJlZm9yZSA9IHZhbHVlXG4gICAgICB2YWx1ZSA9IHRoaXMucmVwbGFjZSh2YWx1ZSwgcHJlZml4KVxuICAgICAgaWYgKHZhbHVlID09PSBmYWxzZSkgcmV0dXJuXG4gICAgfSB3aGlsZSAodmFsdWUgIT09IGJlZm9yZSlcblxuICAgIGRlY2wuX2F1dG9wcmVmaXhlclZhbHVlc1twcmVmaXhdID0gdmFsdWVcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyBkZWNsYXJhdGlvbiBuZWVkIHRvIGJlIHByZWZpeGVkXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgbGV0IHZhbHVlID0gZGVjbC52YWx1ZVxuICAgIGlmICghdmFsdWUuaW5jbHVkZXModGhpcy5uYW1lKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgcmV0dXJuICEhdmFsdWUubWF0Y2godGhpcy5yZWdleHAoKSlcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZnVuY3Rpb24gdG8gZmFzdCBmaW5kIHByZWZpeGVkIHZhbHVlXG4gICAqL1xuICBvbGQocHJlZml4KSB7XG4gICAgcmV0dXJuIG5ldyBPbGRWYWx1ZSh0aGlzLm5hbWUsIHByZWZpeCArIHRoaXMubmFtZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBMYXp5IHJlZ2V4cCBsb2FkaW5nXG4gICAqL1xuICByZWdleHAoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVnZXhwQ2FjaGUgfHwgKHRoaXMucmVnZXhwQ2FjaGUgPSB1dGlscy5yZWdleHAodGhpcy5uYW1lKSlcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgcHJlZml4IHRvIHZhbHVlcyBpbiBzdHJpbmdcbiAgICovXG4gIHJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodGhpcy5yZWdleHAoKSwgYCQxJHtwcmVmaXh9JDJgKVxuICB9XG5cbiAgLyoqXG4gICAqIEdldCB2YWx1ZSB3aXRoIGNvbW1lbnRzIGlmIGl0IHdhcyBub3QgY2hhbmdlZFxuICAgKi9cbiAgdmFsdWUoZGVjbCkge1xuICAgIGlmIChkZWNsLnJhd3MudmFsdWUgJiYgZGVjbC5yYXdzLnZhbHVlLnZhbHVlID09PSBkZWNsLnZhbHVlKSB7XG4gICAgICByZXR1cm4gZGVjbC5yYXdzLnZhbHVlLnJhd1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZGVjbC52YWx1ZVxuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFZhbHVlXG4iXSwibmFtZXMiOlsiUHJlZml4ZXIiLCJyZXF1aXJlIiwiT2xkVmFsdWUiLCJ2ZW5kb3IiLCJ1dGlscyIsIlZhbHVlIiwic2F2ZSIsInByZWZpeGVzIiwiZGVjbCIsInByb3AiLCJyZXN1bHQiLCJwcmVmaXgiLCJfYXV0b3ByZWZpeGVyVmFsdWVzIiwidmFsdWUiLCJpdGVtIiwicHJvcFByZWZpeCIsInB1c2giLCJwcmVmaXhlZCIsInJ1bGUiLCJwYXJlbnQiLCJldmVyeSIsImkiLCJ0cmltbWVkIiwicmVwbGFjZSIsImFscmVhZHkiLCJzb21lIiwiY2xvbmVkIiwiY2xvbmUiLCJpbnNlcnRCZWZvcmUiLCJhZGQiLCJiZWZvcmUiLCJjaGVjayIsImluY2x1ZGVzIiwibmFtZSIsIm1hdGNoIiwicmVnZXhwIiwib2xkIiwicmVnZXhwQ2FjaGUiLCJzdHJpbmciLCJyYXdzIiwicmF3IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/value.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/autoprefixer/lib/vendor.js":
/*!*************************************************!*\
  !*** ./node_modules/autoprefixer/lib/vendor.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = {\n    prefix (prop) {\n        let match = prop.match(/^(-\\w+-)/);\n        if (match) {\n            return match[0];\n        }\n        return \"\";\n    },\n    unprefixed (prop) {\n        return prop.replace(/^-\\w+-/, \"\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi92ZW5kb3IuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxPQUFPQyxPQUFPLEdBQUc7SUFDZkMsUUFBT0MsSUFBSTtRQUNULElBQUlDLFFBQVFELEtBQUtDLEtBQUssQ0FBQztRQUN2QixJQUFJQSxPQUFPO1lBQ1QsT0FBT0EsS0FBSyxDQUFDLEVBQUU7UUFDakI7UUFFQSxPQUFPO0lBQ1Q7SUFFQUMsWUFBV0YsSUFBSTtRQUNiLE9BQU9BLEtBQUtHLE9BQU8sQ0FBQyxVQUFVO0lBQ2hDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3MvLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi92ZW5kb3IuanM/ODQyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgcHJlZml4KHByb3ApIHtcbiAgICBsZXQgbWF0Y2ggPSBwcm9wLm1hdGNoKC9eKC1cXHcrLSkvKVxuICAgIGlmIChtYXRjaCkge1xuICAgICAgcmV0dXJuIG1hdGNoWzBdXG4gICAgfVxuXG4gICAgcmV0dXJuICcnXG4gIH0sXG5cbiAgdW5wcmVmaXhlZChwcm9wKSB7XG4gICAgcmV0dXJuIHByb3AucmVwbGFjZSgvXi1cXHcrLS8sICcnKVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInByZWZpeCIsInByb3AiLCJtYXRjaCIsInVucHJlZml4ZWQiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/autoprefixer/lib/vendor.js\n");

/***/ })

};
;